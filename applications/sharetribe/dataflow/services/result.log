SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_data 
		 6: data[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_data 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->success 
		 2: 
		 3: ATTRASSIGN %self->data data[3.0,2.5,] 
		 4: RETURN data[3.0,2.5,] %self[4.1,4.3,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = and_then instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_%v_3 
		 6: def_block %v_3[2.5,] 
		 7: 
		 8: %self->data def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 9: block->call def_%v_5 block[2.6,] %v_4[2.8,] 	 SYMBOL:	 ARGS:%v_4,
		 10: COPY TYPE_PASS def_result %v_5[2.9,] 
		 11: 
		 12: %v_5->tap def_%v_6 %v_5[2.9,] %self[2.0,2.8,] 	 SYMBOL:	 ARGS:%v_5,
CLOSURE BEGIN: res[] %self[2.0,2.8,] 
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_res 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 13 
	datadep: 
	instructions:
		 0: 
		 1: (Result) def_%cl_1_3 
		 2: (inherit Success) def_%cl_1_4 %cl_1_3[3.1,] 
		 3: %cl_1_4[3.2,] 
BB 4
	outgoing: 5 13 
	datadep: 
	instructions:
		 0: %cl_1_3->const_missing def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:Success,	 ARGS:Symbol,
BB 5
	outgoing: 6 9 13 
	datadep: 
	instructions:
		 0: res->is_a? def_%cl_1_5 res[2.2,] %cl_1_4[4.0,3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 1: BRANCH %cl_1_5[5.0,] 
BB 6
	outgoing: 7 8 13 
	datadep: 
	instructions:
		 0: (Result) def_%cl_1_6 
		 1: (inherit Error) def_%cl_1_7 %cl_1_6[6.0,] 
		 2: %cl_1_7[6.1,] 
BB 7
	outgoing: 8 13 
	datadep: 
	instructions:
		 0: %cl_1_6->const_missing def_%cl_1_7 %cl_1_6[6.0,] 	 SYMBOL:Error,	 ARGS:Symbol,
BB 8
	outgoing: 9 13 
	datadep: 
	instructions:
		 0: res->is_a? def_%cl_1_8 res[2.2,] %cl_1_7[7.0,6.1,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 1: COPY TYPE_PASS def_%cl_1_5 %cl_1_8[8.0,] 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_5[8.1,5.0,] 
BB 10
	outgoing: 15 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_9 
		 1: RETURN %cl_1_9[10.0,] %self[2.0,] 
BB 11
	outgoing: 13 15 
	datadep: 
	instructions:
		 0: (ArgumentError) def_%cl_1_10 
		 1: COPY TYPE_StringLiteral "Block must return Result" def_%cl_1_11 
		 2: %cl_1_10->new def_%cl_1_12 %cl_1_10[11.0,] %cl_1_11[11.1,] 	 SYMBOL:	 ARGS:%cl_1_11,
		 3: %self->raise def_%cl_1_13 %self[2.0,] %cl_1_12[11.2,] 	 SYMBOL:	 ARGS:%cl_1_12,
		 4: RETURN %cl_1_13[11.3,] %self[11.3,2.0,] 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: def_%cl_1_14 
		 1: def_%cl_1_15 %cl_1_14[13.0,] 
		 2: RETURN %cl_1_15[13.1,] %self[2.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 13: RETURN %v_6[2.12,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = on_success instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_%v_3 
		 6: def_block %v_3[2.5,] 
		 7: 
		 8: %self->data def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 9: block->call def_%v_5 block[2.6,] %v_4[2.8,] 	 SYMBOL:	 ARGS:%v_4,
		 10: 
		 11: RETURN %self[2.0,2.8,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = on_error instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_%v_3 
		 6: COPY TYPE_PASS def_block %v_3[2.5,] 
		 7: 
		 8: RETURN %self[2.0,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = maybe instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->data def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %self->Maybe def_%v_4 %self[2.0,2.6,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_error_msg 
		 6: RECEIVECONSTARG def_data 
		 7: data[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_data 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->success 
		 2: 
		 3: (StandardError) def_%v_3 
		 4: error_msg->is_a? def_%v_4 error_msg[2.5,] %v_3[4.3,] 	 SYMBOL:	 ARGS:%v_3,
		 5: BRANCH %v_4[4.4,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_ex error_msg[2.5,] 
		 2: 
		 3: error_msg->message def_%v_5 error_msg[2.5,] 	 SYMBOL:	 ARGS:
		 4: ATTRASSIGN %self->error_msg %v_5[5.3,] 
		 5: 
		 6: ATTRASSIGN %self->data ex[5.1,] 
		 7: COPY TYPE_PASS def_%v_6 ex[5.1,] 
		 8: RETURN ex[5.1,] %self[5.4,5.6,4.1,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->error_msg error_msg[2.5,] 
		 2: 
		 3: ATTRASSIGN %self->data data[3.0,2.6,] 
		 4: RETURN data[3.0,2.6,] %self[6.1,6.3,4.1,2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = and_then instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_%v_3 
		 6: COPY TYPE_PASS def_block %v_3[2.5,] 
		 7: 
		 8: RETURN %self[2.0,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = on_success instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_%v_3 
		 6: COPY TYPE_PASS def_block %v_3[2.5,] 
		 7: 
		 8: RETURN %self[2.0,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = on_error instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_%v_3 
		 6: def_block %v_3[2.5,] 
		 7: 
		 8: %self->error_msg def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 9: %self->data def_%v_5 %self[2.0,2.8,] 	 SYMBOL:	 ARGS:
		 10: block->call def_%v_6 block[2.6,] %v_4[2.8,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_4,%v_5,
		 11: 
		 12: RETURN %self[2.0,2.8,2.9,] %self[2.0,2.8,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = maybe instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->Maybe def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:Nil,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = all instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_operations 
		 6: 
		 7: (Result) def_%v_3 
		 8: (inherit Success) def_%v_4 %v_3[2.7,] 
		 9: %v_4[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.7,] 	 SYMBOL:Success,	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_5 
		 1: %v_4->new def_%v_6 %v_4[3.0,2.8,] %v_5[4.0,] 	 SYMBOL:	 ARGS:%v_5,
		 2: operations->inject def_%v_7 operations[2.5,] %v_6[4.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_6,operations,
CLOSURE BEGIN: res[] op[] op_res[] %self[2.0,] res_data[] 
BB 1
	outgoing: 23 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_res 
		 3: RECEIVEARG def_op 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 19 21 
	datadep: 
	instructions:
		 0: 
		 1: res->success def_%cl_1_3 res[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 5 6 21 
	datadep: 
	instructions:
		 0: 
		 1: res->data def_%cl_1_4 res[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_res_data %cl_1_4[4.1,] 
		 3: 
		 4: def_%cl_1_5 %cl_1_4[4.1,] 
		 5: op->call def_%cl_1_6 op[2.3,] %cl_1_5[4.4,] 	 SYMBOL:	 ARGS:Splat,
		 6: COPY TYPE_PASS def_op_res %cl_1_6[4.5,] 
		 7: 
		 8: (Result) def_%cl_1_7 
		 9: (inherit Success) def_%cl_1_8 %cl_1_7[4.8,] 
		 10: %cl_1_8[4.9,] 
BB 5
	outgoing: 6 21 
	datadep: 
	instructions:
		 0: %cl_1_7->const_missing def_%cl_1_8 %cl_1_7[4.8,] 	 SYMBOL:Success,	 ARGS:Symbol,
BB 6
	outgoing: 7 10 21 
	datadep: 
	instructions:
		 0: op_res->is_a? def_%cl_1_9 op_res[4.6,] %cl_1_8[5.0,4.9,] 	 SYMBOL:	 ARGS:%cl_1_8,
		 1: BRANCH %cl_1_9[6.0,] 
BB 7
	outgoing: 8 9 21 
	datadep: 
	instructions:
		 0: (Result) def_%cl_1_10 
		 1: (inherit Error) def_%cl_1_11 %cl_1_10[7.0,] 
		 2: %cl_1_11[7.1,] 
BB 8
	outgoing: 9 21 
	datadep: 
	instructions:
		 0: %cl_1_10->const_missing def_%cl_1_11 %cl_1_10[7.0,] 	 SYMBOL:Error,	 ARGS:Symbol,
BB 9
	outgoing: 10 21 
	datadep: 
	instructions:
		 0: op_res->is_a? def_%cl_1_12 op_res[4.6,] %cl_1_11[8.0,7.1,] 	 SYMBOL:	 ARGS:%cl_1_11,
		 1: COPY TYPE_PASS def_%cl_1_9 %cl_1_12[9.0,] 
BB 10
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_9[9.1,6.0,] 
BB 11
	outgoing: 13 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_13 
		 1: 
BB 12
	outgoing: 13 21 
	datadep: 
	instructions:
		 0: (ArgumentError) def_%cl_1_14 
		 1: COPY TYPE_StringLiteral "Lambda must return Result" def_%cl_1_15 
		 2: %cl_1_14->new def_%cl_1_16 %cl_1_14[12.0,] %cl_1_15[12.1,] 	 SYMBOL:	 ARGS:%cl_1_15,
		 3: %self->raise def_%cl_1_17 %self[2.0,] %cl_1_16[12.2,] 	 SYMBOL:	 ARGS:%cl_1_16,
		 4: COPY TYPE_PASS def_%cl_1_13 %cl_1_17[12.3,] 
BB 13
	outgoing: 14 17 21 
	datadep: 
	instructions:
		 0: 
		 1: op_res->success def_%cl_1_18 op_res[4.6,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_18[13.1,] 
BB 14
	outgoing: 15 16 21 
	datadep: 
	instructions:
		 0: 
		 1: (Result) def_%cl_1_19 
		 2: (inherit Success) def_%cl_1_20 %cl_1_19[14.1,] 
		 3: %cl_1_20[14.2,] 
BB 15
	outgoing: 16 21 
	datadep: 
	instructions:
		 0: %cl_1_19->const_missing def_%cl_1_20 %cl_1_19[14.1,] 	 SYMBOL:Success,	 ARGS:Symbol,
BB 16
	outgoing: 18 21 
	datadep: 
	instructions:
		 0: op_res->data def_%cl_1_21 op_res[4.6,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_Array def_%cl_1_22 %cl_1_21[16.0,] 
		 2: res_data->concat def_%cl_1_23 res_data[4.2,] %cl_1_22[16.1,] 	 SYMBOL:	 ARGS:%cl_1_22,
		 3: %cl_1_20->new def_%cl_1_24 %cl_1_20[15.0,14.2,] %cl_1_23[16.2,] 	 SYMBOL:	 ARGS:%cl_1_23,
		 4: 
BB 17
	outgoing: 18 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%cl_1_24 op_res[4.6,] 
BB 18
	outgoing: 23 
	datadep: 
	instructions:
		 0: RETURN %cl_1_24[17.1,16.3,] %self[2.0,] 
BB 19
	outgoing: 23 
	datadep: 
	instructions:
		 0: 
		 1: RETURN res[2.2,] %self[2.0,] 
BB 21
	outgoing: 23 
	datadep: 
	instructions:
		 0: def_%cl_1_25 
		 1: def_%cl_1_26 %cl_1_25[21.0,] 
		 2: RETURN %cl_1_26[21.1,] %self[2.0,] 
BB 23
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: op[2.3,] op_res[4.6,] res_data[4.2,] 
		 3: RETURN %v_7[4.2,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

