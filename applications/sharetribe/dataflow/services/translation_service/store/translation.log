SET IRMethod, name = create instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_community_id 
		 6: community_id[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: def_translation_groups 
		 1: translation_groups[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_3 
		 1: COPY TYPE_PASS def_translation_groups %v_3[5.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: translation_groups->map def_%v_4 translation_groups[5.1,4.0,] %self[2.0,] 	 SYMBOL:	 ARGS:translation_groups,
CLOSURE BEGIN: group[] %self[2.0,] community_id[2.5,] translation[] key[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_group 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: group->[] def_%cl_1_3 group[2.2,] 	 SYMBOL:translation_key,	 ARGS:Symbol,
		 2: %self->Maybe def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: %self->gen_translation_uuid def_%cl_1_5 %self[3.2,2.0,] community_id[] 	 SYMBOL:	 ARGS:community_id,
		 4: %cl_1_4->or_else def_%cl_1_6 %cl_1_4[3.2,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 5: COPY TYPE_PASS def_key %cl_1_6[3.4,] 
		 6: 
		 7: group->[] def_%cl_1_7 group[3.1,2.2,] 	 SYMBOL:translations,	 ARGS:Symbol,
		 8: %cl_1_7->map def_%cl_1_8 %cl_1_7[3.7,] %self[3.2,3.3,2.0,] 	 SYMBOL:	 ARGS:%cl_1_7,
CLOSURE BEGIN: translation[] community_id[] key[3.5,] %self[3.2,3.3,2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_translation 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: translation->[] def_%cl_2_3 translation[2.2,] 	 SYMBOL:locale,	 ARGS:Symbol,
		 2: translation->[] def_%cl_2_4 translation[3.1,2.2,] 	 SYMBOL:translation,	 ARGS:Symbol,
		 3: HASH-community_id-translation_key-locale-translation- def_%cl_2_5 community_id[] key[] %cl_2_3[3.1,] %cl_2_4[3.2,] 
		 4: COPY TYPE_PASS def_translation_hash %cl_2_5[3.3,] 
		 5: 
		 6: %self->save_translation def_%cl_2_6 %self[2.0,] %cl_2_5[3.3,] 	 SYMBOL:	 ARGS:translation_hash,
		 7: RETURN %cl_2_6[3.6,] %self[3.6,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_7 
		 1: def_%cl_2_8 %cl_2_7[4.0,] 
		 2: RETURN %cl_2_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: translation_hash[3.4,] 
		 9: COPY TYPE_PASS def_translations %cl_1_8[3.8,] 
		 10: 
		 11: HASH-translation_key-translations- def_%cl_1_9 key[3.5,] %cl_1_8[3.8,] 
		 12: RETURN %cl_1_9[3.11,] %self[3.2,3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_10 
		 1: def_%cl_1_11 %cl_1_10[4.0,] 
		 2: RETURN %cl_1_11[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: translations[3.9,] key[3.5,] 
		 2: COPY TYPE_PASS def_created_translations %v_4[6.1,] 
		 3: 
		 4: %self->invalidate_cache def_%v_5 %self[2.0,] community_id[2.5,] 	 SYMBOL:	 ARGS:community_id,
		 5: 
		 6: RETURN created_translations[6.2,] %self[6.4,2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get instanceMethod = true
BB 1
	outgoing: 17 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_community_id 
		 6: community_id[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: def_translation_keys 
		 1: translation_keys[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_3 
		 1: COPY TYPE_PASS def_translation_keys %v_3[5.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: def_locales 
		 1: locales[6.0,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_4 
		 1: COPY TYPE_PASS def_locales %v_4[7.0,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: def_fallback_locale 
		 1: fallback_locale[8.0,] 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_fallback_locale 
BB 10
	outgoing: 11 15 
	datadep: 
	instructions:
		 0: 
		 1: locales->present? def_%v_5 locales[7.1,6.0,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_5[10.1,] 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: 
		 1: fallback_locale->present? def_%v_6 fallback_locale[9.0,8.0,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_6[11.1,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_7 fallback_locale[9.0,8.0,] 
		 1: locales->| def_%v_8 locales[7.1,6.0,] %v_7[12.0,] 	 SYMBOL:	 ARGS:%v_7,
		 2: COPY TYPE_PASS def_locales_with_fallback %v_8[12.1,] 
		 3: 
BB 13
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_8 
BB 14
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
		 1: %self->get_search_hash def_%v_9 %self[2.0,] community_id[2.5,] translation_keys[5.1,4.0,] locales_with_fallback[12.2,] 	 SYMBOL:	 ARGS:community_id,translation_keys,locales_with_fallback,
		 2: %self->get_translations def_%v_10 %self[14.1,2.0,] %v_9[14.1,] 	 SYMBOL:	 ARGS:%v_9,
		 3: COPY TYPE_PASS def_translations %v_10[14.2,] 
		 4: 
		 5: %self->fill_in_delta def_%v_11 %self[14.1,14.2,2.0,] %v_10[14.2,] translation_keys[5.1,4.0,] locales[7.1,6.0,] fallback_locale[9.0,8.0,] 	 SYMBOL:	 ARGS:translations,translation_keys,locales,fallback_locale,
		 6: RETURN %v_11[14.5,] %self[14.1,14.2,14.5,2.0,] 
BB 15
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
		 1: %self->get_search_hash def_%v_12 %self[2.0,] community_id[2.5,] translation_keys[5.1,4.0,] locales[7.1,6.0,] 	 SYMBOL:	 ARGS:community_id,translation_keys,locales,
		 2: %self->get_translations def_%v_13 %self[15.1,2.0,] %v_12[15.1,] 	 SYMBOL:	 ARGS:%v_12,
		 3: RETURN %v_13[15.2,] %self[15.1,15.2,2.0,] 
BB 17
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = delete instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_community_id 
		 6: community_id[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: def_translation_keys 
		 1: translation_keys[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_3 
		 1: COPY TYPE_PASS def_translation_keys %v_3[5.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: (CommunityTranslationModel) def_%v_4 
		 2: HASH-community_id-translation_key- def_%v_5 community_id[2.5,] translation_keys[5.1,4.0,] 
		 3: %v_4->where def_%v_6 %v_4[6.1,] %v_5[6.2,] 	 SYMBOL:	 ARGS:%v_5,
		 4: %self->Maybe def_%v_7 %self[2.0,] %v_6[6.3,] 	 SYMBOL:	 ARGS:%v_6,
		 5: %v_7->map def_%v_8 %v_7[6.4,] %self[6.4,2.0,] 	 SYMBOL:	 ARGS:%v_7,
CLOSURE BEGIN: models[] %self[6.4,2.0,] model[] hash[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_models 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: models->map def_%cl_1_3 models[2.2,] %self[2.0,] 	 SYMBOL:	 ARGS:models,
CLOSURE BEGIN: %self[2.0,] model[] hash[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_model 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->from_model def_%cl_2_3 %self[2.0,] model[2.2,] 	 SYMBOL:	 ARGS:model,
		 2: COPY TYPE_PASS def_hash %cl_2_3[3.1,] 
		 3: 
		 4: model->destroy def_%cl_2_4 model[2.2,] 	 SYMBOL:	 ARGS:
		 5: 
		 6: RETURN hash[3.2,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: hash[3.2,] 
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 6: COPY TYPE_Array def_%v_9 
		 7: %v_8->or_else def_%v_10 %v_8[6.5,] %v_9[6.6,] 	 SYMBOL:	 ARGS:%v_9,
		 8: COPY TYPE_PASS def_deleted_translations %v_10[6.7,] 
		 9: 
		 10: %self->invalidate_cache def_%v_11 %self[6.4,2.0,] community_id[2.5,] 	 SYMBOL:	 ARGS:community_id,
		 11: 
		 12: RETURN deleted_translations[6.8,] %self[6.4,6.10,2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = gen_translation_uuid instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_community_id 
		 6: 
		 7: (SecureRandom) def_%v_3 
		 8: %v_3->uuid def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_translations instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_options 
		 6: 
		 7: options->assert_valid_keys def_%v_3 options[2.5,] 	 SYMBOL:community_id,translation_keys,locales,	 ARGS:Symbol,Symbol,Symbol,
		 8: 
		 9: options->[] def_%v_4 options[2.5,2.7,] 	 SYMBOL:community_id,	 ARGS:Symbol,
		 10: %self->community_translations_cache def_%v_5 %self[2.0,] %v_4[2.9,] 	 SYMBOL:	 ARGS:%v_4,
		 11: %v_5->select def_%v_6 %v_5[2.10,] %self[2.0,2.10,] 	 SYMBOL:	 ARGS:%v_5,
CLOSURE BEGIN: options[2.5,2.7,2.9,] %self[2.0,2.10,] translation[] keys[] locales[] key_match[] locale_match[] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_translation 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: options->[] def_%cl_1_3 options[] 	 SYMBOL:translation_keys,	 ARGS:Symbol,
		 2: %self->Maybe def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: %cl_1_4->map def_%cl_1_5 %cl_1_4[3.2,] %self[3.2,2.0,] 	 SYMBOL:	 ARGS:%cl_1_4,
CLOSURE BEGIN: translation[2.2,] keys[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_keys 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: translation->[] def_%cl_2_3 translation[] 	 SYMBOL:translation_key,	 ARGS:Symbol,
		 2: keys->include? def_%cl_2_4 keys[2.2,] %cl_2_3[3.1,] 	 SYMBOL:	 ARGS:%cl_2_3,
		 3: RETURN %cl_2_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 4: %cl_1_5->or_else def_%cl_1_6 %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:Boolean,
		 5: COPY TYPE_PASS def_key_match %cl_1_6[3.4,] 
		 6: 
		 7: options->[] def_%cl_1_7 options[3.1,] 	 SYMBOL:locales,	 ARGS:Symbol,
		 8: %self->Maybe def_%cl_1_8 %self[3.2,2.0,] %cl_1_7[3.7,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 9: %cl_1_8->map def_%cl_1_9 %cl_1_8[3.8,] %self[3.2,3.8,2.0,] 	 SYMBOL:	 ARGS:%cl_1_8,
CLOSURE BEGIN: translation[2.2,] locales[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_locales 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: translation->[] def_%cl_3_3 translation[] 	 SYMBOL:locale,	 ARGS:Symbol,
		 2: locales->include? def_%cl_3_4 locales[2.2,] %cl_3_3[3.1,] 	 SYMBOL:	 ARGS:%cl_3_3,
		 3: RETURN %cl_3_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_5 
		 1: def_%cl_3_6 %cl_3_5[4.0,] 
		 2: RETURN %cl_3_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: %cl_1_9->or_else def_%cl_1_10 %cl_1_9[3.9,] 	 SYMBOL:	 ARGS:Boolean,
		 11: COPY TYPE_PASS def_locale_match %cl_1_10[3.10,] 
		 12: 
		 13: COPY TYPE_PASS def_%cl_1_11 key_match[3.5,] 
		 14: BRANCH key_match[3.5,] 
BB 4
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN locale_match[3.11,] %self[2.0,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %cl_1_11[3.13,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_12 
		 1: def_%cl_1_13 %cl_1_12[6.0,] 
		 2: RETURN %cl_1_13[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: key_match[3.5,] locale_match[3.11,] 
		 12: RETURN %v_6[2.11,] %self[2.0,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = create_translation instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_options 
		 6: 
		 7: options->assert_valid_keys def_%v_3 options[2.5,] 	 SYMBOL:community_id,translation_key,locale,translation,	 ARGS:Symbol,Symbol,Symbol,Symbol,
		 8: 
		 9: (CommunityTranslationModel) def_%v_4 
		 10: %v_4->create! def_%v_5 %v_4[2.9,] options[2.5,2.7,] 	 SYMBOL:	 ARGS:options,
		 11: %self->from_model def_%v_6 %self[2.0,] %v_5[2.10,] 	 SYMBOL:	 ARGS:%v_5,
		 12: RETURN %v_6[2.11,] %self[2.0,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_translation instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_options 
		 6: 
		 7: options->assert_valid_keys def_%v_3 options[2.5,] 	 SYMBOL:id,translation,	 ARGS:Symbol,Symbol,
		 8: 
		 9: (CommunityTranslationModel) def_%v_4 
		 10: options->[] def_%v_5 options[2.5,2.7,] 	 SYMBOL:id,	 ARGS:Symbol,
		 11: options->slice def_%v_6 options[2.5,2.7,2.10,] 	 SYMBOL:translation,	 ARGS:Symbol,
		 12: %v_4->update def_%v_7 %v_4[2.9,] %v_5[2.10,] %v_6[2.11,] 	 SYMBOL:	 ARGS:%v_5,%v_6,
		 13: %self->from_model def_%v_8 %self[2.0,] %v_7[2.12,] 	 SYMBOL:	 ARGS:%v_7,
		 14: RETURN %v_8[2.13,] %self[2.0,2.13,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = save_translation instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_options 
		 6: 
		 7: options->assert_valid_keys def_%v_3 options[2.5,] 	 SYMBOL:community_id,translation_key,locale,translation,	 ARGS:Symbol,Symbol,Symbol,Symbol,
		 8: 
		 9: (CommunityTranslationModel) def_%v_4 
		 10: options->slice def_%v_5 options[2.5,2.7,] 	 SYMBOL:community_id,translation_key,locale,	 ARGS:Symbol,Symbol,Symbol,
		 11: %v_4->where def_%v_6 %v_4[2.9,] %v_5[2.10,] 	 SYMBOL:	 ARGS:%v_5,
		 12: %v_6->first def_%v_7 %v_6[2.11,] 	 SYMBOL:	 ARGS:
		 13: COPY TYPE_PASS def_existing_translation %v_7[2.12,] 
		 14: 
		 15: %v_7->present? def_%v_8 %v_7[2.12,] 	 SYMBOL:	 ARGS:
		 16: BRANCH %v_8[2.15,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: existing_translation->id def_%v_9 existing_translation[2.13,] 	 SYMBOL:	 ARGS:
		 2: options->[] def_%v_10 options[2.5,] 	 SYMBOL:translation,	 ARGS:Symbol,
		 3: HASH-id-translation- def_%v_11 %v_9[3.1,] %v_10[3.2,] 
		 4: %self->update_translation def_%v_12 %self[2.0,] %v_11[3.3,] 	 SYMBOL:	 ARGS:%v_11,
		 5: RETURN %v_12[3.4,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: options->slice def_%v_13 options[2.5,] 	 SYMBOL:community_id,translation_key,locale,translation,	 ARGS:Symbol,Symbol,Symbol,Symbol,
		 2: %self->create_translation def_%v_14 %self[2.0,] %v_13[4.1,] 	 SYMBOL:	 ARGS:%v_13,
		 3: RETURN %v_14[4.2,] %self[4.2,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_search_hash instanceMethod = true
BB 1
	outgoing: 13 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_community_id 
		 6: RECEIVEARG def_translation_keys 
		 7: RECEIVEARG def_locales 
		 8: 
		 9: HASH-community_id- def_%v_3 community_id[2.5,] 
		 10: COPY TYPE_PASS def_search_hash %v_3[2.9,] 
		 11: 
		 12: translation_keys->present? def_%v_4 translation_keys[2.6,] 	 SYMBOL:	 ARGS:
		 13: BRANCH %v_4[2.12,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: (Array) def_%v_5 
		 1: translation_keys->kind_of? def_%v_6 translation_keys[2.6,] %v_5[3.0,] 	 SYMBOL:	 ARGS:%v_5,
		 2: COPY TYPE_PASS def_%v_4 %v_6[3.1,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_4[3.2,2.12,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: HASH-translation_keys- def_%v_7 translation_keys[2.6,] 
		 2: search_hash->merge! def_%v_8 search_hash[2.10,] %v_7[5.1,] 	 SYMBOL:	 ARGS:%v_7,
		 3: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_8 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: locales->present? def_%v_9 locales[2.7,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_9[7.1,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: (Array) def_%v_10 
		 1: locales->kind_of? def_%v_11 locales[2.7,] %v_10[8.0,] 	 SYMBOL:	 ARGS:%v_10,
		 2: COPY TYPE_PASS def_%v_9 %v_11[8.1,] 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: BRANCH %v_9[8.2,7.1,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: HASH-locales- def_%v_12 locales[2.7,] 
		 2: search_hash->merge! def_%v_13 search_hash[2.10,] %v_12[10.1,] 	 SYMBOL:	 ARGS:%v_12,
		 3: 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_13 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: 
		 1: RETURN search_hash[2.10,] %self[2.0,] 
BB 13
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = fill_in_delta instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_translations_hash 
		 6: RECEIVEARG def_translation_keys 
		 7: RECEIVEARG def_locales 
		 8: RECEIVEARG def_fallback_locale 
		 9: 
		 10: 
		 11: translation_keys->present? def_%v_3 translation_keys[2.6,] 	 SYMBOL:	 ARGS:
		 12: BRANCH %v_3[2.11,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_4 translation_keys[2.6,] 
		 2: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: translations_hash->map def_%v_5 translations_hash[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:translations_hash,
CLOSURE BEGIN: translation[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_translation 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: translation->[] def_%cl_1_3 translation[2.2,] 	 SYMBOL:translation_key,	 ARGS:Symbol,
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: %v_5->uniq def_%v_6 %v_5[4.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_PASS def_%v_4 %v_6[4.2,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_keys %v_4[4.3,3.1,] 
		 1: 
		 2: COPY TYPE_Array def_%v_7 
		 3: COPY TYPE_PASS def_results %v_7[5.2,] 
		 4: 
		 5: %v_4->each def_%v_8 %v_4[4.3,3.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: locales[2.7,] %self[2.0,] translations_hash[2.5,] t[] key[] locale[] fallback_locale[2.8,] results[5.3,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_key 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: locales->each def_%cl_2_3 locales[] %self[2.0,] 	 SYMBOL:	 ARGS:locales,
CLOSURE BEGIN: translations_hash[] %self[2.0,] t[] key[2.2,] locale[] fallback_locale[] results[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_locale 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: translations_hash->find def_%cl_3_3 translations_hash[] %self[2.0,] 	 SYMBOL:	 ARGS:translations_hash,
CLOSURE BEGIN: t[] key[] locale[2.2,] 
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_4_0 
		 2: RECEIVEARG def_t 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 8 
	datadep: 
	instructions:
		 0: 
		 1: t->[] def_%cl_4_3 t[2.2,] 	 SYMBOL:translation_key,	 ARGS:Symbol,
		 2: %cl_4_3->== def_%cl_4_4 %cl_4_3[3.1,] key[] 	 SYMBOL:	 ARGS:key,
		 3: BRANCH %cl_4_4[3.2,] 
BB 4
	outgoing: 5 8 
	datadep: 
	instructions:
		 0: t->[] def_%cl_4_5 t[2.2,] 	 SYMBOL:locale,	 ARGS:Symbol,
		 1: %cl_4_5->== def_%cl_4_6 %cl_4_5[4.0,] locale[] 	 SYMBOL:	 ARGS:locale,
		 2: COPY TYPE_PASS def_%cl_4_4 %cl_4_6[4.1,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: BRANCH %cl_4_4[4.2,3.2,] 
BB 6
	outgoing: 8 10 
	datadep: 
	instructions:
		 0: t->[] def_%cl_4_7 t[2.2,] 	 SYMBOL:translation,	 ARGS:Symbol,
		 1: %cl_4_7->empty? def_%cl_4_8 %cl_4_7[6.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_4_8->! def_%cl_4_9 %cl_4_8[6.1,] 	 SYMBOL:	 ARGS:
		 3: RETURN %cl_4_9[6.2,] %self[2.0,] 
BB 7
	outgoing: 10 
	datadep: 
	instructions:
		 0: RETURN %cl_4_4[4.2,3.2,] %self[2.0,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: def_%cl_4_10 
		 1: def_%cl_4_11 %cl_4_10[8.0,] 
		 2: RETURN %cl_4_11[8.1,] %self[2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: %self->Maybe def_%cl_3_4 %self[2.0,] %cl_3_3[3.1,] 	 SYMBOL:	 ARGS:%cl_3_3,
		 3: %self->create_delta_result def_%cl_3_5 %self[3.2,2.0,] translations_hash[3.1,] key[] locale[2.2,] fallback_locale[] 	 SYMBOL:	 ARGS:translations_hash,key,locale,fallback_locale,
		 4: %cl_3_4->or_else def_%cl_3_6 %cl_3_4[3.2,] %cl_3_5[3.3,] 	 SYMBOL:	 ARGS:%cl_3_5,
		 5: results->push def_%cl_3_7 results[] %cl_3_6[3.4,] 	 SYMBOL:	 ARGS:%cl_3_6,
		 6: RETURN %cl_3_7[3.5,] %self[3.2,3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_8 
		 1: def_%cl_3_9 %cl_3_8[4.0,] 
		 2: RETURN %cl_3_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 6: 
		 7: RETURN results[5.3,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = create_delta_result instanceMethod = true
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_translations_hash 
		 6: RECEIVEARG def_translation_key 
		 7: RECEIVEARG def_locale 
		 8: RECEIVEARG def_fallback_locale 
		 9: 
		 10: translations_hash->select def_%v_3 translations_hash[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:translations_hash,
CLOSURE BEGIN: t[] translation_key[2.6,] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_t 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: t->[] def_%cl_1_3 t[2.2,] 	 SYMBOL:translation_key,	 ARGS:Symbol,
		 2: %cl_1_3->== def_%cl_1_4 %cl_1_3[3.1,] translation_key[] 	 SYMBOL:	 ARGS:translation_key,
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: t->[] def_%cl_1_5 t[2.2,] 	 SYMBOL:translation,	 ARGS:Symbol,
		 1: %cl_1_5->present? def_%cl_1_6 %cl_1_5[4.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[6.0,] 
		 2: RETURN %cl_1_8[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: COPY TYPE_PASS def_translations_with_key %v_3[2.10,] 
		 12: 
		 13: %v_3->find def_%v_4 %v_3[2.10,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: fallback_locale[2.8,] t[2.10,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_t 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: fallback_locale->present? def_%cl_2_3 fallback_locale[] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_2_3[3.1,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: t->[] def_%cl_2_4 t[2.2,] 	 SYMBOL:locale,	 ARGS:Symbol,
		 1: %cl_2_4->== def_%cl_2_5 %cl_2_4[4.0,] fallback_locale[] 	 SYMBOL:	 ARGS:fallback_locale,
		 2: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_2_6 
		 1: def_%cl_2_7 %cl_2_6[7.0,] 
		 2: RETURN %cl_2_7[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 14: %self->Maybe def_%v_5 %self[2.0,] %v_4[2.13,] 	 SYMBOL:	 ARGS:%v_4,
		 15: %v_5->or_else def_%v_6 %v_5[2.14,] 	 SYMBOL:	 ARGS:Nil,
		 16: COPY TYPE_PASS def_fallback %v_6[2.15,] 
		 17: 
		 18: fallback_locale->present? def_%v_7 fallback_locale[2.8,] 	 SYMBOL:	 ARGS:
		 19: BRANCH %v_7[2.18,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: fallback->present? def_%v_8 fallback[2.16,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_7 %v_8[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_use_fallback %v_7[3.1,2.18,] 
		 1: 
		 2: (Translation) def_%v_9 
		 3: 
		 4: BRANCH %v_7[3.1,2.18,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: fallback->[] def_%v_10 fallback[2.16,] 	 SYMBOL:locale,	 ARGS:Symbol,
		 1: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_10 locale[2.7,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: BRANCH use_fallback[4.0,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: fallback->[] def_%v_11 fallback[2.16,] 	 SYMBOL:translation,	 ARGS:Symbol,
		 1: 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_11 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: HASH-translation_key-locale-translation- def_%v_12 translation_key[2.6,] %v_10[6.0,5.0,] %v_11[9.0,8.0,] 
		 1: %v_9->call def_%v_13 %v_9[4.2,] %v_12[10.0,] 	 SYMBOL:	 ARGS:%v_12,
		 2: translations_with_key->present? def_%v_14 translations_with_key[2.11,] 	 SYMBOL:	 ARGS:
		 3: %self->error_message def_%v_15 %self[2.0,] %v_14[10.2,] use_fallback[4.0,] 	 SYMBOL:	 ARGS:%v_14,use_fallback,
		 4: %v_13->merge def_%v_16 %v_13[10.1,] %v_15[10.3,] 	 SYMBOL:	 ARGS:%v_15,
		 5: RETURN %v_16[10.4,] %self[10.3,2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = error_message instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_has_translations_with_key 
		 6: RECEIVEARG def_use_fallback 
		 7: 
		 8: has_translations_with_key->! def_%v_3 has_translations_with_key[2.5,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %v_3[2.8,] 
BB 3
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: HASH-error- def_%v_4 
		 2: RETURN %self[2.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: use_fallback->! def_%v_5 use_fallback[2.6,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_5[4.1,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: HASH-error- def_%v_6 
		 2: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: HASH-warn- def_%v_7 
		 2: COPY TYPE_PASS def_%v_6 %v_7[6.1,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %v_6[6.2,5.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = from_model_array instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_models 
		 6: 
		 7: models->map def_%v_3 models[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:models,
CLOSURE BEGIN: %self[2.0,] model[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_model 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->from_model def_%cl_1_3 %self[2.0,] model[2.2,] 	 SYMBOL:	 ARGS:model,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_3[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = from_model instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_model 
		 6: 
		 7: %self->Maybe def_%v_3 %self[2.0,] model[2.5,] 	 SYMBOL:	 ARGS:model,
		 8: %v_3->map def_%v_4 %v_3[2.7,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: m[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_m 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (EntityUtils) def_%cl_1_3 
		 2: %cl_1_3->model_to_hash def_%cl_1_4 %cl_1_3[3.1,] m[2.2,] 	 SYMBOL:	 ARGS:m,
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: %v_4->map def_%v_5 %v_4[2.8,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: hash[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_hash 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (Translation) def_%cl_2_3 
		 2: %cl_2_3->call def_%cl_2_4 %cl_2_3[3.1,] hash[2.2,] 	 SYMBOL:	 ARGS:hash,
		 3: RETURN %cl_2_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: %v_5->or_else def_%v_6 %v_5[2.9,] 	 SYMBOL:	 ARGS:Nil,
		 11: RETURN %v_6[2.10,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = community_translations_cache instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_community_id 
		 6: 
		 7: (Rails) def_%v_3 
		 8: %v_3->cache def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: %self->cache_key def_%v_5 %self[2.0,] community_id[2.5,] 	 SYMBOL:	 ARGS:community_id,
		 10: %v_4->fetch def_%v_6 %v_4[2.8,] %v_5[2.9,] %self[2.0,2.9,] 	 SYMBOL:	 ARGS:%v_5,%v_4,
CLOSURE BEGIN: community_id[2.5,] %self[2.0,2.9,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (CommunityTranslationModel) def_%cl_1_3 
		 2: HASH-community_id- def_%cl_1_4 community_id[] 
		 3: %cl_1_3->where def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: %self->from_model_array def_%cl_1_6 %self[2.0,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 5: RETURN %cl_1_6[3.4,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: RETURN %v_6[2.10,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = cache_key instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_community_id 
		 6: 
		 7: COPY TYPE_StringLiteral "/translation_service/community/" def_%v_3 
		 8: BUILDSTRING def_%v_4 %v_3[2.7,] community_id[2.5,] 
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = invalidate_cache instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_community_id 
		 6: 
		 7: (Rails) def_%v_3 
		 8: %v_3->cache def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: %self->cache_key def_%v_5 %self[2.0,] community_id[2.5,] 	 SYMBOL:	 ARGS:community_id,
		 10: %v_4->delete def_%v_6 %v_4[2.8,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_5,
		 11: RETURN %v_6[2.10,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

