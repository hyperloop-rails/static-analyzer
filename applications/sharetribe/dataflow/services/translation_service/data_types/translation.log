SET IRMethod, name = validate_find_params instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_opts 
		 6: 
		 7: (FindParams) def_%v_3 
		 8: %v_3->call def_%v_4 %v_3[2.7,] opts[2.5,] 	 SYMBOL:	 ARGS:opts,
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = validate_translation_groups instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_opts 
		 6: 
		 7: (CreateTranslationGroups) def_%v_3 
		 8: %v_3->call def_%v_4 %v_3[2.7,] opts[2.5,] 	 SYMBOL:	 ARGS:opts,
		 9: COPY TYPE_PASS def_groups %v_4[2.8,] 
		 10: 
		 11: %v_4->[] def_%v_5 %v_4[2.8,] 	 SYMBOL:translation_groups,	 ARGS:Symbol,
		 12: %v_5->map def_%v_6 %v_5[2.11,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_5,
CLOSURE BEGIN: g[] %self[2.0,] translation[] group[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_g 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (CreateTranslationGroup) def_%cl_1_3 
		 2: %cl_1_3->call def_%cl_1_4 %cl_1_3[3.1,] g[2.2,] 	 SYMBOL:	 ARGS:g,
		 3: COPY TYPE_PASS def_group %cl_1_4[3.2,] 
		 4: 
		 5: %cl_1_4->[] def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:translations,	 ARGS:Symbol,
		 6: %cl_1_5->map def_%cl_1_6 %cl_1_5[3.5,] %self[2.0,] 	 SYMBOL:	 ARGS:%cl_1_5,
CLOSURE BEGIN: translation[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_translation 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (CreateTranslation) def_%cl_2_3 
		 2: %cl_2_3->call def_%cl_2_4 %cl_2_3[3.1,] translation[2.2,] 	 SYMBOL:	 ARGS:translation,
		 3: RETURN %cl_2_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: 
		 8: RETURN group[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: group[3.3,] 
		 13: 
		 14: RETURN groups[2.9,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = validate_delete_params instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_opts 
		 6: 
		 7: (DeleteParams) def_%v_3 
		 8: %v_3->call def_%v_4 %v_3[2.7,] opts[2.5,] 	 SYMBOL:	 ARGS:opts,
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

