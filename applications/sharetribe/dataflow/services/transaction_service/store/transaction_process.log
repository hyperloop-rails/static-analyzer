SET IRMethod, name = get_all instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_community_id 
		 6: community_id[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: (TransactionProcessModel) def_%v_3 
		 2: HASH-community_id- def_%v_4 community_id[2.5,] 
		 3: %v_3->where def_%v_5 %v_3[4.1,] %v_4[4.2,] 	 SYMBOL:	 ARGS:%v_4,
		 4: %v_5->map def_%v_6 %v_5[4.3,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_5,
CLOSURE BEGIN: %self[2.0,] m[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_m 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->from_model def_%cl_1_3 %self[2.0,] m[2.2,] 	 SYMBOL:	 ARGS:m,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 5: RETURN %v_6[4.4,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_community_id 
		 6: community_id[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: def_process_id 
		 1: process_id[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: (TransactionProcessModel) def_%v_3 
		 2: HASH-community_id-id- def_%v_4 community_id[2.5,] process_id[4.0,] 
		 3: %v_3->where def_%v_5 %v_3[6.1,] %v_4[6.2,] 	 SYMBOL:	 ARGS:%v_4,
		 4: %v_5->first def_%v_6 %v_5[6.3,] 	 SYMBOL:	 ARGS:
		 5: %self->Maybe def_%v_7 %self[2.0,] %v_6[6.4,] 	 SYMBOL:	 ARGS:%v_6,
		 6: %v_7->map def_%v_8 %v_7[6.5,] %self[6.5,2.0,] 	 SYMBOL:	 ARGS:%v_7,
CLOSURE BEGIN: %self[6.5,2.0,] m[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_m 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->from_model def_%cl_1_3 %self[2.0,] m[2.2,] 	 SYMBOL:	 ARGS:m,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: %v_8->or_else def_%v_9 %v_8[6.6,] 	 SYMBOL:	 ARGS:Nil,
		 8: RETURN %v_9[6.7,] %self[6.5,2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = create instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_community_id 
		 6: community_id[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: def_opts 
		 1: opts[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: (TransactionProcessModel) def_%v_3 
		 2: (NewTransactionProcess) def_%v_4 
		 3: HASH-community_id- def_%v_5 community_id[2.5,] 
		 4: opts->merge def_%v_6 opts[4.0,] %v_5[6.3,] 	 SYMBOL:	 ARGS:%v_5,
		 5: %v_4->call def_%v_7 %v_4[6.2,] %v_6[6.4,] 	 SYMBOL:	 ARGS:%v_6,
		 6: %v_3->create! def_%v_8 %v_3[6.1,] %v_7[6.5,] 	 SYMBOL:	 ARGS:%v_7,
		 7: %self->from_model def_%v_9 %self[2.0,] %v_8[6.6,] 	 SYMBOL:	 ARGS:%v_8,
		 8: RETURN %v_9[6.7,] %self[6.7,2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = from_model instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_m 
		 6: 
		 7: %self->Maybe def_%v_3 %self[2.0,] m[2.5,] 	 SYMBOL:	 ARGS:m,
		 8: %v_3->map def_%v_4 %v_3[2.7,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: m[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_m 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (TransactionProcess) def_%cl_1_3 
		 2: (EntityUtils) def_%cl_1_4 
		 3: %cl_1_4->model_to_hash def_%cl_1_5 %cl_1_4[3.2,] m[2.2,] 	 SYMBOL:	 ARGS:m,
		 4: %cl_1_3->call def_%cl_1_6 %cl_1_3[3.1,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 5: RETURN %cl_1_6[3.4,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: %v_4->or_else def_%v_5 %v_4[2.8,] 	 SYMBOL:	 ARGS:Nil,
		 10: RETURN %v_5[2.9,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

