SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_additional_flags 
		 6: additional_flags[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: additional_flags->to_set def_%v_3 additional_flags[2.5,] 	 SYMBOL:	 ARGS:
		 2: ATTRASSIGN %self->additional_flags %v_3[4.1,] 
		 3: RETURN %v_3[4.1,] %self[4.2,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = known_flags instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (FLAGS) def_%v_3 
		 7: %v_3->dup def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: GETFIELD %self->additional_flags def_%v_5 %self[2.0,] 
		 9: %v_4->merge def_%v_6 %v_4[2.7,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_5,
		 10: RETURN %v_6[2.9,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_community_id 
		 6: 
		 7: (FeatureFlagModel) def_%v_3 
		 8: HASH-community_id- def_%v_4 community_id[2.5,] 
		 9: %v_3->where def_%v_5 %v_3[2.7,] %v_4[2.8,] 	 SYMBOL:	 ARGS:%v_4,
		 10: %self->Maybe def_%v_6 %self[2.0,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_5,
		 11: %v_6->map def_%v_7 %v_6[2.10,] %self[2.0,2.10,] 	 SYMBOL:	 ARGS:%v_6,
CLOSURE BEGIN: %self[2.0,2.10,] community_id[2.5,] features[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_features 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->from_models def_%cl_1_3 %self[2.0,] community_id[] features[2.2,] 	 SYMBOL:	 ARGS:community_id,features,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 12: %self->no_flags def_%v_8 %self[2.0,2.10,] community_id[2.5,] 	 SYMBOL:	 ARGS:community_id,
		 13: %v_7->or_else def_%v_9 %v_7[2.11,] %v_8[2.12,] 	 SYMBOL:	 ARGS:%v_8,
		 14: RETURN %v_9[2.13,] %self[2.0,2.10,2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = enable instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_community_id 
		 6: RECEIVEARG def_features 
		 7: 
		 8: %self->known_flags def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 9: %v_3->intersection def_%v_4 %v_3[2.8,] features[2.6,] 	 SYMBOL:	 ARGS:features,
		 10: %v_4->map def_%v_5 %v_4[2.9,] %self[2.0,2.8,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: flag[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_flag 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
		 5: 
		 6: COPY TYPE_Array def_%cl_1_3 flag[2.2,] 
		 7: RETURN %cl_1_3[2.6,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: %v_5->to_h def_%v_6 %v_5[2.10,] 	 SYMBOL:	 ARGS:
		 12: COPY TYPE_PASS def_flags_to_enable %v_6[2.11,] 
		 13: 
		 14: %self->update_flags! def_%v_7 %self[2.0,2.8,] community_id[2.5,] %v_6[2.11,] 	 SYMBOL:	 ARGS:community_id,flags_to_enable,
		 15: 
		 16: %self->get def_%v_8 %self[2.0,2.8,2.14,] community_id[2.5,] 	 SYMBOL:	 ARGS:community_id,
		 17: RETURN %v_8[2.16,] %self[2.0,2.8,2.14,2.16,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = disable instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_community_id 
		 6: RECEIVEARG def_features 
		 7: 
		 8: %self->known_flags def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 9: %v_3->intersection def_%v_4 %v_3[2.8,] features[2.6,] 	 SYMBOL:	 ARGS:features,
		 10: %v_4->map def_%v_5 %v_4[2.9,] %self[2.0,2.8,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: flag[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_flag 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
		 5: 
		 6: COPY TYPE_Array def_%cl_1_3 flag[2.2,] 
		 7: RETURN %cl_1_3[2.6,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: %v_5->to_h def_%v_6 %v_5[2.10,] 	 SYMBOL:	 ARGS:
		 12: COPY TYPE_PASS def_flags_to_disable %v_6[2.11,] 
		 13: 
		 14: %self->update_flags! def_%v_7 %self[2.0,2.8,] community_id[2.5,] %v_6[2.11,] 	 SYMBOL:	 ARGS:community_id,flags_to_disable,
		 15: 
		 16: %self->get def_%v_8 %self[2.0,2.8,2.14,] community_id[2.5,] 	 SYMBOL:	 ARGS:community_id,
		 17: RETURN %v_8[2.16,] %self[2.0,2.8,2.14,2.16,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = from_models instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_community_id 
		 6: RECEIVEARG def_feature_models 
		 7: 
		 8: (CommunityFlags) def_%v_3 
		 9: feature_models->select def_%v_4 feature_models[2.6,] %self[2.0,] 	 SYMBOL:	 ARGS:feature_models,
CLOSURE BEGIN: %self[2.0,] m[] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_m 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->known_flags def_%cl_1_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: m->feature def_%cl_1_4 m[2.2,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->to_sym def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %cl_1_3->include? def_%cl_1_6 %cl_1_3[3.1,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 5: BRANCH %cl_1_6[3.4,] 
BB 4
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: m->enabled def_%cl_1_7 m[2.2,] 	 SYMBOL:	 ARGS:
		 1: RETURN %cl_1_7[4.0,] %self[2.0,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %cl_1_6[3.4,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[6.0,] 
		 2: RETURN %cl_1_9[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: %v_4->map def_%v_5 %v_4[2.9,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: m[2.9,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_m 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: m->feature def_%cl_2_3 m[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_2_3->to_sym def_%cl_2_4 %cl_2_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: RETURN %cl_2_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: %v_5->to_set def_%v_6 %v_5[2.10,] 	 SYMBOL:	 ARGS:
		 12: HASH-community_id-features- def_%v_7 community_id[2.5,] %v_6[2.11,] 
		 13: %v_3->call def_%v_8 %v_3[2.8,] %v_7[2.12,] 	 SYMBOL:	 ARGS:%v_7,
		 14: RETURN %v_8[2.13,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = no_flags instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_community_id 
		 6: 
		 7: (CommunityFlags) def_%v_3 
		 8: (Set) def_%v_4 
		 9: %v_4->new def_%v_5 %v_4[2.8,] 	 SYMBOL:	 ARGS:
		 10: HASH-community_id-features- def_%v_6 community_id[2.5,] %v_5[2.9,] 
		 11: %v_3->call def_%v_7 %v_3[2.7,] %v_6[2.10,] 	 SYMBOL:	 ARGS:%v_6,
		 12: RETURN %v_7[2.11,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_flags! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_community_id 
		 6: RECEIVEARG def_flags 
		 7: 
		 8: flags->each def_%v_3 flags[2.6,] %self[2.0,] 	 SYMBOL:	 ARGS:flags,
CLOSURE BEGIN: community_id[2.5,] feature[] enabled[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_feature 
		 3: RECEIVEARG def_enabled 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (FeatureFlagModel) def_%cl_1_3 
		 2: HASH-community_id-feature- def_%cl_1_4 community_id[] feature[2.2,] 
		 3: %cl_1_3->where def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: %cl_1_5->first_or_create def_%cl_1_6 %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:
		 5: HASH-enabled- def_%cl_1_7 enabled[2.3,] 
		 6: %cl_1_6->update_attributes def_%cl_1_8 %cl_1_6[3.4,] %cl_1_7[3.5,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 7: RETURN %cl_1_8[3.6,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[4.0,] 
		 2: RETURN %cl_1_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: enabled[2.3,] 
		 9: RETURN %v_3[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_additional_flags 
		 6: additional_flags[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: (FeatureFlag) def_%v_3 
		 2: HASH-additional_flags- def_%v_4 additional_flags[2.5,] 
		 3: %v_3->new def_%v_5 %v_3[4.1,] %v_4[4.2,] 	 SYMBOL:	 ARGS:%v_4,
		 4: ATTRASSIGN %self->feature_flag_store %v_5[4.3,] 
		 5: RETURN %v_5[4.3,] %self[4.4,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = known_flags instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->feature_flag_store def_%v_3 %self[2.0,] 
		 7: %v_3->known_flags def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_community_id 
		 6: 
		 7: (Rails) def_%v_3 
		 8: %v_3->cache def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: %self->cache_key def_%v_5 %self[2.0,] community_id[2.5,] 	 SYMBOL:	 ARGS:community_id,
		 10: %v_4->fetch def_%v_6 %v_4[2.8,] %v_5[2.9,] %self[2.0,2.9,] 	 SYMBOL:	 ARGS:%v_5,%v_4,
CLOSURE BEGIN: %self[2.0,2.9,] community_id[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->feature_flag_store def_%cl_1_3 %self[2.0,] 
		 2: %cl_1_3->get def_%cl_1_4 %cl_1_3[3.1,] community_id[] 	 SYMBOL:	 ARGS:community_id,
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: RETURN %v_6[2.10,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = enable instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_community_id 
		 6: RECEIVEARG def_features 
		 7: 
		 8: (Rails) def_%v_3 
		 9: %v_3->cache def_%v_4 %v_3[2.8,] 	 SYMBOL:	 ARGS:
		 10: %self->cache_key def_%v_5 %self[2.0,] community_id[2.5,] 	 SYMBOL:	 ARGS:community_id,
		 11: %v_4->delete def_%v_6 %v_4[2.9,] %v_5[2.10,] 	 SYMBOL:	 ARGS:%v_5,
		 12: 
		 13: GETFIELD %self->feature_flag_store def_%v_7 %self[2.0,2.10,] 
		 14: %v_7->enable def_%v_8 %v_7[2.13,] community_id[2.5,] features[2.6,] 	 SYMBOL:	 ARGS:community_id,features,
		 15: RETURN %v_8[2.14,] %self[2.0,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = disable instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_community_id 
		 6: RECEIVEARG def_features 
		 7: 
		 8: (Rails) def_%v_3 
		 9: %v_3->cache def_%v_4 %v_3[2.8,] 	 SYMBOL:	 ARGS:
		 10: %self->cache_key def_%v_5 %self[2.0,] community_id[2.5,] 	 SYMBOL:	 ARGS:community_id,
		 11: %v_4->delete def_%v_6 %v_4[2.9,] %v_5[2.10,] 	 SYMBOL:	 ARGS:%v_5,
		 12: 
		 13: GETFIELD %self->feature_flag_store def_%v_7 %self[2.0,2.10,] 
		 14: %v_7->disable def_%v_8 %v_7[2.13,] community_id[2.5,] features[2.6,] 	 SYMBOL:	 ARGS:community_id,features,
		 15: RETURN %v_8[2.14,] %self[2.0,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = cache_key instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_community_id 
		 6: 
		 7: community_id->blank? def_%v_3 community_id[2.5,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: (ArgumentError) def_%v_4 
		 1: COPY TYPE_StringLiteral "You must specify a valid community_id." def_%v_5 
		 2: %v_4->new def_%v_6 %v_4[3.0,] %v_5[3.1,] 	 SYMBOL:	 ARGS:%v_5,
		 3: %self->raise def_%v_7 %self[2.0,] %v_6[3.2,] 	 SYMBOL:	 ARGS:%v_6,
		 4: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_7 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "/feature_flag_service/community/" def_%v_8 
		 2: BUILDSTRING def_%v_9 %v_8[5.1,] community_id[2.5,] 
		 3: RETURN %v_9[5.2,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

