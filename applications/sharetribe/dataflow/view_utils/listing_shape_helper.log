SET IRMethod, name = shape_direction_map instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_shapes 
		 6: RECEIVEARG def_processes 
		 7: 
		 8: (ArrayUtils) def_%v_3 
		 9: %v_3->inner_join def_%v_4 %v_3[2.8,] shapes[2.5,] processes[2.6,] %self[2.0,] 	 SYMBOL:	 ARGS:shapes,processes,%v_3,
CLOSURE BEGIN: shape[] process[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_shape 
		 3: RECEIVEARG def_process 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: shape->[] def_%cl_1_3 shape[2.2,] 	 SYMBOL:transaction_process_id,	 ARGS:Symbol,
		 2: process->[] def_%cl_1_4 process[2.3,] 	 SYMBOL:id,	 ARGS:Symbol,
		 3: %cl_1_3->== def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: RETURN %cl_1_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: process[2.3,] 
		 10: %v_4->map def_%v_5 %v_4[2.9,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: shape[2.9,] %self[2.0,] process[2.9,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_%cl_2_1 
		 3: def_%cl_2_2 %cl_2_1[2.2,] 
		 4: def_shape %cl_2_2[2.3,] 
		 5: def_process %cl_2_2[2.3,] 
		 6: COPY TYPE_CurrentScope def_%current_scope 
		 7: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: shape->[] def_%cl_2_5 shape[2.4,] 	 SYMBOL:id,	 ARGS:Symbol,
		 2: %self->process_to_direction def_%cl_2_6 %self[2.0,] process[2.5,] 	 SYMBOL:	 ARGS:process,
		 3: COPY TYPE_Array def_%cl_2_7 %cl_2_5[3.1,] %cl_2_6[3.2,] 
		 4: RETURN %cl_2_7[3.3,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_8 
		 1: def_%cl_2_9 %cl_2_8[4.0,] 
		 2: RETURN %cl_2_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: process[2.5,] 
		 11: %v_5->to_h def_%v_6 %v_5[2.10,] 	 SYMBOL:	 ARGS:
		 12: RETURN %v_6[2.11,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = process_to_direction instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_process 
		 6: 
		 7: process->[] def_%v_3 process[2.5,] 	 SYMBOL:author_is_seller,	 ARGS:Symbol,
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "offer" def_%v_4 
		 1: RETURN %v_4[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "request" def_%v_5 
		 1: RETURN %v_5[4.0,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = predefined_unit_types instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (PREDEFINED_UNIT_TYPES) def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

