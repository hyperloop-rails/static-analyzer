SET IRMethod, name = enabled? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->enabled def_%v_3 %self[2.0,] 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = queueing? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->collect def_%v_3 %self[2.0,] 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = collect! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: ATTRASSIGN %self->collect 
		 7: RETURN %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = enable! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: ATTRASSIGN %self->enabled 
		 7: RETURN %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = disable! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: ATTRASSIGN %self->enabled 
		 7: RETURN %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reset! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 
		 7: ATTRASSIGN %self->job_queue %v_3[2.6,] 
		 8: 
		 9: ATTRASSIGN %self->collect 
		 10: 
		 11: ATTRASSIGN %self->total_processed 
		 12: 
		 13: ATTRASSIGN %self->enabled 
		 14: RETURN %self[2.0,2.7,2.9,2.11,2.13,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = process_queue! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->job_queue def_%v_3 %self[2.0,] 
		 7: %v_3->dup def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_PASS def_jobs %v_4[2.7,] 
		 9: 
		 10: COPY TYPE_Array def_%v_5 
		 11: ATTRASSIGN %self->job_queue %v_5[2.10,] 
		 12: 
		 13: %v_4->each def_%v_6 %v_4[2.7,] %self[2.0,2.11,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: %self[2.0,2.11,] delayed_job[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_delayed_job 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->process_job def_%cl_1_3 %self[2.0,] delayed_job[2.2,] 	 SYMBOL:	 ARGS:delayed_job,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 14: RETURN %v_6[2.13,] %self[2.0,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = process_job instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_delayed_job 
		 6: 
		 7: delayed_job->invoke_job def_%v_3 delayed_job[2.5,] 	 SYMBOL:	 ARGS:
		 8: 
		 9: (SyncDelayedJobObserver) def_%v_6 
		 10: %v_6->total_processed def_%v_4 %v_6[2.9,] 	 SYMBOL:	 ARGS:
		 11: %v_4->+ def_%v_7 %v_4[2.10,] 	 SYMBOL:	 ARGS:Fixnum,
		 12: %v_6->total_processed= def_%v_5 %v_7[2.11,] 	 SYMBOL:	 ARGS:%v_7,
		 13: RETURN %v_7[2.11,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = enqueue instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_delayed_job 
		 6: 
		 7: GETFIELD %self->job_queue def_%v_3 %self[2.0,] 
		 8: %v_3->push def_%v_4 %v_3[2.7,] delayed_job[2.5,] 	 SYMBOL:	 ARGS:delayed_job,
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = after_create instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_delayed_job 
		 6: 
		 7: (SyncDelayedJobObserver) def_%v_3 
		 8: %v_3->enabled? def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: (SyncDelayedJobObserver) def_%v_5 
		 2: %v_5->process_job def_%v_6 %v_5[3.1,] delayed_job[2.5,] 	 SYMBOL:	 ARGS:delayed_job,
		 3: RETURN %v_6[3.2,] %self[2.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: (SyncDelayedJobObserver) def_%v_7 
		 2: %v_7->queueing? def_%v_8 %v_7[4.1,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_8[4.2,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: (SyncDelayedJobObserver) def_%v_9 
		 2: %v_9->enqueue def_%v_10 %v_9[5.1,] delayed_job[2.5,] 	 SYMBOL:	 ARGS:delayed_job,
		 3: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_10 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %v_10[6.0,5.2,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

