SET IRMethod, name = translation_attributes= instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_attributes 
		 6: 
		 7: attributes->map def_%v_3 attributes[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:attributes,
CLOSURE BEGIN: locale[] values[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_locale 
		 3: RECEIVEARG def_values 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
		 6: 
		 7: HASH-locale-values- def_%cl_1_3 locale[2.2,] values[2.3,] 
		 8: RETURN %cl_1_3[2.7,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: values[2.3,] 
		 8: COPY TYPE_PASS def_build_attrs %v_3[2.7,] 
		 9: 
		 10: %v_3->each def_%v_4 %v_3[2.7,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: %self[2.0,] translation[] existing_translation[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_translation 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->translations def_%cl_2_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: translation->[] def_%cl_2_4 translation[2.2,] 	 SYMBOL:locale,	 ARGS:Symbol,
		 3: %cl_2_3->find_by_locale def_%cl_2_5 %cl_2_3[3.1,] %cl_2_4[3.2,] 	 SYMBOL:	 ARGS:%cl_2_4,
		 4: COPY TYPE_PASS def_existing_translation %cl_2_5[3.3,] 
		 5: BRANCH %cl_2_5[3.3,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: translation->[] def_%cl_2_6 translation[2.2,] 	 SYMBOL:values,	 ARGS:Symbol,
		 2: existing_translation->update_attributes def_%cl_2_7 existing_translation[3.4,] %cl_2_6[4.1,] 	 SYMBOL:	 ARGS:%cl_2_6,
		 3: 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->translations def_%cl_2_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: translation->[] def_%cl_2_9 translation[2.2,] 	 SYMBOL:values,	 ARGS:Symbol,
		 3: translation->[] def_%cl_2_10 translation[5.2,2.2,] 	 SYMBOL:locale,	 ARGS:Symbol,
		 4: HASH-locale- def_%cl_2_11 %cl_2_10[5.3,] 
		 5: %cl_2_9->merge def_%cl_2_12 %cl_2_9[5.2,] %cl_2_11[5.4,] 	 SYMBOL:	 ARGS:%cl_2_11,
		 6: %cl_2_8->build def_%cl_2_13 %cl_2_8[5.1,] %cl_2_12[5.5,] 	 SYMBOL:	 ARGS:%cl_2_12,
		 7: RETURN %cl_2_13[5.6,] %self[5.1,2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_2_7[4.2,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_2_14 
		 1: def_%cl_2_15 %cl_2_14[7.0,] 
		 2: RETURN %cl_2_15[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: existing_translation[3.4,] 
		 11: RETURN %v_4[2.10,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_param instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->url def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = url_source instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->basename def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->default_translation_without_cache def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %self->Maybe def_%v_5 %self[3.0,2.0,] %v_4[3.0,] 	 SYMBOL:	 ARGS:%v_4,
		 2: %v_5->name def_%v_6 %v_5[3.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_StringLiteral "category" def_%v_7 
		 4: %v_6->or_else def_%v_8 %v_6[3.2,] %v_7[3.3,] 	 SYMBOL:	 ARGS:%v_7,
		 5: RETURN %v_8[3.4,] %self[3.0,3.1,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.6,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = default_translation_without_cache instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->translations def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->find def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: translation[] %self[2.0,2.6,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_translation 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: translation->locale def_%cl_1_3 translation[2.2,] 	 SYMBOL:	 ARGS:
		 2: %self->community def_%cl_1_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->default_locale def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %cl_1_3->== def_%cl_1_6 %cl_1_3[3.1,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 5: RETURN %cl_1_6[3.4,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->translations def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_5->first def_%v_6 %v_5[3.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_6[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_4[2.7,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = uniq_url instanceMethod = true
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->url_source def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %self->Maybe def_%v_4 %self[2.0,2.6,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: %v_4->to_url def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: COPY TYPE_StringLiteral "noname" def_%v_6 
		 10: %v_5->or_else def_%v_7 %v_5[2.8,] %v_6[2.9,] 	 SYMBOL:	 ARGS:%v_6,
		 11: COPY TYPE_PASS def_current_url %v_7[2.10,] 
		 12: 
		 13: %self->new_record? def_%v_8 %self[2.0,2.6,2.7,] 	 SYMBOL:	 ARGS:
		 14: BRANCH %v_8[2.13,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->url def_%v_9 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_9->!= def_%v_10 %v_9[3.0,] current_url[2.11,] 	 SYMBOL:	 ARGS:current_url,
		 2: COPY TYPE_PASS def_%v_8 %v_10[3.1,] 
BB 4
	outgoing: 5 13 
	datadep: 
	instructions:
		 0: BRANCH %v_8[3.2,2.13,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "new" def_%v_11 
		 2: COPY TYPE_StringLiteral "all" def_%v_12 
		 3: COPY TYPE_Array def_%v_13 %v_11[5.1,] %v_12[5.2,] 
		 4: COPY TYPE_PASS def_blacklist %v_13[5.3,] 
		 5: 
		 6: COPY TYPE_PASS def_base_url current_url[2.11,] 
		 7: 
		 8: (Category) def_%v_14 
		 9: %self->community_id def_%v_15 %self[2.0,] 	 SYMBOL:	 ARGS:
		 10: HASH-community_id- def_%v_16 %v_15[5.9,] 
		 11: %v_14->where def_%v_17 %v_14[5.8,] %v_16[5.10,] 	 SYMBOL:	 ARGS:%v_16,
		 12: COPY TYPE_PASS def_categories %v_17[5.11,] 
		 13: 
		 14: COPY TYPE_Fixnum def_i 
		 15: 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: blacklist->include? def_%v_19 blacklist[5.4,] current_url[9.3,2.11,] 	 SYMBOL:	 ARGS:current_url,
		 1: BRANCH %v_19[6.0,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: categories->find def_%v_20 categories[5.12,] %self[2.0,] 	 SYMBOL:	 ARGS:categories,
CLOSURE BEGIN: c[] current_url[9.3,2.11,] %self[2.0,] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_c 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: c->url def_%cl_1_3 c[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->== def_%cl_1_4 %cl_1_3[3.1,] current_url[] 	 SYMBOL:	 ARGS:current_url,
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: c->id def_%cl_1_5 c[2.2,] 	 SYMBOL:	 ARGS:
		 1: %self->id def_%cl_1_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_5->!= def_%cl_1_7 %cl_1_5[4.0,] %cl_1_6[4.1,] 	 SYMBOL:	 ARGS:%cl_1_6,
		 3: RETURN %cl_1_7[4.2,] %self[4.1,2.0,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[6.0,] 
		 2: RETURN %cl_1_9[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 1: %v_20->present? def_%v_21 %v_20[7.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_19 %v_21[7.1,] 
BB 8
	outgoing: 9 11 
	datadep: 
	instructions:
		 0: BRANCH %v_19[7.2,6.0,] 
BB 9
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: BUILDSTRING def_%v_22 base_url[5.6,] i[5.14,] 
		 3: COPY TYPE_PASS def_current_url %v_22[9.2,] 
		 4: 
		 5: i->+ def_%v_23 i[5.14,] 	 SYMBOL:	 ARGS:Fixnum,
		 6: COPY TYPE_PASS def_i %v_23[9.5,] 
		 7: 
BB 11
	outgoing: 15 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_18 
		 1: 
		 2: ATTRASSIGN %self->url current_url[9.3,2.11,] 
		 3: COPY TYPE_PASS def_%v_24 current_url[9.3,2.11,] 
		 4: RETURN current_url[9.3,2.11,] %self[11.2,2.0,] 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = display_name instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_locale 
		 6: 
		 7: (TranslationCache) def_%v_3 
		 8: %v_3->new def_%v_4 %v_3[2.7,] %self[2.0,] 	 SYMBOL:translations,	 ARGS:%self,Symbol,
		 9: %v_4->translate def_%v_5 %v_4[2.8,] locale[2.5,] 	 SYMBOL:name,	 ARGS:locale,Symbol,
		 10: RETURN %v_5[2.9,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = has_own_or_subcategory_listings? instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->listings def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->count def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->> def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:Fixnum,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->subcategories def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_6->any? def_%v_7 %v_6[3.0,] %self[3.0,2.0,] 	 SYMBOL:	 ARGS:%v_6,
CLOSURE BEGIN: subcategory[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_subcategory 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: subcategory->listings def_%cl_1_3 subcategory[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->empty? def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->! def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: RETURN %cl_1_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: RETURN %v_7[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_5[2.8,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = has_subcategories? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->subcategories def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->count def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->> def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:Fixnum,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = has_own_or_subcategory_custom_fields? instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->custom_fields def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->count def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->> def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:Fixnum,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->subcategories def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_6->any? def_%v_7 %v_6[3.0,] %self[3.0,2.0,] 	 SYMBOL:	 ARGS:%v_6,
CLOSURE BEGIN: subcategory[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_subcategory 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: subcategory->custom_fields def_%cl_1_3 subcategory[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->empty? def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->! def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: RETURN %cl_1_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: RETURN %v_7[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_5[2.8,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = subcategory_ids instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->subcategories def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->collect def_%v_4 %v_3[2.6,] 	 SYMBOL:id,	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = own_and_subcategory_ids instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->id def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_Array def_%v_4 %v_3[2.6,] 
		 8: %self->subcategory_ids def_%v_5 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 9: %v_4->concat def_%v_6 %v_4[2.7,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_5,
		 10: RETURN %v_6[2.9,] %self[2.0,2.6,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = is_subcategory? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->parent_id def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->nil? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->! def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = can_destroy? instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->is_subcategory? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->community def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_4->top_level_categories def_%v_5 %v_4[3.0,] 	 SYMBOL:	 ARGS:
		 2: %v_5->count def_%v_6 %v_5[3.1,] 	 SYMBOL:	 ARGS:
		 3: %v_6->> def_%v_7 %v_6[3.2,] 	 SYMBOL:	 ARGS:Fixnum,
		 4: RETURN %v_7[3.3,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.6,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = remove_needs_caution? instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->has_own_or_subcategory_listings? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->has_subcategories? def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: RETURN %v_4[3.0,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.6,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = own_and_subcategory_listings instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Listing) def_%v_3 
		 7: %v_3->find_by_category_and_subcategory def_%v_4 %v_3[2.6,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = own_and_subcategory_custom_fields instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (CategoryCustomField) def_%v_3 
		 7: %v_3->find_by_category_and_subcategory def_%v_4 %v_3[2.6,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
		 8: %v_4->includes def_%v_5 %v_4[2.7,] 	 SYMBOL:custom_field,	 ARGS:Symbol,
		 9: %v_5->collect def_%v_6 %v_5[2.8,] 	 SYMBOL:custom_field,	 ARGS:
		 10: RETURN %v_6[2.9,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = with_all_children instanceMethod = true
BB 1
	outgoing: 4 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 %self[2.0,] 
		 7: COPY TYPE_PASS def_child_array %v_3[2.6,] 
		 8: 
		 9: %self->children def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 10: %v_4->each def_%v_5 %v_4[2.9,] %self[2.0,2.9,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: child[] child_array[2.7,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_child 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: child->with_all_children def_%cl_1_3 child[2.2,] 	 SYMBOL:	 ARGS:
		 2: child_array-><< def_%cl_1_4 child_array[] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: 
		 12: child_array->flatten def_%v_6 child_array[2.7,] 	 SYMBOL:	 ARGS:
		 13: RETURN %v_6[2.12,] %self[2.0,2.9,] 
BB 4
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = icon_name instanceMethod = true
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (ApplicationHelper) def_%v_3 
		 7: %self->icon def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->icon_specified? def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 10 
	datadep: 
	instructions:
		 0: %self->icon def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: RETURN %v_6[3.0,] %self[3.0,2.0,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_7 
		 1: 
		 2: %self->parent def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_8[4.2,] 
BB 6
	outgoing: 10 
	datadep: 
	instructions:
		 0: %self->parent def_%v_9 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_9->icon_name def_%v_10 %v_9[6.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_10[6.1,] %self[6.0,2.0,] 
BB 7
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_11 
		 1: 
		 2: COPY TYPE_StringLiteral "other" def_%v_12 
		 3: RETURN %v_12[7.2,] %self[2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find_by_url_or_id instanceMethod = false
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_url_or_id 
		 6: 
		 7: %self->find_by_url def_%v_3 %self[2.0,] url_or_id[2.5,] 	 SYMBOL:	 ARGS:url_or_id,
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->find_by_id def_%v_4 %self[2.0,] url_or_id[2.5,] 	 SYMBOL:	 ARGS:url_or_id,
		 1: RETURN %v_4[3.0,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.7,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

