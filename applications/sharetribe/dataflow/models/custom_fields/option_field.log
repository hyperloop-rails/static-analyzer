SET IRMethod, name = option_attributes= instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_attributes 
		 6: 
		 7: %self->options def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->includes def_%v_4 %v_3[2.7,] 	 SYMBOL:titles,	 ARGS:Symbol,
		 9: %v_4->map def_%v_5 %v_4[2.8,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: option[] %self[2.0,2.7,] title[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_option 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: option->id def_%cl_1_3 option[2.2,] 	 SYMBOL:	 ARGS:
		 2: option->sort_priority def_%cl_1_4 option[3.1,2.2,] 	 SYMBOL:	 ARGS:
		 3: option->titles def_%cl_1_5 option[3.1,3.2,2.2,] 	 SYMBOL:	 ARGS:
		 4: %cl_1_5->map def_%cl_1_6 %cl_1_5[3.3,] %self[2.0,] 	 SYMBOL:	 ARGS:%cl_1_5,
CLOSURE BEGIN: title[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_title 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: title->locale def_%cl_2_3 title[2.2,] 	 SYMBOL:	 ARGS:
		 2: title->value def_%cl_2_4 title[3.1,2.2,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_Array def_%cl_2_5 %cl_2_3[3.1,] %cl_2_4[3.2,] 
		 4: RETURN %cl_2_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_6 
		 1: def_%cl_2_7 %cl_2_6[4.0,] 
		 2: RETURN %cl_2_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 5: %cl_1_6->to_h def_%cl_1_7 %cl_1_6[3.4,] 	 SYMBOL:	 ARGS:
		 6: HASH-id-sort_priority-title_attributes- def_%cl_1_8 %cl_1_3[3.1,] %cl_1_4[3.2,] %cl_1_7[3.5,] 
		 7: RETURN %cl_1_8[3.6,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[4.0,] 
		 2: RETURN %cl_1_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: COPY TYPE_PASS def_options_hash %v_5[2.9,] 
		 11: 
		 12: attributes->map def_%v_6 attributes[2.5,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:attributes,
CLOSURE BEGIN: %self[2.0,2.7,] option_id[] opts[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_%cl_3_1 
		 3: def_%cl_3_2 %cl_3_1[2.2,] 
		 4: def_option_id %cl_3_2[2.3,] 
		 5: def_opts %cl_3_2[2.3,] 
		 6: COPY TYPE_CurrentScope def_%current_scope 
		 7: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->Maybe def_%cl_3_5 %self[2.0,] option_id[2.4,] 	 SYMBOL:	 ARGS:option_id,
		 2: %cl_3_5->to_i def_%cl_3_6 %cl_3_5[3.1,] 	 SYMBOL:	 ARGS:
		 3: %cl_3_6->or_else def_%cl_3_7 %cl_3_6[3.2,] 	 SYMBOL:	 ARGS:Nil,
		 4: COPY TYPE_StringLiteral "sort_priority" def_%cl_3_8 
		 5: opts->[] def_%cl_3_9 opts[2.5,] %cl_3_8[3.4,] 	 SYMBOL:	 ARGS:%cl_3_8,
		 6: %cl_3_9->to_i def_%cl_3_10 %cl_3_9[3.5,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "title_attributes" def_%cl_3_11 
		 8: opts->[] def_%cl_3_12 opts[3.5,2.5,] %cl_3_11[3.7,] 	 SYMBOL:	 ARGS:%cl_3_11,
		 9: HASH-id-sort_priority-title_attributes- def_%cl_3_13 %cl_3_7[3.3,] %cl_3_10[3.6,] %cl_3_12[3.8,] 
		 10: RETURN %cl_3_13[3.9,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_14 
		 1: def_%cl_3_15 %cl_3_14[4.0,] 
		 2: RETURN %cl_3_15[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: opts[2.5,] 
		 13: COPY TYPE_PASS def_attributes_hash %v_6[2.12,] 
		 14: 
		 15: (ArrayUtils) def_%v_7 
		 16: %v_7->diff_by_key def_%v_8 %v_7[2.15,] options_hash[2.10,] %v_6[2.12,] 	 SYMBOL:id,	 ARGS:options_hash,attributes_hash,Symbol,
		 17: COPY TYPE_PASS def_diff %v_8[2.16,] 
		 18: 
		 19: %v_8->select def_%v_9 %v_8[2.16,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:%v_8,
CLOSURE BEGIN: d[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_4_0 
		 2: RECEIVEARG def_d 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: d->[] def_%cl_4_3 d[2.2,] 	 SYMBOL:action,	 ARGS:Symbol,
		 2: %cl_4_3->== def_%cl_4_4 %cl_4_3[3.1,] 	 SYMBOL:added,	 ARGS:Symbol,
		 3: RETURN %cl_4_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_4_5 
		 1: def_%cl_4_6 %cl_4_5[4.0,] 
		 2: RETURN %cl_4_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 20: %v_9->map def_%v_10 %v_9[2.19,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:%v_9,
CLOSURE BEGIN: added[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_5_0 
		 2: RECEIVEARG def_added 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: added->[] def_%cl_5_3 added[2.2,] 	 SYMBOL:value,	 ARGS:Symbol,
		 2: RETURN %cl_5_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_5_4 
		 1: def_%cl_5_5 %cl_5_4[4.0,] 
		 2: RETURN %cl_5_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 21: %self->Maybe def_%v_11 %self[2.0,2.7,] %v_10[2.20,] 	 SYMBOL:	 ARGS:%v_10,
		 22: %v_11->each def_%v_12 %v_11[2.21,] %self[2.0,2.7,2.21,] 	 SYMBOL:	 ARGS:%v_11,
CLOSURE BEGIN: %self[2.0,2.7,2.21,] added[2.20,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_6_0 
		 2: RECEIVEARG def_added 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->options def_%cl_6_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_6_3->build def_%cl_6_4 %cl_6_3[3.1,] added[2.2,] 	 SYMBOL:	 ARGS:added,
		 3: RETURN %cl_6_4[3.2,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_6_5 
		 1: def_%cl_6_6 %cl_6_5[4.0,] 
		 2: RETURN %cl_6_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 23: 
		 24: diff->select def_%v_13 diff[2.17,] %self[2.0,2.7,2.21,] 	 SYMBOL:	 ARGS:diff,
CLOSURE BEGIN: d[2.19,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_7_0 
		 2: RECEIVEARG def_d 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: d->[] def_%cl_7_3 d[2.2,] 	 SYMBOL:action,	 ARGS:Symbol,
		 2: %cl_7_3->== def_%cl_7_4 %cl_7_3[3.1,] 	 SYMBOL:removed,	 ARGS:Symbol,
		 3: RETURN %cl_7_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_7_5 
		 1: def_%cl_7_6 %cl_7_5[4.0,] 
		 2: RETURN %cl_7_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 25: %v_13->map def_%v_14 %v_13[2.24,] %self[2.0,2.7,2.21,] 	 SYMBOL:	 ARGS:%v_13,
CLOSURE BEGIN: removed[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_8_0 
		 2: RECEIVEARG def_removed 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: removed->[] def_%cl_8_3 removed[2.2,] 	 SYMBOL:value,	 ARGS:Symbol,
		 2: %cl_8_3->[] def_%cl_8_4 %cl_8_3[3.1,] 	 SYMBOL:id,	 ARGS:Symbol,
		 3: RETURN %cl_8_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_8_5 
		 1: def_%cl_8_6 %cl_8_5[4.0,] 
		 2: RETURN %cl_8_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 26: %self->Maybe def_%v_15 %self[2.0,2.7,2.21,] %v_14[2.25,] 	 SYMBOL:	 ARGS:%v_14,
		 27: %v_15->each def_%v_16 %v_15[2.26,] %self[2.0,2.7,2.21,2.26,] 	 SYMBOL:	 ARGS:%v_15,
CLOSURE BEGIN: %self[2.0,2.7,2.21,2.26,] removed_ids[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_9_0 
		 2: RECEIVEARG def_removed_ids 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->options def_%cl_9_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: HASH-id- def_%cl_9_4 removed_ids[2.2,] 
		 3: %cl_9_3->where def_%cl_9_5 %cl_9_3[3.1,] %cl_9_4[3.2,] 	 SYMBOL:	 ARGS:%cl_9_4,
		 4: %cl_9_5->destroy_all def_%cl_9_6 %cl_9_5[3.3,] 	 SYMBOL:	 ARGS:
		 5: RETURN %cl_9_6[3.4,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_9_7 
		 1: def_%cl_9_8 %cl_9_7[4.0,] 
		 2: RETURN %cl_9_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 28: 
		 29: diff->select def_%v_17 diff[2.17,2.24,] %self[2.0,2.7,2.21,2.26,] 	 SYMBOL:	 ARGS:diff,
CLOSURE BEGIN: d[2.19,2.24,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_10_0 
		 2: RECEIVEARG def_d 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: d->[] def_%cl_10_3 d[2.2,] 	 SYMBOL:action,	 ARGS:Symbol,
		 2: %cl_10_3->== def_%cl_10_4 %cl_10_3[3.1,] 	 SYMBOL:changed,	 ARGS:Symbol,
		 3: RETURN %cl_10_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_10_5 
		 1: def_%cl_10_6 %cl_10_5[4.0,] 
		 2: RETURN %cl_10_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 30: %v_17->map def_%v_18 %v_17[2.29,] %self[2.0,2.7,2.21,2.26,] 	 SYMBOL:	 ARGS:%v_17,
CLOSURE BEGIN: added[2.20,2.22,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_11_0 
		 2: RECEIVEARG def_added 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: added->[] def_%cl_11_3 added[2.2,] 	 SYMBOL:value,	 ARGS:Symbol,
		 2: RETURN %cl_11_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_11_4 
		 1: def_%cl_11_5 %cl_11_4[4.0,] 
		 2: RETURN %cl_11_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 31: %v_18->each def_%v_19 %v_18[2.30,] %self[2.0,2.7,2.21,2.26,] 	 SYMBOL:	 ARGS:%v_18,
CLOSURE BEGIN: %self[2.0,2.7,2.21,2.26,] changed[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_12_0 
		 2: RECEIVEARG def_changed 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->options def_%cl_12_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: changed->[] def_%cl_12_4 changed[2.2,] 	 SYMBOL:id,	 ARGS:Symbol,
		 3: HASH-id- def_%cl_12_5 %cl_12_4[3.2,] 
		 4: %cl_12_3->where def_%cl_12_6 %cl_12_3[3.1,] %cl_12_5[3.3,] 	 SYMBOL:	 ARGS:%cl_12_5,
		 5: %cl_12_6->first def_%cl_12_7 %cl_12_6[3.4,] 	 SYMBOL:	 ARGS:
		 6: %cl_12_7->update_attributes def_%cl_12_8 %cl_12_7[3.5,] changed[3.2,2.2,] 	 SYMBOL:	 ARGS:changed,
		 7: RETURN %cl_12_8[3.6,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_12_9 
		 1: def_%cl_12_10 %cl_12_9[4.0,] 
		 2: RETURN %cl_12_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 32: RETURN %v_19[2.31,] %self[2.0,2.7,2.21,2.26,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

