SET IRMethod, name = name_attributes= instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_attributes 
		 6: 
		 7: attributes->map def_%v_3 attributes[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:attributes,
CLOSURE BEGIN: locale[] value[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_locale 
		 3: RECEIVEARG def_value 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
		 6: 
		 7: HASH-locale-value- def_%cl_1_3 locale[2.2,] value[2.3,] 
		 8: RETURN %cl_1_3[2.7,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: value[2.3,] 
		 8: COPY TYPE_PASS def_build_attrs %v_3[2.7,] 
		 9: 
		 10: %v_3->each def_%v_4 %v_3[2.7,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: %self[2.0,] name[] existing_name[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_name 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->names def_%cl_2_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: name->[] def_%cl_2_4 name[2.2,] 	 SYMBOL:locale,	 ARGS:Symbol,
		 3: %cl_2_3->find_by_locale def_%cl_2_5 %cl_2_3[3.1,] %cl_2_4[3.2,] 	 SYMBOL:	 ARGS:%cl_2_4,
		 4: COPY TYPE_PASS def_existing_name %cl_2_5[3.3,] 
		 5: BRANCH %cl_2_5[3.3,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: name->[] def_%cl_2_6 name[2.2,] 	 SYMBOL:value,	 ARGS:Symbol,
		 2: existing_name->update_attribute def_%cl_2_7 existing_name[3.4,] %cl_2_6[4.1,] 	 SYMBOL:value,	 ARGS:Symbol,%cl_2_6,
		 3: 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->names def_%cl_2_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_2_8->build def_%cl_2_9 %cl_2_8[5.1,] name[2.2,] 	 SYMBOL:	 ARGS:name,
		 3: RETURN %cl_2_9[5.2,] %self[5.1,2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_2_7[4.2,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_2_10 
		 1: def_%cl_2_11 %cl_2_10[7.0,] 
		 2: RETURN %cl_2_11[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: existing_name[3.4,] 
		 11: RETURN %v_4[2.10,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = category_attributes= instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_attributes 
		 6: 
		 7: %self->category_custom_fields def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->clear def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: 
		 10: attributes->each def_%v_5 attributes[2.5,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:attributes,
CLOSURE BEGIN: %self[2.0,2.7,] category[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_category 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->category_custom_fields def_%cl_1_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->build def_%cl_1_4 %cl_1_3[3.1,] category[2.2,] 	 SYMBOL:	 ARGS:category,
		 3: RETURN %cl_1_4[3.2,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: RETURN %v_5[2.10,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = name instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_locale 
		 6: locale[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "en" def_%v_3 
		 1: COPY TYPE_PASS def_locale %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: (TranslationCache) def_%v_4 
		 2: %v_4->new def_%v_5 %v_4[4.1,] %self[2.0,] 	 SYMBOL:names,	 ARGS:%self,Symbol,
		 3: %v_5->translate def_%v_6 %v_5[4.2,] locale[3.1,2.5,] 	 SYMBOL:value,	 ARGS:locale,Symbol,
		 4: RETURN %v_6[4.3,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = can_filter? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = with instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_expected_type 
		 6: def_%v_3 
		 7: def_block %v_3[2.6,] 
		 8: 
		 9: %self->with_type def_%v_4 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: own_type[] expected_type[2.5,] block[2.7,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_own_type 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: own_type->== def_%cl_1_3 own_type[2.2,] expected_type[] 	 SYMBOL:	 ARGS:expected_type,
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: block->call def_%cl_1_4 block[] 	 SYMBOL:	 ARGS:
		 2: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_1_4[4.1,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[7.0,] 
		 2: RETURN %cl_1_6[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: RETURN %v_4[2.9,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = with_type instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_%v_3 
		 6: COPY TYPE_PASS def_block %v_3[2.5,] 
		 7: 
		 8: COPY TYPE_StringLiteral "Implement this in the subclass" def_%v_4 
		 9: %self->throw def_%v_5 %self[2.0,] %v_4[2.8,] 	 SYMBOL:	 ARGS:%v_4,
		 10: RETURN %v_5[2.9,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

