SET IRMethod, name = utc_str_to_time instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_str 
		 6: 
		 7: (ActiveSupport) def_%v_3 
		 8: (inherit TimeZone) def_%v_4 %v_3[2.7,] 
		 9: %v_4[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.7,] 	 SYMBOL:TimeZone,	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "UTC" def_%v_5 
		 1: %v_4->[] def_%v_6 %v_4[3.0,2.8,] %v_5[4.0,] 	 SYMBOL:	 ARGS:%v_5,
		 2: %v_6->parse def_%v_7 %v_6[4.1,] str[2.5,] 	 SYMBOL:	 ARGS:str,
		 3: RETURN %v_7[4.2,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = time_to instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_to_time 
		 6: RECEIVECONSTARG def_from_time 
		 7: from_time[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: (Time) def_%v_3 
		 1: %v_3->now def_%v_4 %v_3[3.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_from_time %v_4[3.1,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%v_5 
		 2: COPY TYPE_Array def_%v_6 
		 3: CONSTANT def_%v_7 	 SYMBOL:	 ARGS:Fixnum,
		 4: COPY TYPE_Array def_%v_8 %v_7[4.3,] 
		 5: CONSTANT def_%v_9 	 SYMBOL:	 ARGS:Fixnum,
		 6: %v_9->* def_%v_10 %v_9[4.5,] 	 SYMBOL:	 ARGS:Fixnum,
		 7: COPY TYPE_Array def_%v_11 %v_10[4.6,] 
		 8: COPY TYPE_Array def_%v_12 %v_5[4.1,] %v_6[4.2,] %v_8[4.4,] %v_11[4.7,] 
		 9: COPY TYPE_PASS def_multiplies %v_12[4.8,] 
		 10: 
		 11: to_time->- def_%v_13 to_time[2.5,] from_time[3.2,2.6,] 	 SYMBOL:	 ARGS:from_time,
		 12: %v_13->to_i def_%v_14 %v_13[4.11,] 	 SYMBOL:	 ARGS:
		 13: COPY TYPE_PASS def_diff %v_14[4.12,] 
		 14: 
		 15: %v_14->< def_%v_15 %v_14[4.12,] 	 SYMBOL:	 ARGS:Fixnum,
		 16: BRANCH %v_15[4.15,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: (ArgumentError) def_%v_16 
		 1: COPY TYPE_StringLiteral "to_time cannot be less than from_time" def_%v_17 
		 2: %v_16->new def_%v_18 %v_16[5.0,] %v_17[5.1,] 	 SYMBOL:	 ARGS:%v_17,
		 3: %self->raise def_%v_19 %self[2.0,] %v_18[5.2,] 	 SYMBOL:	 ARGS:%v_18,
		 4: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_19 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%v_20 diff[4.13,] 
		 2: multiplies->inject def_%v_21 multiplies[4.9,] %v_20[7.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_20,multiplies,
CLOSURE BEGIN: diff[4.13,] multiplier[] unit[] result[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_result 
		 3: RECEIVEARG def_%cl_1_1 
		 4: def_%cl_1_2 %cl_1_1[2.3,] 
		 5: def_unit %cl_1_2[2.4,] 
		 6: def_multiplier %cl_1_2[2.4,] 
		 7: COPY TYPE_CurrentScope def_%current_scope 
		 8: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: diff->>= def_%cl_1_5 diff[] multiplier[2.6,] 	 SYMBOL:	 ARGS:multiplier,
		 2: BRANCH %cl_1_5[3.1,] 
BB 4
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: diff->/ def_%cl_1_6 diff[3.1,] multiplier[2.6,] 	 SYMBOL:	 ARGS:multiplier,
		 2: HASH-unit-count- def_%cl_1_7 unit[2.5,] %cl_1_6[4.1,] 
		 3: RETURN unit[2.5,] %cl_1_6[4.1,] %self[2.0,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: RETURN result[2.2,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[7.0,] 
		 2: RETURN %cl_1_9[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: unit[2.5,] multiplier[2.6,] 
		 3: RETURN %v_21[7.2,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

