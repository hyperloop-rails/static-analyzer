SET IRMethod, name = next_and_prev instanceMethod = true
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_arr 
		 6: RECEIVEARG def_curr 
		 7: 
		 8: arr->length def_%v_3 arr[2.5,] 	 SYMBOL:	 ARGS:
		 9: %v_3-><= def_%v_4 %v_3[2.8,] 	 SYMBOL:	 ARGS:Fixnum,
		 10: BRANCH %v_4[2.9,] 
BB 3
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%v_5 
		 2: RETURN %self[2.0,] 
BB 4
	outgoing: 5 9 
	datadep: 
	instructions:
		 0: 
		 1: arr->length def_%v_6 arr[2.5,] 	 SYMBOL:	 ARGS:
		 2: %v_6->== def_%v_7 %v_6[4.1,] 	 SYMBOL:	 ARGS:Fixnum,
		 3: BRANCH %v_7[4.2,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_8 arr[2.5,] 
		 2: def_%v_9 arr[2.5,] 
		 3: def_%v_10 %v_9[5.2,] 
		 4: def_%v_11 %v_9[5.2,] 
		 5: COPY TYPE_PASS def_first %v_10[5.3,] 
		 6: COPY TYPE_PASS def_last %v_11[5.4,] 
		 7: 
		 8: curr->== def_%v_12 curr[2.6,] %v_10[5.3,] 	 SYMBOL:	 ARGS:first,
		 9: BRANCH %v_12[5.8,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_13 last[5.6,] last[5.6,] 
		 1: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_14 first[5.5,] first[5.5,] 
		 1: COPY TYPE_PASS def_%v_13 %v_14[7.0,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->each_cons_repeat def_%v_15 %self[2.0,] arr[2.5,] 	 SYMBOL:	 ARGS:arr,Fixnum,
		 2: %v_15->find def_%v_16 %v_15[9.1,] %self[9.1,2.0,] 	 SYMBOL:	 ARGS:%v_15,
CLOSURE BEGIN: mid[] curr[2.6,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_%cl_1_1 
		 3: def_%cl_1_2 %cl_1_1[2.2,] 
		 4: def_prev %cl_1_2[2.3,] 
		 5: def_mid %cl_1_2[2.3,] 
		 6: def_nexxt %cl_1_2[2.3,] 
		 7: COPY TYPE_CurrentScope def_%current_scope 
		 8: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: mid->== def_%cl_1_5 mid[2.5,] curr[] 	 SYMBOL:	 ARGS:curr,
		 2: RETURN %cl_1_5[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: nexxt[2.6,] mid[2.5,] 
		 3: def_%v_17 %v_16[9.2,] 
		 4: def_%v_18 %v_17[9.3,] 
		 5: def_%v_19 %v_17[9.3,] 
		 6: def_%v_20 %v_17[9.3,] 
		 7: COPY TYPE_PASS def_prev %v_18[9.4,] 
		 8: COPY TYPE_PASS def_mid %v_19[9.5,] 
		 9: COPY TYPE_PASS def_nexxt %v_20[9.6,] 
		 10: 
		 11: COPY TYPE_Array def_%v_21 %v_18[9.4,] %v_20[9.6,] 
		 12: COPY TYPE_PASS def_%v_13 %v_21[9.11,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %v_13[9.12,7.1,6.0,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = each_cons_repeat instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_arr 
		 6: RECEIVEARG def_cons 
		 7: 
		 8: cons->- def_%v_3 cons[2.6,] 	 SYMBOL:	 ARGS:Fixnum,
		 9: arr->take def_%v_4 arr[2.5,] %v_3[2.8,] 	 SYMBOL:	 ARGS:%v_3,
		 10: arr->+ def_%v_5 arr[2.5,2.9,] %v_4[2.9,] 	 SYMBOL:	 ARGS:%v_4,
		 11: %v_5->each_cons def_%v_6 %v_5[2.10,] cons[2.6,2.8,] 	 SYMBOL:	 ARGS:cons,
		 12: RETURN %v_6[2.11,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = each_slice_columns instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_xs 
		 6: RECEIVEARG def_columns 
		 7: def_%v_3 
		 8: def_block %v_3[2.7,] 
		 9: 
		 10: xs->length def_%v_4 xs[2.5,] 	 SYMBOL:	 ARGS:
		 11: columns->to_f def_%v_5 columns[2.6,] 	 SYMBOL:	 ARGS:
		 12: %v_4->/ def_%v_6 %v_4[2.10,] %v_5[2.11,] 	 SYMBOL:	 ARGS:%v_5,
		 13: COPY TYPE_PASS def_div %v_6[2.12,] 
		 14: 
		 15: %v_6->ceil def_%v_7 %v_6[2.12,] 	 SYMBOL:	 ARGS:
		 16: COPY TYPE_PASS def_first_length %v_7[2.15,] 
		 17: 
		 18: div->round def_%v_8 div[2.13,] 	 SYMBOL:	 ARGS:
		 19: COPY TYPE_PASS def_rest_length %v_8[2.18,] 
		 20: 
		 21: xs->take def_%v_9 xs[2.5,2.10,] first_length[2.16,] 	 SYMBOL:	 ARGS:first_length,
		 22: COPY TYPE_PASS def_first %v_9[2.21,] 
		 23: 
		 24: rest_length->> def_%v_10 rest_length[2.19,] 	 SYMBOL:	 ARGS:Fixnum,
		 25: BRANCH %v_10[2.24,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: xs->drop def_%v_11 xs[2.5,] first_length[2.16,] 	 SYMBOL:	 ARGS:first_length,
		 1: %v_11->each_slice def_%v_12 %v_11[3.0,] rest_length[2.19,] 	 SYMBOL:	 ARGS:rest_length,
		 2: %v_12->to_a def_%v_13 %v_12[3.1,] 	 SYMBOL:	 ARGS:
		 3: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_14 
		 1: COPY TYPE_PASS def_%v_13 %v_14[4.0,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_rest %v_13[4.1,3.2,] 
		 1: 
		 2: COPY TYPE_Array def_%v_15 first[2.22,] 
		 3: %v_15->concat def_%v_16 %v_15[5.2,] %v_13[4.1,3.2,] 	 SYMBOL:	 ARGS:rest,
		 4: COPY TYPE_PASS def_result %v_16[5.3,] 
		 5: 
		 6: BRANCH block[2.8,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: result->each def_%v_17 result[5.4,] block[2.8,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_17[6.1,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: result->each def_%v_18 result[5.4,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_18[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = trim instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_xs 
		 6: 
		 7: xs->drop_while def_%v_3 xs[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:xs,
CLOSURE BEGIN: x[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_x 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: x->blank? def_%cl_1_3 x[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: %v_3->reverse def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_4->drop_while def_%v_5 %v_4[2.8,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: x[2.7,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_x 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: x->blank? def_%cl_2_3 x[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: %v_5->reverse def_%v_6 %v_5[2.9,] 	 SYMBOL:	 ARGS:
		 11: RETURN %v_6[2.10,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = inner_join instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_a 
		 6: RECEIVEARG def_b 
		 7: def_%v_3 
		 8: def_block %v_3[2.7,] 
		 9: 
		 10: COPY TYPE_Array def_%v_4 
		 11: a->reduce def_%v_5 a[2.5,] %v_4[2.10,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_4,a,
CLOSURE BEGIN: b[2.6,] %self[2.0,] block[2.8,] a_elem[] b_elem[] joins[] bs_found[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_joins 
		 3: RECEIVEARG def_a_elem 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: b->select def_%cl_1_3 b[] %self[2.0,] 	 SYMBOL:	 ARGS:b,
CLOSURE BEGIN: block[] a_elem[2.3,] b_elem[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_b_elem 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
		 5: 
		 6: BRANCH block[] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: block->call def_%cl_2_3 block[] a_elem[] b_elem[2.2,] 	 SYMBOL:	 ARGS:a_elem,b_elem,
		 1: 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: a_elem->== def_%cl_2_4 a_elem[] b_elem[2.2,] 	 SYMBOL:	 ARGS:b_elem,
		 1: RETURN %cl_2_4[5.0,] %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_2_3[4.0,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[7.0,] 
		 2: RETURN %cl_2_6[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: COPY TYPE_PASS def_bs_found %cl_1_3[3.1,] 
		 3: 
		 4: %cl_1_3->empty? def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 5: BRANCH %cl_1_4[3.4,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%cl_1_5 joins[2.2,] 
		 2: RETURN joins[2.2,] %self[2.0,] 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%cl_1_6 a_elem[2.3,] 
		 2: %cl_1_6->concat def_%cl_1_7 %cl_1_6[5.1,] bs_found[3.2,] 	 SYMBOL:	 ARGS:bs_found,
		 3: COPY TYPE_Array def_%cl_1_8 %cl_1_7[5.2,] 
		 4: joins->concat def_%cl_1_9 joins[2.2,] %cl_1_8[5.3,] 	 SYMBOL:	 ARGS:%cl_1_8,
		 5: RETURN %cl_1_9[5.4,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_10 
		 1: def_%cl_1_11 %cl_1_10[7.0,] 
		 2: RETURN %cl_1_11[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: bs_found[3.2,] a_elem[2.3,] 
		 12: RETURN %v_5[2.11,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = diff_by_key instanceMethod = true
BB 1
	outgoing: 21 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_old_array 
		 6: RECEIVEARG def_new_array 
		 7: RECEIVEARG def_key 
		 8: 
		 9: COPY TYPE_Array def_%v_3 
		 10: COPY TYPE_PASS def_operations %v_3[2.9,] 
		 11: 
		 12: new_array->partition def_%v_4 new_array[2.6,] %self[2.0,] 	 SYMBOL:	 ARGS:new_array,
CLOSURE BEGIN: new[] key[2.7,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_new 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: new->[] def_%cl_1_3 new[2.2,] key[] 	 SYMBOL:	 ARGS:key,
		 2: %cl_1_3->nil? def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 13: def_%v_5 %v_4[2.12,] 
		 14: def_%v_6 %v_5[2.13,] 
		 15: def_%v_7 %v_5[2.13,] 
		 16: COPY TYPE_PASS def_new_without_key %v_6[2.14,] 
		 17: COPY TYPE_PASS def_new_with_key %v_7[2.15,] 
		 18: 
		 19: old_array->sort_by def_%v_8 old_array[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:old_array,
CLOSURE BEGIN: old[] key[2.7,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_old 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: old->[] def_%cl_2_3 old[2.2,] key[] 	 SYMBOL:	 ARGS:key,
		 2: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 20: COPY TYPE_PASS def_old_elems %v_8[2.19,] 
		 21: 
		 22: new_with_key->sort_by def_%v_9 new_with_key[2.17,] %self[2.0,] 	 SYMBOL:	 ARGS:new_with_key,
CLOSURE BEGIN: new[2.12,] key[2.7,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_new 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: new->[] def_%cl_3_3 new[2.2,] key[] 	 SYMBOL:	 ARGS:key,
		 2: RETURN %cl_3_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_4 
		 1: def_%cl_3_5 %cl_3_4[4.0,] 
		 2: RETURN %cl_3_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 23: COPY TYPE_PASS def_new_elems %v_9[2.22,] 
		 24: 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: old_elems->empty? def_%v_11 old_elems[2.20,] 	 SYMBOL:	 ARGS:
		 1: BRANCH %v_11[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: new_elems->empty? def_%v_12 new_elems[2.23,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_11 %v_12[4.0,] 
BB 5
	outgoing: 6 19 
	datadep: 
	instructions:
		 0: BRANCH %v_11[4.1,3.0,] 
BB 6
	outgoing: 7 10 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: old_elems->first def_%v_13 old_elems[2.20,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_PASS def_old %v_13[6.2,] 
		 4: 
		 5: new_elems->first def_%v_14 new_elems[2.23,] 	 SYMBOL:	 ARGS:
		 6: COPY TYPE_PASS def_new %v_14[6.5,] 
		 7: 
		 8: old->[] def_%v_15 old[6.3,] key[2.7,] 	 SYMBOL:	 ARGS:key,
		 9: new->[] def_%v_16 new[6.6,] key[2.7,] 	 SYMBOL:	 ARGS:key,
		 10: %v_15-><=> def_%v_17 %v_15[6.8,] %v_16[6.9,] 	 SYMBOL:	 ARGS:%v_16,
		 11: def_%v_19 %v_17[6.10,] 
		 12: BRANCH %v_19[6.11,] 
BB 7
	outgoing: 8 11 
	datadep: 
	instructions:
		 0: def_%v_20 %v_17[6.10,] 
		 1: BRANCH %v_20[7.0,] 
BB 8
	outgoing: 9 15 
	datadep: 
	instructions:
		 0: def_%v_21 %v_17[6.10,] 
		 1: BRANCH %v_21[8.0,] 
BB 9
	outgoing: 17 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_18 
		 1: 
BB 10
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
		 1: HASH-action-value- def_%v_22 old[6.3,] 
		 2: operations-><< def_%v_23 operations[2.10,] %v_22[10.1,] 	 SYMBOL:	 ARGS:%v_22,
		 3: 
		 4: old_elems->shift def_%v_24 old_elems[2.20,] 	 SYMBOL:	 ARGS:
		 5: COPY TYPE_PASS def_%v_18 %v_24[10.4,] 
		 6: 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: 
		 1: old->== def_%v_25 old[6.3,] new[6.6,] 	 SYMBOL:	 ARGS:new,
		 2: BRANCH %v_25[11.1,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_26 
		 1: 
BB 13
	outgoing: 14 
	datadep: 
	instructions:
		 0: 
		 1: HASH-action-value- def_%v_27 new[6.6,] 
		 2: operations-><< def_%v_28 operations[2.10,] %v_27[13.1,] 	 SYMBOL:	 ARGS:%v_27,
		 3: COPY TYPE_PASS def_%v_26 %v_28[13.2,] 
BB 14
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
		 1: old_elems->shift def_%v_29 old_elems[2.20,] 	 SYMBOL:	 ARGS:
		 2: 
		 3: new_elems->shift def_%v_30 new_elems[2.23,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_PASS def_%v_18 %v_30[14.3,] 
		 5: 
BB 15
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
		 1: HASH-action-value- def_%v_31 new[6.6,] 
		 2: operations-><< def_%v_32 operations[2.10,] %v_31[15.1,] 	 SYMBOL:	 ARGS:%v_31,
		 3: 
		 4: new_elems->shift def_%v_33 new_elems[2.23,] 	 SYMBOL:	 ARGS:
		 5: COPY TYPE_PASS def_%v_18 %v_33[15.4,] 
		 6: 
BB 17
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
BB 19
	outgoing: 21 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_10 
		 1: 
		 2: old_elems->each def_%v_34 old_elems[2.20,] %self[2.0,] 	 SYMBOL:	 ARGS:old_elems,
CLOSURE BEGIN: old[2.19,6.3,] operations[2.10,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_4_0 
		 2: RECEIVEARG def_old 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: HASH-action-value- def_%cl_4_3 old[2.2,] 
		 2: operations-><< def_%cl_4_4 operations[] %cl_4_3[3.1,] 	 SYMBOL:	 ARGS:%cl_4_3,
		 3: RETURN %cl_4_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_4_5 
		 1: def_%cl_4_6 %cl_4_5[4.0,] 
		 2: RETURN %cl_4_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: 
		 4: new_elems->each def_%v_35 new_elems[2.23,] %self[2.0,] 	 SYMBOL:	 ARGS:new_elems,
CLOSURE BEGIN: new[2.12,2.22,6.6,] operations[2.10,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_5_0 
		 2: RECEIVEARG def_new 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: HASH-action-value- def_%cl_5_3 new[2.2,] 
		 2: operations-><< def_%cl_5_4 operations[] %cl_5_3[3.1,] 	 SYMBOL:	 ARGS:%cl_5_3,
		 3: RETURN %cl_5_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_5_5 
		 1: def_%cl_5_6 %cl_5_5[4.0,] 
		 2: RETURN %cl_5_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 5: 
		 6: new_without_key->each def_%v_36 new_without_key[2.16,] %self[2.0,] 	 SYMBOL:	 ARGS:new_without_key,
CLOSURE BEGIN: new[19.4,] operations[2.10,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_6_0 
		 2: RECEIVEARG def_new 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: HASH-action-value- def_%cl_6_3 new[2.2,] 
		 2: operations-><< def_%cl_6_4 operations[] %cl_6_3[3.1,] 	 SYMBOL:	 ARGS:%cl_6_3,
		 3: RETURN %cl_6_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_6_5 
		 1: def_%cl_6_6 %cl_6_5[4.0,] 
		 2: RETURN %cl_6_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: 
		 8: RETURN operations[2.10,] %self[2.0,] 
BB 21
	outgoing: 
	datadep: 
	instructions:

