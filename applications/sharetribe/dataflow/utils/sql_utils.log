SET IRMethod, name = quote instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_sql_lambda 
		 6: RECEIVEARG def_params 
		 7: def_%v_3 
		 8: def_block %v_3[2.7,] 
		 9: 
		 10: (HashUtils) def_%v_4 
		 11: %v_4->map_values def_%v_5 %v_4[2.10,] params[2.6,] %self[2.0,] 	 SYMBOL:	 ARGS:params,%v_4,
CLOSURE BEGIN: p[] %self[2.0,] block[2.8,] v[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_p 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: (Array) def_%cl_1_3 
		 2: p->is_a? def_%cl_1_4 p[2.2,] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: p->map def_%cl_1_5 p[2.2,] %self[2.0,] 	 SYMBOL:	 ARGS:p,
CLOSURE BEGIN: block[] v[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_v 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: block->call def_%cl_2_3 block[] v[2.2,] 	 SYMBOL:	 ARGS:v,
		 2: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: block->call def_%cl_1_6 block[] p[2.2,] 	 SYMBOL:	 ARGS:p,
		 2: RETURN %cl_1_6[5.1,] %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[7.0,] 
		 2: RETURN %cl_1_8[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 12: sql_lambda->call def_%v_6 sql_lambda[2.5,] %v_5[2.11,] 	 SYMBOL:	 ARGS:%v_5,
		 13: RETURN %v_6[2.12,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ar_quote instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_connection 
		 6: RECEIVEARG def_sql_lambda 
		 7: RECEIVEARG def_params 
		 8: 
		 9: %self->quote def_%v_3 %self[2.0,] sql_lambda[2.6,] params[2.7,] %self[2.0,] 	 SYMBOL:	 ARGS:sql_lambda,params,%self,
CLOSURE BEGIN: connection[2.5,] p[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_p 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: connection->quote def_%cl_1_3 connection[] p[2.2,] 	 SYMBOL:	 ARGS:p,
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: RETURN %v_3[2.9,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = hash_to_query instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_opts 
		 6: 
		 7: (HashUtils) def_%v_3 
		 8: %v_3->flatten def_%v_4 %v_3[2.7,] opts[2.5,] 	 SYMBOL:	 ARGS:opts,
		 9: COPY TYPE_Array def_%v_5 
		 10: COPY TYPE_Array def_%v_6 
		 11: COPY TYPE_Array def_%v_7 %v_5[2.9,] %v_6[2.10,] 
		 12: %v_4->reduce def_%v_8 %v_4[2.8,] %v_7[2.11,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_7,%v_4,
CLOSURE BEGIN: column[] string_parts[] values[] value[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_%cl_1_1 
		 3: def_%cl_1_2 %cl_1_1[2.2,] 
		 4: def_string_parts %cl_1_2[2.3,] 
		 5: def_values %cl_1_2[2.3,] 
		 6: RECEIVEARG def_%cl_1_3 
		 7: def_%cl_1_4 %cl_1_3[2.6,] 
		 8: def_column %cl_1_4[2.7,] 
		 9: def_value %cl_1_4[2.7,] 
		 10: COPY TYPE_CurrentScope def_%current_scope 
		 11: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: column->to_s def_%cl_1_7 column[2.8,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral " = ?" def_%cl_1_8 
		 3: BUILDSTRING def_%cl_1_9 %cl_1_7[3.1,] %cl_1_8[3.2,] 
		 4: string_parts-><< def_%cl_1_10 string_parts[2.4,] %cl_1_9[3.3,] 	 SYMBOL:	 ARGS:%cl_1_9,
		 5: 
		 6: values-><< def_%cl_1_11 values[2.5,] value[2.9,] 	 SYMBOL:	 ARGS:value,
		 7: 
		 8: COPY TYPE_Array def_%cl_1_12 string_parts[3.4,2.4,] values[3.6,2.5,] 
		 9: RETURN %cl_1_12[3.8,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_13 
		 1: def_%cl_1_14 %cl_1_13[4.0,] 
		 2: RETURN %cl_1_14[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: values[2.5,] string_parts[2.4,] value[2.9,] 
		 13: def_%v_9 %v_8[2.12,] 
		 14: def_%v_10 %v_9[2.13,] 
		 15: def_%v_11 %v_9[2.13,] 
		 16: COPY TYPE_PASS def_string_parts %v_10[2.14,] 
		 17: COPY TYPE_PASS def_values %v_11[2.15,] 
		 18: 
		 19: COPY TYPE_StringLiteral ", " def_%v_12 
		 20: %v_10->join def_%v_13 %v_10[2.14,] %v_12[2.19,] 	 SYMBOL:	 ARGS:%v_12,
		 21: COPY TYPE_Array def_%v_14 %v_13[2.20,] 
		 22: %v_14->concat def_%v_15 %v_14[2.21,] values[2.12,2.17,] 	 SYMBOL:	 ARGS:values,
		 23: RETURN %v_15[2.22,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

