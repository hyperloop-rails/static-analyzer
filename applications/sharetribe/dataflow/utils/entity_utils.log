SET IRMethod, name = define_entity instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_ks 
		 6: 
		 7: def_%v_3 %self[2.0,] 
CLOSURE BEGIN: opts[] ks[2.5,] %self[2.0,] k[] memo[] 
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: RECEIVECONSTARG def_opts 
		 5: opts[2.4,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%cl_1_3 
		 1: COPY TYPE_PASS def_opts %cl_1_3[3.0,] 
BB 4
	outgoing: 5 7 
	datadep: 
	instructions:
		 0: 
		 1: HASH- def_%cl_1_4 
		 2: ks->reduce def_%cl_1_5 ks[] %cl_1_4[4.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%cl_1_4,ks,
CLOSURE BEGIN: k[] opts[3.1,2.4,] memo[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_memo 
		 3: RECEIVEARG def_k 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: k->to_sym def_%cl_2_3 k[2.3,] 	 SYMBOL:	 ARGS:
		 2: opts->[] def_%cl_2_4 opts[] k[3.1,2.3,] 	 SYMBOL:	 ARGS:k,
		 3: ATTRASSIGN memo->[] %cl_2_3[3.1,] %cl_2_4[3.2,] 
		 4: 
		 5: RETURN memo[3.3,2.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: k[2.3,] 
		 3: RETURN %cl_1_5[4.2,] %self[2.0,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[5.0,] 
		 2: RETURN %cl_1_7[5.1,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_3[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = model_to_hash instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_model 
		 6: 
		 7: model->nil? def_%v_3 model[2.5,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: HASH- def_%v_4 
		 1: RETURN %v_4[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: (HashUtils) def_%v_6 
		 3: model->attributes def_%v_7 model[2.5,] 	 SYMBOL:	 ARGS:
		 4: %v_6->symbolize_keys def_%v_8 %v_6[4.2,] %v_7[4.3,] 	 SYMBOL:	 ARGS:%v_7,
		 5: RETURN %v_8[4.4,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = spec_category instanceMethod = true
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_k 
		 6: 
		 7: (VALIDATORS) def_%v_3 
		 8: %v_3->keys def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_4->include? def_%v_5 %v_4[2.8,] k[2.5,] 	 SYMBOL:	 ARGS:k,
		 10: BRANCH %v_5[2.9,] 
BB 3
	outgoing: 15 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Symbol def_%v_6 
		 2: RETURN %self[2.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: (TRANSFORMERS) def_%v_7 
		 2: %v_7->keys def_%v_8 %v_7[4.1,] 	 SYMBOL:	 ARGS:
		 3: %v_8->include? def_%v_9 %v_8[4.2,] k[2.5,] 	 SYMBOL:	 ARGS:k,
		 4: BRANCH %v_9[4.3,] 
BB 5
	outgoing: 13 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Symbol def_%v_10 
		 2: 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: k->== def_%v_11 k[2.5,] 	 SYMBOL:collection,	 ARGS:Symbol,
		 2: BRANCH %v_11[6.1,] 
BB 7
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Symbol def_%v_12 
		 2: 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: k->== def_%v_13 k[2.5,] 	 SYMBOL:entity,	 ARGS:Symbol,
		 2: BRANCH %v_13[8.1,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Symbol def_%v_14 
		 2: 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: (ArgumentError) def_%v_15 
		 2: COPY TYPE_StringLiteral "Illegal key " def_%v_16 
		 3: COPY TYPE_StringLiteral ". Not a known transformer or validator." def_%v_17 
		 4: BUILDSTRING def_%v_18 %v_16[10.2,] k[2.5,] %v_17[10.3,] 
		 5: %self->raise def_%v_19 %self[2.0,] %v_15[10.1,] %v_18[10.4,] 	 SYMBOL:	 ARGS:%v_15,%v_18,
		 6: COPY TYPE_PASS def_%v_14 %v_19[10.5,] 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_12 %v_14[10.6,9.1,] 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_10 %v_12[11.0,7.1,] 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %v_10[12.0,5.1,] %self[2.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = parse_spec instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_spec 
		 6: 
		 7: spec->dup def_%v_3 spec[2.5,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_PASS def_s %v_3[2.7,] 
		 9: 
		 10: %v_3->extract_options! def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 11: COPY TYPE_PASS def_opts %v_4[2.10,] 
		 12: 
		 13: COPY TYPE_Array def_%v_5 
		 14: %v_5->cycle def_%v_6 %v_5[2.13,] 	 SYMBOL:	 ARGS:
		 15: s->zip def_%v_7 s[2.8,] %v_6[2.14,] 	 SYMBOL:	 ARGS:%v_6,
		 16: %v_7->to_h def_%v_8 %v_7[2.15,] 	 SYMBOL:	 ARGS:
		 17: %v_8->merge def_%v_9 %v_8[2.16,] opts[2.11,] 	 SYMBOL:	 ARGS:opts,
		 18: %v_9->group_by def_%v_10 %v_9[2.17,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_9,
CLOSURE BEGIN: %self[2.0,] name[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_%cl_1_1 
		 3: def_%cl_1_2 %cl_1_1[2.2,] 
		 4: def_name %cl_1_2[2.3,] 
		 5: def_param %cl_1_2[2.3,] 
		 6: COPY TYPE_CurrentScope def_%current_scope 
		 7: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->spec_category def_%cl_1_5 %self[2.0,] name[2.4,] 	 SYMBOL:	 ARGS:name,
		 2: RETURN %cl_1_5[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: param[2.5,] 
		 19: COPY TYPE_PASS def_parsed_spec %v_10[2.18,] 
		 20: 
		 21: 
		 22: %v_10->[] def_%v_11 %v_10[2.18,] 	 SYMBOL:validators,	 ARGS:Symbol,
		 23: BRANCH %v_11[2.22,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_12 
		 1: COPY TYPE_PASS def_%v_11 %v_12[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: %v_11->map def_%v_13 %v_11[3.1,2.22,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_11,
CLOSURE BEGIN: name[2.18,] param[2.18,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_%cl_2_1 
		 3: def_%cl_2_2 %cl_2_1[2.2,] 
		 4: def_name %cl_2_2[2.3,] 
		 5: def_param %cl_2_2[2.3,] 
		 6: COPY TYPE_CurrentScope def_%current_scope 
		 7: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (VALIDATORS) def_%cl_2_5 
		 2: %cl_2_5->[] def_%cl_2_6 %cl_2_5[3.1,] name[2.4,] 	 SYMBOL:	 ARGS:name,
		 3: %cl_2_6->curry def_%cl_2_7 %cl_2_6[3.2,] 	 SYMBOL:	 ARGS:
		 4: %cl_2_7->call def_%cl_2_8 %cl_2_7[3.3,] param[2.5,] 	 SYMBOL:	 ARGS:param,
		 5: RETURN %cl_2_8[3.4,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_9 
		 1: def_%cl_2_10 %cl_2_9[4.0,] 
		 2: RETURN %cl_2_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: param[2.5,] 
		 1: ATTRASSIGN parsed_spec->[] %v_13[4.0,] 
		 2: 
		 3: 
		 4: parsed_spec->[] def_%v_14 parsed_spec[4.1,2.19,] 	 SYMBOL:transformers,	 ARGS:Symbol,
		 5: BRANCH %v_14[4.4,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_15 
		 1: COPY TYPE_PASS def_%v_14 %v_15[5.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %v_14->map def_%v_16 %v_14[5.1,4.4,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_14,
CLOSURE BEGIN: name[4.0,] param[4.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_%cl_3_1 
		 3: def_%cl_3_2 %cl_3_1[2.2,] 
		 4: def_name %cl_3_2[2.3,] 
		 5: def_param %cl_3_2[2.3,] 
		 6: COPY TYPE_CurrentScope def_%current_scope 
		 7: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (TRANSFORMERS) def_%cl_3_5 
		 2: %cl_3_5->[] def_%cl_3_6 %cl_3_5[3.1,] name[2.4,] 	 SYMBOL:	 ARGS:name,
		 3: %cl_3_6->curry def_%cl_3_7 %cl_3_6[3.2,] 	 SYMBOL:	 ARGS:
		 4: %cl_3_7->call def_%cl_3_8 %cl_3_7[3.3,] param[2.5,] 	 SYMBOL:	 ARGS:param,
		 5: RETURN %cl_3_8[3.4,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_9 
		 1: def_%cl_3_10 %cl_3_9[4.0,] 
		 2: RETURN %cl_3_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: param[2.5,] 
		 1: ATTRASSIGN parsed_spec->[] %v_16[6.0,] 
		 2: 
		 3: opts->[] def_%v_17 opts[2.11,] 	 SYMBOL:collection,	 ARGS:Symbol,
		 4: %self->parse_nested_specs def_%v_18 %self[2.0,] %v_17[6.3,] 	 SYMBOL:	 ARGS:%v_17,
		 5: ATTRASSIGN parsed_spec->[] %v_18[6.4,] 
		 6: 
		 7: opts->[] def_%v_19 opts[6.3,2.11,] 	 SYMBOL:entity,	 ARGS:Symbol,
		 8: %self->parse_nested_specs def_%v_20 %self[6.4,2.0,] %v_19[6.7,] 	 SYMBOL:	 ARGS:%v_19,
		 9: ATTRASSIGN parsed_spec->[] %v_20[6.8,] 
		 10: 
		 11: RETURN parsed_spec[6.1,6.5,6.9,4.1,2.19,] %self[6.4,6.8,2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = parse_nested_specs instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_specs 
		 6: 
		 7: (EntityBuilder) def_%v_3 
		 8: specs->is_a? def_%v_4 specs[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: specs->specs def_%v_5 specs[2.5,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_5[3.1,] %self[2.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_6 specs[2.5,] 
		 2: BRANCH specs[2.5,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_7 
		 1: COPY TYPE_PASS def_%v_6 %v_7[5.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: %self->parse_specs def_%v_8 %self[2.0,] %v_6[5.1,4.1,] 	 SYMBOL:	 ARGS:%v_6,
		 1: RETURN %v_8[6.0,] %self[6.0,2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = parse_specs instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_specs 
		 6: 
		 7: HASH- def_%v_3 
		 8: specs->reduce def_%v_4 specs[2.5,] %v_3[2.7,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_3,specs,
CLOSURE BEGIN: full_field_spec[] f_name[] %self[2.0,] spec[] fs[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_fs 
		 3: RECEIVEARG def_full_field_spec 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_3 full_field_spec[2.3,] 
		 2: def_%cl_1_4 %cl_1_3[3.1,] 
		 3: def_%cl_1_5 %cl_1_4[3.2,] 
		 4: def_%cl_1_6 %cl_1_4[3.2,] 
		 5: COPY TYPE_PASS def_f_name %cl_1_5[3.3,] 
		 6: COPY TYPE_PASS def_spec %cl_1_6[3.4,] 
		 7: 
		 8: (Symbol) def_%cl_1_7 
		 9: %cl_1_5->is_a? def_%cl_1_8 %cl_1_5[3.3,] %cl_1_7[3.8,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 10: BRANCH %cl_1_8[3.9,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_9 
		 1: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: (ArgumentError) def_%cl_1_10 
		 1: COPY TYPE_StringLiteral "Field key must be a Symbol, was: '" def_%cl_1_11 
		 2: COPY TYPE_StringLiteral "' (" def_%cl_1_12 
		 3: f_name->class def_%cl_1_13 f_name[3.5,] 	 SYMBOL:	 ARGS:
		 4: %cl_1_13->name def_%cl_1_14 %cl_1_13[5.3,] 	 SYMBOL:	 ARGS:
		 5: COPY TYPE_StringLiteral ")" def_%cl_1_15 
		 6: BUILDSTRING def_%cl_1_16 %cl_1_11[5.1,] f_name[5.3,3.5,] %cl_1_12[5.2,] %cl_1_14[5.4,] %cl_1_15[5.5,] 
		 7: %cl_1_10->new def_%cl_1_17 %cl_1_10[5.0,] %cl_1_16[5.6,] 	 SYMBOL:	 ARGS:%cl_1_16,
		 8: %self->raise def_%cl_1_18 %self[2.0,] %cl_1_17[5.7,] 	 SYMBOL:	 ARGS:%cl_1_17,
		 9: COPY TYPE_PASS def_%cl_1_9 %cl_1_18[5.8,] 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->parse_spec def_%cl_1_19 %self[2.0,] spec[3.6,] 	 SYMBOL:	 ARGS:spec,
		 2: ATTRASSIGN fs->[] f_name[3.5,] %cl_1_19[6.1,] 
		 3: 
		 4: RETURN fs[6.2,2.2,] %self[6.1,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_20 
		 1: def_%cl_1_21 %cl_1_20[7.0,] 
		 2: RETURN %cl_1_21[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: full_field_spec[2.3,] f_name[3.5,] spec[3.6,] 
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = validate instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_validators 
		 6: RECEIVEARG def_val 
		 7: RECEIVEARG def_field 
		 8: RECEIVECONSTARG def_parent_field 
		 9: parent_field[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_parent_field 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%v_3 
		 2: validators->reduce def_%v_4 validators[2.5,] %v_3[4.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_3,validators,
CLOSURE BEGIN: validator[] val[2.6,] field[2.7,] parent_field[3.0,2.8,] err[] res[] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_res 
		 3: RECEIVEARG def_validator 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 10 
	datadep: 
	instructions:
		 0: 
		 1: validator->call def_%cl_1_3 validator[2.3,] val[] field[] 	 SYMBOL:	 ARGS:val,field,
		 2: COPY TYPE_PASS def_err %cl_1_3[3.1,] 
		 3: 
		 4: %cl_1_3->nil? def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 5: BRANCH %cl_1_4[3.4,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_5 
		 1: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: BRANCH parent_field[] 
BB 6
	outgoing: 8 10 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "." def_%cl_1_6 
		 1: field->to_s def_%cl_1_7 field[] 	 SYMBOL:	 ARGS:
		 2: BUILDSTRING def_%cl_1_8 parent_field[] %cl_1_6[6.0,] %cl_1_7[6.1,] 
		 3: 
BB 7
	outgoing: 8 10 
	datadep: 
	instructions:
		 0: field->to_s def_%cl_1_9 field[] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%cl_1_8 %cl_1_9[7.0,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: err->[] def_%cl_1_10 err[3.2,] 	 SYMBOL:code,	 ARGS:Symbol,
		 1: err->[] def_%cl_1_11 err[8.0,3.2,] 	 SYMBOL:msg,	 ARGS:Symbol,
		 2: HASH-field-code-msg- def_%cl_1_12 %cl_1_8[7.1,6.2,] %cl_1_10[8.0,] %cl_1_11[8.1,] 
		 3: res->push def_%cl_1_13 res[2.2,] %cl_1_12[8.2,] 	 SYMBOL:	 ARGS:%cl_1_12,
		 4: COPY TYPE_PASS def_%cl_1_5 %cl_1_13[8.3,] 
BB 9
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: RETURN res[2.2,] %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_1_14 
		 1: def_%cl_1_15 %cl_1_14[10.0,] 
		 2: RETURN %cl_1_15[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: err[3.2,] validator[2.3,] 
		 3: RETURN %v_4[4.2,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = validate_all instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_fields 
		 6: RECEIVEARG def_input 
		 7: RECEIVECONSTARG def_parent_field 
		 8: parent_field[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_parent_field 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%v_3 
		 2: fields->reduce def_%v_4 fields[2.5,] %v_3[4.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_3,fields,
CLOSURE BEGIN: spec[] input[2.6,] name[] %self[2.0,] parent_field[3.0,2.7,] i[] v[] errors[] errs[] errors[] nested_errors[] 
BB 1
	outgoing: 16 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 14 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_errs 
		 3: RECEIVEARG def_%cl_1_1 
		 4: def_%cl_1_2 %cl_1_1[2.3,] 
		 5: def_name %cl_1_2[2.4,] 
		 6: def_spec %cl_1_2[2.4,] 
		 7: COPY TYPE_CurrentScope def_%current_scope 
		 8: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 14 
	datadep: 
	instructions:
		 0: 
		 1: spec->[] def_%cl_1_5 spec[2.6,] 	 SYMBOL:validators,	 ARGS:Symbol,
		 2: input->[] def_%cl_1_6 input[] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 3: %self->validate def_%cl_1_7 %self[2.0,] %cl_1_5[3.1,] %cl_1_6[3.2,] name[2.5,] parent_field[] 	 SYMBOL:	 ARGS:%cl_1_5,%cl_1_6,name,parent_field,
		 4: COPY TYPE_PASS def_errors %cl_1_7[3.3,] 
		 5: 
		 6: 
		 7: spec->[] def_%cl_1_8 spec[3.1,2.6,] 	 SYMBOL:collection,	 ARGS:Symbol,
		 8: %cl_1_8->present? def_%cl_1_9 %cl_1_8[3.7,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %cl_1_9[3.8,] 
BB 4
	outgoing: 5 14 
	datadep: 
	instructions:
		 0: input->[] def_%cl_1_10 input[] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 1: COPY TYPE_PASS def_%cl_1_9 %cl_1_10[4.0,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_9[4.1,3.8,] 
BB 6
	outgoing: 13 14 
	datadep: 
	instructions:
		 0: 
		 1: input->[] def_%cl_1_11 input[] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 2: %cl_1_11->each_with_index def_%cl_1_12 %cl_1_11[6.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_Array def_%cl_1_13 
		 4: %cl_1_12->reduce def_%cl_1_14 %cl_1_12[6.2,] %cl_1_13[6.3,] %self[2.0,] 	 SYMBOL:	 ARGS:%cl_1_13,%cl_1_12,
CLOSURE BEGIN: spec[2.6,] name[2.5,] i[] %self[2.0,] v[] errors[3.4,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_errors 
		 3: RECEIVEARG def_%cl_2_1 
		 4: def_%cl_2_2 %cl_2_1[2.3,] 
		 5: def_v %cl_2_2[2.4,] 
		 6: def_i %cl_2_2[2.4,] 
		 7: COPY TYPE_CurrentScope def_%current_scope 
		 8: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: spec->[] def_%cl_2_5 spec[] 	 SYMBOL:collection,	 ARGS:Symbol,
		 2: name->to_s def_%cl_2_6 name[] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_StringLiteral "[" def_%cl_2_7 
		 4: COPY TYPE_StringLiteral "]" def_%cl_2_8 
		 5: BUILDSTRING def_%cl_2_9 %cl_2_6[3.2,] %cl_2_7[3.3,] i[2.6,] %cl_2_8[3.4,] 
		 6: %self->validate_all def_%cl_2_10 %self[2.0,] %cl_2_5[3.1,] v[2.5,] %cl_2_9[3.5,] 	 SYMBOL:	 ARGS:%cl_2_5,v,%cl_2_9,
		 7: COPY TYPE_PASS def_collection_errors %cl_2_10[3.6,] 
		 8: 
		 9: errors->concat def_%cl_2_11 errors[2.2,] %cl_2_10[3.6,] 	 SYMBOL:	 ARGS:collection_errors,
		 10: RETURN %cl_2_11[3.9,] %self[3.6,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_12 
		 1: def_%cl_2_13 %cl_2_12[4.0,] 
		 2: RETURN %cl_2_13[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: collection_errors[3.7,] v[2.5,] i[2.6,] 
		 5: 
BB 7
	outgoing: 8 9 14 
	datadep: 
	instructions:
		 0: 
		 1: spec->[] def_%cl_1_15 spec[2.6,] 	 SYMBOL:entity,	 ARGS:Symbol,
		 2: %cl_1_15->present? def_%cl_1_16 %cl_1_15[7.1,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %cl_1_16[7.2,] 
BB 8
	outgoing: 9 14 
	datadep: 
	instructions:
		 0: input->[] def_%cl_1_17 input[] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 1: COPY TYPE_PASS def_%cl_1_16 %cl_1_17[8.0,] 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_16[8.1,7.2,] 
BB 10
	outgoing: 12 14 
	datadep: 
	instructions:
		 0: 
		 1: spec->[] def_%cl_1_18 spec[2.6,] 	 SYMBOL:entity,	 ARGS:Symbol,
		 2: input->[] def_%cl_1_19 input[] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 3: name->to_s def_%cl_1_20 name[2.5,] 	 SYMBOL:	 ARGS:
		 4: %self->validate_all def_%cl_1_21 %self[2.0,] %cl_1_18[10.1,] %cl_1_19[10.2,] %cl_1_20[10.3,] 	 SYMBOL:	 ARGS:%cl_1_18,%cl_1_19,%cl_1_20,
		 5: 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%cl_1_22 
		 2: COPY TYPE_PASS def_%cl_1_21 %cl_1_22[11.1,] 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%cl_1_14 %cl_1_21[11.2,10.4,] 
BB 13
	outgoing: 14 16 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_nested_errors %cl_1_14[12.0,6.4,] 
		 1: 
		 2: errs->concat def_%cl_1_23 errs[2.2,] errors[6.4,3.4,] 	 SYMBOL:	 ARGS:errors,
		 3: %cl_1_23->concat def_%cl_1_24 %cl_1_23[13.2,] nested_errors[13.0,] 	 SYMBOL:	 ARGS:nested_errors,
		 4: RETURN %cl_1_24[13.3,] %self[2.0,] 
BB 14
	outgoing: 16 
	datadep: 
	instructions:
		 0: def_%cl_1_25 
		 1: def_%cl_1_26 %cl_1_25[14.0,] 
		 2: RETURN %cl_1_26[14.1,] %self[2.0,] 
BB 16
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: nested_errors[13.0,] name[2.5,] spec[2.6,] errors[6.4,3.4,] 
		 3: RETURN %v_4[4.2,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = transform instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_transformers 
		 6: RECEIVEARG def_val 
		 7: 
		 8: transformers->reduce def_%v_3 transformers[2.5,] val[2.6,] %self[2.0,] 	 SYMBOL:	 ARGS:val,transformers,
CLOSURE BEGIN: transformer[] v[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_v 
		 3: RECEIVEARG def_transformer 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: transformer->call def_%cl_1_3 transformer[2.3,] v[2.2,] 	 SYMBOL:	 ARGS:v,
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: transformer[2.3,] 
		 9: RETURN %v_3[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = transform_all instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_fields 
		 6: RECEIVEARG def_input 
		 7: 
		 8: HASH- def_%v_3 
		 9: fields->reduce def_%v_4 fields[2.5,] %v_3[2.8,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_3,fields,
CLOSURE BEGIN: spec[] input[2.6,] name[] %self[2.0,] out[] v[] 
BB 1
	outgoing: 22 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 20 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_out 
		 3: RECEIVEARG def_%cl_1_1 
		 4: def_%cl_1_2 %cl_1_1[2.3,] 
		 5: def_name %cl_1_2[2.4,] 
		 6: def_spec %cl_1_2[2.4,] 
		 7: COPY TYPE_CurrentScope def_%current_scope 
		 8: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 20 
	datadep: 
	instructions:
		 0: 
		 1: spec->[] def_%cl_1_5 spec[2.6,] 	 SYMBOL:transformers,	 ARGS:Symbol,
		 2: input->[] def_%cl_1_6 input[] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 3: %self->transform def_%cl_1_7 %self[2.0,] %cl_1_5[3.1,] %cl_1_6[3.2,] 	 SYMBOL:	 ARGS:%cl_1_5,%cl_1_6,
		 4: ATTRASSIGN out->[] name[2.5,] %cl_1_7[3.3,] 
		 5: 
		 6: 
		 7: spec->[] def_%cl_1_8 spec[3.1,2.6,] 	 SYMBOL:collection,	 ARGS:Symbol,
		 8: %cl_1_8->present? def_%cl_1_9 %cl_1_8[3.7,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %cl_1_9[3.8,] 
BB 4
	outgoing: 5 20 
	datadep: 
	instructions:
		 0: out->[] def_%cl_1_10 out[3.4,2.2,] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 1: COPY TYPE_PASS def_%cl_1_9 %cl_1_10[4.0,] 
BB 5
	outgoing: 6 10 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_9[4.1,3.8,] 
BB 6
	outgoing: 7 8 20 
	datadep: 
	instructions:
		 0: 
		 1: out->[] def_%cl_1_11 out[3.4,2.2,] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 2: (Array) def_%cl_1_12 
		 3: %cl_1_11->is_a? def_%cl_1_13 %cl_1_11[6.1,] %cl_1_12[6.2,] 	 SYMBOL:	 ARGS:%cl_1_12,
		 4: BRANCH %cl_1_13[6.3,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_14 
		 1: 
BB 8
	outgoing: 9 20 
	datadep: 
	instructions:
		 0: (ArgumentError) def_%cl_1_15 
		 1: COPY TYPE_StringLiteral "Value for collection '" def_%cl_1_16 
		 2: COPY TYPE_StringLiteral "' must be an Array. Was: " def_%cl_1_17 
		 3: out->[] def_%cl_1_18 out[3.4,2.2,] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 4: COPY TYPE_StringLiteral " (" def_%cl_1_19 
		 5: out->[] def_%cl_1_20 out[8.3,3.4,2.2,] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 6: %cl_1_20->class def_%cl_1_21 %cl_1_20[8.5,] 	 SYMBOL:	 ARGS:
		 7: %cl_1_21->name def_%cl_1_22 %cl_1_21[8.6,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_StringLiteral ")" def_%cl_1_23 
		 9: BUILDSTRING def_%cl_1_24 %cl_1_16[8.1,] name[2.5,] %cl_1_17[8.2,] %cl_1_18[8.3,] %cl_1_19[8.4,] %cl_1_22[8.7,] %cl_1_23[8.8,] 
		 10: %cl_1_15->new def_%cl_1_25 %cl_1_15[8.0,] %cl_1_24[8.9,] 	 SYMBOL:	 ARGS:%cl_1_24,
		 11: %self->raise def_%cl_1_26 %self[2.0,] %cl_1_25[8.10,] 	 SYMBOL:	 ARGS:%cl_1_25,
		 12: COPY TYPE_PASS def_%cl_1_14 %cl_1_26[8.11,] 
BB 9
	outgoing: 19 20 
	datadep: 
	instructions:
		 0: 
		 1: out->[] def_%cl_1_27 out[3.4,2.2,] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 2: %cl_1_27->map def_%cl_1_28 %cl_1_27[9.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%cl_1_27,
CLOSURE BEGIN: spec[2.6,] %self[2.0,] v[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_v 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: spec->[] def_%cl_2_3 spec[] 	 SYMBOL:collection,	 ARGS:Symbol,
		 2: %self->transform_all def_%cl_2_4 %self[2.0,] %cl_2_3[3.1,] v[2.2,] 	 SYMBOL:	 ARGS:%cl_2_3,v,
		 3: RETURN %cl_2_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: 
BB 10
	outgoing: 11 12 20 
	datadep: 
	instructions:
		 0: 
		 1: spec->[] def_%cl_1_29 spec[2.6,] 	 SYMBOL:entity,	 ARGS:Symbol,
		 2: %cl_1_29->present? def_%cl_1_30 %cl_1_29[10.1,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %cl_1_30[10.2,] 
BB 11
	outgoing: 12 20 
	datadep: 
	instructions:
		 0: out->[] def_%cl_1_31 out[3.4,2.2,] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 1: COPY TYPE_PASS def_%cl_1_30 %cl_1_31[11.0,] 
BB 12
	outgoing: 13 17 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_30[11.1,10.2,] 
BB 13
	outgoing: 14 15 20 
	datadep: 
	instructions:
		 0: 
		 1: out->[] def_%cl_1_32 out[3.4,2.2,] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 2: (Hash) def_%cl_1_33 
		 3: %cl_1_32->is_a? def_%cl_1_34 %cl_1_32[13.1,] %cl_1_33[13.2,] 	 SYMBOL:	 ARGS:%cl_1_33,
		 4: BRANCH %cl_1_34[13.3,] 
BB 14
	outgoing: 16 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_35 
		 1: 
BB 15
	outgoing: 16 20 
	datadep: 
	instructions:
		 0: (ArgumentError) def_%cl_1_36 
		 1: COPY TYPE_StringLiteral "Value for entity '" def_%cl_1_37 
		 2: COPY TYPE_StringLiteral "' must be a Hash. Was: " def_%cl_1_38 
		 3: out->[] def_%cl_1_39 out[3.4,2.2,] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 4: COPY TYPE_StringLiteral " (" def_%cl_1_40 
		 5: out->[] def_%cl_1_41 out[15.3,3.4,2.2,] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 6: %cl_1_41->class def_%cl_1_42 %cl_1_41[15.5,] 	 SYMBOL:	 ARGS:
		 7: %cl_1_42->name def_%cl_1_43 %cl_1_42[15.6,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_StringLiteral ")" def_%cl_1_44 
		 9: BUILDSTRING def_%cl_1_45 %cl_1_37[15.1,] name[2.5,] %cl_1_38[15.2,] %cl_1_39[15.3,] %cl_1_40[15.4,] %cl_1_43[15.7,] %cl_1_44[15.8,] 
		 10: %cl_1_36->new def_%cl_1_46 %cl_1_36[15.0,] %cl_1_45[15.9,] 	 SYMBOL:	 ARGS:%cl_1_45,
		 11: %self->raise def_%cl_1_47 %self[2.0,] %cl_1_46[15.10,] 	 SYMBOL:	 ARGS:%cl_1_46,
		 12: COPY TYPE_PASS def_%cl_1_35 %cl_1_47[15.11,] 
BB 16
	outgoing: 18 20 
	datadep: 
	instructions:
		 0: 
		 1: spec->[] def_%cl_1_48 spec[2.6,] 	 SYMBOL:entity,	 ARGS:Symbol,
		 2: out->[] def_%cl_1_49 out[3.4,2.2,] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 3: %self->transform_all def_%cl_1_50 %self[2.0,] %cl_1_48[16.1,] %cl_1_49[16.2,] 	 SYMBOL:	 ARGS:%cl_1_48,%cl_1_49,
		 4: 
BB 17
	outgoing: 18 20 
	datadep: 
	instructions:
		 0: 
		 1: out->[] def_%cl_1_51 out[3.4,2.2,] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 2: COPY TYPE_PASS def_%cl_1_50 %cl_1_51[17.1,] 
BB 18
	outgoing: 19 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%cl_1_28 %cl_1_50[17.2,16.3,] 
BB 19
	outgoing: 20 22 
	datadep: 
	instructions:
		 0: ATTRASSIGN out->[] name[2.5,] %cl_1_28[18.0,9.2,] 
		 1: 
		 2: RETURN out[19.0,3.4,2.2,] %self[2.0,] 
BB 20
	outgoing: 22 
	datadep: 
	instructions:
		 0: def_%cl_1_52 
		 1: def_%cl_1_53 %cl_1_52[20.0,] 
		 2: RETURN %cl_1_53[20.1,] %self[2.0,] 
BB 22
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: name[2.5,] spec[2.6,] 
		 10: RETURN %v_4[2.9,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = transform_and_validate instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_fields 
		 6: RECEIVEARG def_input 
		 7: 
		 8: %self->transform_all def_%v_3 %self[2.0,] fields[2.5,] input[2.6,] 	 SYMBOL:	 ARGS:fields,input,
		 9: COPY TYPE_PASS def_output %v_3[2.8,] 
		 10: 
		 11: %self->validate_all def_%v_4 %self[2.0,2.8,] fields[2.5,] %v_3[2.8,] 	 SYMBOL:	 ARGS:fields,output,
		 12: COPY TYPE_PASS def_errors %v_4[2.11,] 
		 13: 
		 14: HASH-value-errors- def_%v_5 output[2.9,] %v_4[2.11,] 
		 15: RETURN %v_5[2.14,] %self[2.0,2.8,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = define_builder instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_specs 
		 6: 
		 7: (EntityBuilder) def_%v_3 
		 8: %self->parse_specs def_%v_4 %self[2.0,] specs[2.5,] 	 SYMBOL:	 ARGS:specs,
		 9: %v_3->new def_%v_5 %v_3[2.7,] %v_4[2.8,] 	 SYMBOL:	 ARGS:%v_4,
		 10: RETURN %v_5[2.9,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_specs 
		 6: 
		 7: ATTRASSIGN %self->specs specs[2.5,] 
		 8: RETURN specs[2.5,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = build instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_data 
		 6: 
		 7: GETFIELD %self->specs def_%v_3 %self[2.0,] 
		 8: COPY TYPE_PASS def_%v_4 %v_3[2.7,] 
		 9: COPY TYPE_PASS def_%v_5 data[2.5,] 
		 10: def_%v_6 %self[2.0,] 
CLOSURE BEGIN: result[] 
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: RECEIVEARG def_result 
		 5: 
		 6: result->[] def_%cl_1_3 result[2.4,] 	 SYMBOL:value,	 ARGS:Symbol,
		 7: RETURN %cl_1_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[3.0,] 
		 2: RETURN %cl_1_5[3.1,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: COPY TYPE_PASS def_%v_7 %v_6[2.10,] 
		 12: def_%v_8 %self[2.0,] 
CLOSURE BEGIN: %self[2.0,] result[2.10,] loc[] 
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: RECEIVEARG def_result 
		 5: 
		 6: %self->caller_locations def_%cl_2_3 %self[2.0,] 	 SYMBOL:	 ARGS:Fixnum,Fixnum,
		 7: %cl_2_3->first def_%cl_2_4 %cl_2_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_PASS def_loc %cl_2_4[2.7,] 
		 9: 
		 10: (ArgumentError) def_%cl_2_5 
		 11: COPY TYPE_StringLiteral "Error(s) in " def_%cl_2_6 
		 12: COPY TYPE_StringLiteral ": " def_%cl_2_7 
		 13: %self->error_msg def_%cl_2_8 %self[2.0,2.6,] result[2.4,] 	 SYMBOL:	 ARGS:result,
		 14: BUILDSTRING def_%cl_2_9 %cl_2_6[2.11,] loc[2.8,] %cl_2_7[2.12,] %cl_2_8[2.13,] 
		 15: %self->raise def_%cl_2_10 %self[2.0,2.6,2.13,] %cl_2_5[2.10,] %cl_2_9[2.14,] 	 SYMBOL:	 ARGS:%cl_2_5,%cl_2_9,
		 16: RETURN %cl_2_10[2.15,] %self[2.0,2.6,2.13,2.15,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: def_%cl_2_11 
		 1: def_%cl_2_12 %cl_2_11[3.0,] 
		 2: RETURN %cl_2_12[3.1,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: loc[2.8,] 
		 13: COPY TYPE_PASS def_%v_9 %v_8[2.12,] 
		 14: HASH-specs-data-on_success-on_failure- def_%v_10 %v_3[2.7,] data[2.5,] %v_6[2.10,] %v_8[2.12,] 
		 15: COPY TYPE_PASS def_%v_11 %v_10[2.14,] 
		 16: %self->with_result def_%v_12 %self[2.0,] %v_10[2.14,] 	 SYMBOL:	 ARGS:%v_11,
		 17: RETURN %v_12[2.16,] %self[2.0,2.16,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = validate instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_data 
		 6: 
		 7: GETFIELD %self->specs def_%v_3 %self[2.0,] 
		 8: def_%v_4 %self[2.0,] 
CLOSURE BEGIN: result[] 
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: RECEIVEARG def_result 
		 5: 
		 6: (Result) def_%cl_1_3 
		 7: (inherit Success) def_%cl_1_4 %cl_1_3[2.6,] 
		 8: %cl_1_4[2.7,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: %cl_1_3->const_missing def_%cl_1_4 %cl_1_3[2.6,] 	 SYMBOL:Success,	 ARGS:Symbol,
BB 4
	outgoing: 5 7 
	datadep: 
	instructions:
		 0: result->[] def_%cl_1_5 result[2.4,] 	 SYMBOL:value,	 ARGS:Symbol,
		 1: %cl_1_4->new def_%cl_1_6 %cl_1_4[3.0,2.7,] %cl_1_5[4.0,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[5.0,] 
		 2: RETURN %cl_1_8[5.1,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: def_%v_5 %self[2.0,] 
CLOSURE BEGIN: %self[2.0,] result[2.8,] 
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: RECEIVEARG def_result 
		 5: 
		 6: (Result) def_%cl_2_3 
		 7: (inherit Error) def_%cl_2_4 %cl_2_3[2.6,] 
		 8: %cl_2_4[2.7,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: %cl_2_3->const_missing def_%cl_2_4 %cl_2_3[2.6,] 	 SYMBOL:Error,	 ARGS:Symbol,
BB 4
	outgoing: 5 7 
	datadep: 
	instructions:
		 0: %self->error_msg def_%cl_2_5 %self[2.0,] result[2.4,] 	 SYMBOL:	 ARGS:result,
		 1: result->[] def_%cl_2_6 result[2.4,] 	 SYMBOL:errors,	 ARGS:Symbol,
		 2: %cl_2_4->new def_%cl_2_7 %cl_2_4[3.0,2.7,] %cl_2_5[4.0,] %cl_2_6[4.1,] 	 SYMBOL:	 ARGS:%cl_2_5,%cl_2_6,
		 3: RETURN %cl_2_7[4.2,] %self[4.0,2.0,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: def_%cl_2_8 
		 1: def_%cl_2_9 %cl_2_8[5.0,] 
		 2: RETURN %cl_2_9[5.1,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: HASH-specs-data-on_success-on_failure- def_%v_6 %v_3[2.7,] data[2.5,] %v_4[2.8,] %v_5[2.9,] 
		 11: %self->with_result def_%v_7 %self[2.0,] %v_6[2.10,] 	 SYMBOL:	 ARGS:%v_6,
		 12: RETURN %v_7[2.11,] %self[2.0,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = serialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_hash 
		 6: 
		 7: %self->build def_%v_3 %self[2.0,] hash[2.5,] 	 SYMBOL:	 ARGS:hash,
		 8: %v_3->to_json def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: RETURN %v_4[2.8,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = deserialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_string 
		 6: 
		 7: (HashUtils) def_%v_3 
		 8: (JSON) def_%v_4 
		 9: %v_4->parse def_%v_5 %v_4[2.8,] string[2.5,] 	 SYMBOL:	 ARGS:string,
		 10: %v_3->symbolize_keys def_%v_6 %v_3[2.7,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_5,
		 11: %self->build def_%v_7 %self[2.0,] %v_6[2.10,] 	 SYMBOL:	 ARGS:%v_6,
		 12: RETURN %v_7[2.11,] %self[2.0,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = error_msg instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_result 
		 6: 
		 7: result->[] def_%v_3 result[2.5,] 	 SYMBOL:errors,	 ARGS:Symbol,
		 8: %v_3->map def_%v_4 %v_3[2.7,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: error[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_error 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: error->[] def_%cl_1_3 error[2.2,] 	 SYMBOL:field,	 ARGS:Symbol,
		 2: COPY TYPE_StringLiteral ": " def_%cl_1_4 
		 3: error->[] def_%cl_1_5 error[3.1,2.2,] 	 SYMBOL:msg,	 ARGS:Symbol,
		 4: BUILDSTRING def_%cl_1_6 %cl_1_3[3.1,] %cl_1_4[3.2,] %cl_1_5[3.3,] 
		 5: RETURN %cl_1_6[3.4,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: COPY TYPE_StringLiteral ", " def_%v_5 
		 10: %v_4->join def_%v_6 %v_4[2.8,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_5,
		 11: RETURN %v_6[2.10,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = with_result instanceMethod = true
BB 1
	outgoing: 17 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_specs 
		 6: specs[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: def_data 
		 1: data[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: def_on_success 
		 1: on_success[6.0,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: def_on_failure 
		 1: on_failure[8.0,] 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
BB 10
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: 
		 1: (Hash) def_%v_3 
		 2: data->is_a? def_%v_4 data[4.0,] %v_3[10.1,] 	 SYMBOL:	 ARGS:%v_3,
		 3: BRANCH %v_4[10.2,] 
BB 11
	outgoing: 13 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: (TypeError) def_%v_6 
		 1: COPY TYPE_StringLiteral "Expecting an input hash. You gave: " def_%v_7 
		 2: BUILDSTRING def_%v_8 %v_7[12.1,] data[4.0,] 
		 3: %self->raise def_%v_9 %self[2.0,] %v_6[12.0,] %v_8[12.2,] 	 SYMBOL:	 ARGS:%v_6,%v_8,
		 4: COPY TYPE_PASS def_%v_5 %v_9[12.3,] 
BB 13
	outgoing: 14 15 
	datadep: 
	instructions:
		 0: 
		 1: (EntityUtils) def_%v_10 
		 2: %v_10->transform_and_validate def_%v_11 %v_10[13.1,] specs[2.5,] data[4.0,] 	 SYMBOL:	 ARGS:specs,data,
		 3: COPY TYPE_PASS def_result %v_11[13.2,] 
		 4: 
		 5: %v_11->[] def_%v_12 %v_11[13.2,] 	 SYMBOL:errors,	 ARGS:Symbol,
		 6: %v_12->empty? def_%v_13 %v_12[13.5,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_13[13.6,] 
BB 14
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
		 1: on_success->call def_%v_14 on_success[6.0,] result[13.3,] 	 SYMBOL:	 ARGS:result,
		 2: RETURN %v_14[14.1,] %self[2.0,] 
BB 15
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
		 1: on_failure->call def_%v_15 on_failure[8.0,] result[13.3,] 	 SYMBOL:	 ARGS:result,
		 2: RETURN %v_15[15.1,] %self[2.0,] 
BB 17
	outgoing: 
	datadep: 
	instructions:

