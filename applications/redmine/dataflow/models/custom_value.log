SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 14 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_attributes 
		 6: attributes[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_attributes 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: RECEIVEARG def_args 
		 1: 
		 2: %self->super def_%v_3 %current_module[2.3,] attributes[3.0,2.5,] args[4.0,] %v_0[2.1,] 	 SYMBOL:	 ARGS:attributes,Splat,
		 3: 
		 4: %self->new_record? def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 5: BRANCH %v_4[4.4,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->custom_field def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_4 %v_5[5.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: BRANCH %v_4[5.1,4.4,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: attributes->key? def_%v_6 attributes[3.0,2.5,] 	 SYMBOL:value,	 ARGS:Symbol,
		 1: %v_6->! def_%v_7 %v_6[7.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_4 %v_7[7.1,] 
BB 8
	outgoing: 9 12 
	datadep: 
	instructions:
		 0: BRANCH %v_4[7.2,5.1,4.4,] 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: 
		 1: %self->value def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_8[9.1,] 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: %self->custom_field def_%v_10 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_10->default_value def_%v_11 %v_10[10.0,] 	 SYMBOL:	 ARGS:
		 2: %self->value= def_%v_9 %v_11[10.1,] 	 SYMBOL:	 ARGS:%v_11,
		 3: COPY TYPE_PASS def_%v_8 %v_11[10.1,] 
BB 11
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN %v_8[10.3,9.1,] %self[10.2,2.0,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 14
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = true? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->value def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "1" def_%v_4 
		 8: %v_3->== def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = editable? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->custom_field def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->editable? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = visible? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->custom_field def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->visible? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = required? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->custom_field def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->is_required? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_s instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->value def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->to_s def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

