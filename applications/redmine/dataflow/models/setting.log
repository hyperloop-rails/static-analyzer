SET IRMethod, name = value instanceMethod = true
BB 1
	outgoing: 13 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->read_attribute def_%v_3 %self[2.0,] 	 SYMBOL:value,	 ARGS:Symbol,
		 7: COPY TYPE_PASS def_v %v_3[2.6,] 
		 8: 
		 9: %self->available_settings def_%v_4 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 10: %self->name def_%v_5 %self[2.0,2.6,2.9,] 	 SYMBOL:	 ARGS:
		 11: %v_4->[] def_%v_6 %v_4[2.9,] %v_5[2.10,] 	 SYMBOL:	 ARGS:%v_5,
		 12: COPY TYPE_StringLiteral "serialized" def_%v_7 
		 13: %v_6->[] def_%v_8 %v_6[2.11,] %v_7[2.12,] 	 SYMBOL:	 ARGS:%v_7,
		 14: BRANCH %v_8[2.13,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: (String) def_%v_9 
		 1: v->is_a? def_%v_10 v[2.7,] %v_9[3.0,] 	 SYMBOL:	 ARGS:%v_9,
		 2: COPY TYPE_PASS def_%v_8 %v_10[3.1,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_8[3.2,2.13,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: (YAML) def_%v_11 
		 2: %v_11->load def_%v_12 %v_11[5.1,] v[2.7,] 	 SYMBOL:	 ARGS:v,
		 3: COPY TYPE_PASS def_v %v_12[5.2,] 
		 4: 
		 5: %self->force_utf8_strings def_%v_13 %self[2.0,] %v_12[5.2,] 	 SYMBOL:	 ARGS:v,
		 6: COPY TYPE_PASS def_v %v_13[5.5,] 
		 7: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_13 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->available_settings def_%v_14 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %self->name def_%v_15 %self[7.1,2.0,] 	 SYMBOL:	 ARGS:
		 3: %v_14->[] def_%v_16 %v_14[7.1,] %v_15[7.2,] 	 SYMBOL:	 ARGS:%v_15,
		 4: COPY TYPE_StringLiteral "format" def_%v_17 
		 5: %v_16->[] def_%v_18 %v_16[7.3,] %v_17[7.4,] 	 SYMBOL:	 ARGS:%v_17,
		 6: COPY TYPE_StringLiteral "symbol" def_%v_19 
		 7: %v_18->== def_%v_20 %v_18[7.5,] %v_19[7.6,] 	 SYMBOL:	 ARGS:%v_19,
		 8: BRANCH %v_20[7.7,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: v->blank? def_%v_21 v[5.3,5.6,2.7,] 	 SYMBOL:	 ARGS:
		 1: %v_21->! def_%v_22 %v_21[8.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_20 %v_22[8.1,] 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: BRANCH %v_20[8.2,7.7,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: v->to_sym def_%v_23 v[5.3,5.6,2.7,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_v %v_23[10.0,] 
		 2: 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_23 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: 
		 1: RETURN v[10.1,5.3,5.6,2.7,] %self[2.0,] 
BB 13
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = value= instanceMethod = true
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_v 
		 6: 
		 7: COPY TYPE_PASS def_%v_3 v[2.5,] 
		 8: BRANCH v[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->available_settings def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %self->name def_%v_5 %self[3.0,2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_4->[] def_%v_6 %v_4[3.0,] %v_5[3.1,] 	 SYMBOL:	 ARGS:%v_5,
		 3: COPY TYPE_PASS def_%v_3 %v_6[3.2,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.3,2.7,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->available_settings def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %self->name def_%v_8 %self[5.0,2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_7->[] def_%v_9 %v_7[5.0,] %v_8[5.1,] 	 SYMBOL:	 ARGS:%v_8,
		 3: COPY TYPE_StringLiteral "serialized" def_%v_10 
		 4: %v_9->[] def_%v_11 %v_9[5.2,] %v_10[5.3,] 	 SYMBOL:	 ARGS:%v_10,
		 5: COPY TYPE_PASS def_%v_3 %v_11[5.4,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: BRANCH %v_3[5.5,3.3,2.7,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: v->to_yaml def_%v_12 v[2.5,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_v %v_12[7.0,] 
		 2: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_12 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: v->to_s def_%v_13 v[7.1,2.5,] 	 SYMBOL:	 ARGS:
		 2: %self->write_attribute def_%v_14 %self[2.0,] %v_13[9.1,] 	 SYMBOL:value,	 ARGS:Symbol,%v_13,
		 3: RETURN %v_14[9.2,] %self[9.2,2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = [] instanceMethod = false
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: 
		 7: GETFIELD %self->cached_settings def_%v_3 %self[2.0,] 
		 8: %v_3->[] def_%v_4 %v_3[2.7,] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 9: COPY TYPE_PASS def_v %v_4[2.8,] 
		 10: 
		 11: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_5 v[2.9,] 
		 1: RETURN %v_5[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: GETFIELD %self->cached_settings def_%v_6 %self[2.0,] 
		 1: %self->find_or_default def_%v_7 %self[2.0,] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 2: %v_7->value def_%v_8 %v_7[4.1,] 	 SYMBOL:	 ARGS:
		 3: ATTRASSIGN %v_6->[] name[2.5,] %v_8[4.2,] 
		 4: RETURN %v_8[4.2,] %self[4.1,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = []= instanceMethod = false
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: RECEIVEARG def_v 
		 7: 
		 8: %self->find_or_default def_%v_3 %self[2.0,] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 9: COPY TYPE_PASS def_setting %v_3[2.8,] 
		 10: 
		 11: BRANCH v[2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_4 v[2.6,] 
		 1: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "" def_%v_5 
		 1: COPY TYPE_PASS def_%v_4 %v_5[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: ATTRASSIGN setting->value %v_4[4.1,3.0,] 
		 1: 
		 2: GETFIELD %self->cached_settings def_%v_6 %self[2.0,] 
		 3: ATTRASSIGN %v_6->[] name[2.5,] 
		 4: 
		 5: setting->save def_%v_7 setting[5.0,2.9,] 	 SYMBOL:	 ARGS:
		 6: 
		 7: setting->value def_%v_8 setting[5.0,5.5,2.9,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_8[5.7,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_all_from_params instanceMethod = false
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_settings 
		 6: 
		 7: (Hash) def_%v_3 
		 8: settings->is_a? def_%v_4 settings[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: settings->dup def_%v_6 settings[2.5,] 	 SYMBOL:	 ARGS:
		 3: %v_6->symbolize_keys def_%v_7 %v_6[3.2,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_PASS def_settings %v_7[3.3,] 
		 5: 
		 6: COPY TYPE_Array def_%v_8 
		 7: COPY TYPE_PASS def_changes %v_8[3.6,] 
		 8: 
		 9: %v_7->each def_%v_9 %v_7[3.3,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_7,
CLOSURE BEGIN: %self[2.0,] name[] value[] previous_value[] changes[3.7,] 
BB 1
	outgoing: 14 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_name 
		 3: RECEIVEARG def_value 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->available_settings def_%cl_1_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: name->to_s def_%cl_1_4 name[2.2,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_3->[] def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: BRANCH %cl_1_5[3.3,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_6 
		 1: 
BB 5
	outgoing: 12 14 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] 
BB 6
	outgoing: 7 8 12 
	datadep: 
	instructions:
		 0: 
		 1: (Setting) def_%cl_1_7 
		 2: %cl_1_7->[] def_%cl_1_8 %cl_1_7[6.1,] name[2.2,] 	 SYMBOL:	 ARGS:name,
		 3: COPY TYPE_PASS def_previous_value %cl_1_8[6.2,] 
		 4: 
		 5: %self->set_from_params def_%cl_1_9 %self[2.0,] name[2.2,] value[2.3,] 	 SYMBOL:	 ARGS:name,value,
		 6: 
		 7: %self->available_settings def_%cl_1_10 %self[6.5,2.0,] 	 SYMBOL:	 ARGS:
		 8: name->to_s def_%cl_1_11 name[2.2,] 	 SYMBOL:	 ARGS:
		 9: %cl_1_10->[] def_%cl_1_12 %cl_1_10[6.7,] %cl_1_11[6.8,] 	 SYMBOL:	 ARGS:%cl_1_11,
		 10: COPY TYPE_StringLiteral "security_notifications" def_%cl_1_13 
		 11: %cl_1_12->[] def_%cl_1_14 %cl_1_12[6.9,] %cl_1_13[6.10,] 	 SYMBOL:	 ARGS:%cl_1_13,
		 12: BRANCH %cl_1_14[6.11,] 
BB 7
	outgoing: 8 12 
	datadep: 
	instructions:
		 0: (Setting) def_%cl_1_15 
		 1: %cl_1_15->[] def_%cl_1_16 %cl_1_15[7.0,] name[2.2,] 	 SYMBOL:	 ARGS:name,
		 2: %cl_1_16->!= def_%cl_1_17 %cl_1_16[7.1,] previous_value[6.3,] 	 SYMBOL:	 ARGS:previous_value,
		 3: COPY TYPE_PASS def_%cl_1_14 %cl_1_17[7.2,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_14[7.3,6.11,] 
BB 9
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: 
		 1: changes-><< def_%cl_1_18 changes[] name[2.2,] 	 SYMBOL:	 ARGS:name,
		 2: 
BB 10
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 11
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN %cl_1_18[9.1,] %self[2.0,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: def_%cl_1_19 
		 1: def_%cl_1_20 %cl_1_19[12.0,] 
		 2: RETURN %cl_1_20[12.1,] %self[2.0,] 
BB 14
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: previous_value[6.3,] value[2.3,] 
		 10: 
		 11: changes->any? def_%v_10 changes[3.7,] 	 SYMBOL:	 ARGS:
		 12: BRANCH %v_10[3.11,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: (Mailer) def_%v_11 
		 2: %v_11->security_settings_updated def_%v_12 %v_11[6.1,] changes[3.7,] 	 SYMBOL:	 ARGS:changes,
		 3: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_12 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_from_params instanceMethod = false
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: RECEIVEARG def_params 
		 7: 
		 8: params->dup def_%v_3 params[2.6,] 	 SYMBOL:	 ARGS:
		 9: COPY TYPE_PASS def_params %v_3[2.8,] 
		 10: 
		 11: (Array) def_%v_4 
		 12: %v_3->is_a? def_%v_5 %v_3[2.8,] %v_4[2.11,] 	 SYMBOL:	 ARGS:%v_4,
		 13: BRANCH %v_5[2.12,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: params->delete_if def_%v_6 params[2.6,2.9,] %self[2.0,] 	 SYMBOL:	 ARGS:params,
CLOSURE BEGIN: v[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_v 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: v->blank? def_%cl_1_3 v[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 1: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: (Hash) def_%v_7 
		 2: params->is_a? def_%v_8 params[2.6,2.9,] %v_7[5.1,] 	 SYMBOL:	 ARGS:%v_7,
		 3: BRANCH %v_8[5.2,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: params->symbolize_keys! def_%v_9 params[2.6,2.9,] 	 SYMBOL:	 ARGS:
		 1: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_9 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "_from_params" def_%v_10 
		 2: BUILDSTRING def_%v_11 name[2.5,] %v_10[8.1,] 
		 3: COPY TYPE_PASS def_m %v_11[8.2,] 
		 4: 
		 5: %self->respond_to? def_%v_12 %self[2.0,] %v_11[8.2,] 	 SYMBOL:	 ARGS:m,
		 6: BRANCH %v_12[8.5,] 
BB 9
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: name->to_sym def_%v_13 name[2.5,] 	 SYMBOL:	 ARGS:
		 2: %self->send def_%v_14 %self[2.0,] m[8.3,] params[2.6,2.9,] 	 SYMBOL:	 ARGS:m,params,
		 3: ATTRASSIGN %self->[] %v_13[9.1,] %v_14[9.2,] 
		 4: RETURN %v_14[9.2,] %self[9.2,9.3,2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: name->to_sym def_%v_15 name[2.5,] 	 SYMBOL:	 ARGS:
		 2: ATTRASSIGN %self->[] %v_15[10.1,] params[2.6,2.9,] 
		 3: RETURN params[2.6,2.9,] %self[10.2,2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = commit_update_keywords_from_params instanceMethod = false
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_params 
		 6: 
		 7: COPY TYPE_Array def_%v_3 
		 8: COPY TYPE_PASS def_s %v_3[2.7,] 
		 9: 
		 10: (Hash) def_%v_4 
		 11: params->is_a? def_%v_5 params[2.5,] %v_4[2.10,] 	 SYMBOL:	 ARGS:%v_4,
		 12: BRANCH %v_5[2.11,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: params->key? def_%v_6 params[2.5,] 	 SYMBOL:keywords,	 ARGS:Symbol,
		 1: COPY TYPE_PASS def_%v_5 %v_6[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_5[3.1,2.11,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: params->values def_%v_7 params[2.5,] 	 SYMBOL:	 ARGS:
		 1: %v_7->all? def_%v_8 %v_7[5.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_7,
CLOSURE BEGIN: v[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_v 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (Array) def_%cl_1_3 
		 2: v->is_a? def_%cl_1_4 v[2.2,] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: COPY TYPE_PASS def_%v_5 %v_8[5.1,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: BRANCH %v_5[5.2,3.1,2.11,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: params->except def_%v_9 params[2.5,] 	 SYMBOL:keywords,	 ARGS:Symbol,
		 2: %v_9->keys def_%v_10 %v_9[7.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_PASS def_attributes %v_10[7.2,] 
		 4: 
		 5: params->[] def_%v_11 params[7.1,2.5,] 	 SYMBOL:keywords,	 ARGS:Symbol,
		 6: %v_11->each_with_index def_%v_12 %v_11[7.5,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_11,
CLOSURE BEGIN: keywords[] attributes[7.3,] %self[2.0,] params[7.1,7.5,2.5,] a[] i[] h[] value[] s[2.8,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_keywords 
		 3: RECEIVEARG def_i 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: keywords->blank? def_%cl_2_3 keywords[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_2_3[3.1,] 
BB 4
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_2_4 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: HASH- def_%cl_2_5 
		 2: attributes->inject def_%cl_2_6 attributes[] %cl_2_5[6.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%cl_2_5,attributes,
CLOSURE BEGIN: params[] a[] i[2.3,] h[] value[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_h 
		 3: RECEIVEARG def_a 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: params->[] def_%cl_3_3 params[] a[2.3,] 	 SYMBOL:	 ARGS:a,
		 2: %cl_3_3->[] def_%cl_3_4 %cl_3_3[3.1,] i[] 	 SYMBOL:	 ARGS:i,
		 3: %cl_3_4->to_s def_%cl_3_5 %cl_3_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_PASS def_value %cl_3_5[3.3,] 
		 5: 
		 6: %cl_3_5->present? def_%cl_3_6 %cl_3_5[3.3,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %cl_3_6[3.6,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: a->to_s def_%cl_3_7 a[2.3,] 	 SYMBOL:	 ARGS:
		 1: ATTRASSIGN h->[] %cl_3_7[4.0,] value[3.4,] 
		 2: COPY TYPE_PASS def_%cl_3_8 value[3.4,] 
		 3: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_3_8 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: RETURN h[4.1,2.2,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_3_9 
		 1: def_%cl_3_10 %cl_3_9[7.0,] 
		 2: RETURN %cl_3_10[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: a[2.3,] value[3.4,] 
		 3: COPY TYPE_StringLiteral "keywords" def_%cl_2_7 
		 4: HASH- def_%cl_2_8 %cl_2_7[6.3,] keywords[2.2,] 
		 5: %cl_2_6->merge def_%cl_2_9 %cl_2_6[6.2,] %cl_2_8[6.4,] 	 SYMBOL:	 ARGS:%cl_2_8,
		 6: s-><< def_%cl_2_10 s[] %cl_2_9[6.5,] 	 SYMBOL:	 ARGS:%cl_2_9,
		 7: RETURN %cl_2_10[6.6,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_2_11 
		 1: def_%cl_2_12 %cl_2_11[7.0,] 
		 2: RETURN %cl_2_12[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: i[2.3,] 
		 7: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_12 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: RETURN s[2.8,] %self[2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = per_page_options_array instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->per_page_options def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_Regexp def_%v_4 
		 8: %v_3->split def_%v_5 %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_4,
		 9: %v_5->collect def_%v_6 %v_5[2.8,] 	 SYMBOL:to_i,	 ARGS:
		 10: %v_6->select def_%v_7 %v_6[2.9,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_6,
CLOSURE BEGIN: n[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_n 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: n->> def_%cl_1_3 n[2.2,] 	 SYMBOL:	 ARGS:Fixnum,
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: %v_7->sort def_%v_8 %v_7[2.10,] 	 SYMBOL:	 ARGS:
		 12: RETURN %v_8[2.11,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = commit_update_keywords_array instanceMethod = false
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 
		 7: COPY TYPE_PASS def_a %v_3[2.6,] 
		 8: 
		 9: %self->commit_update_keywords def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 10: (Array) def_%v_5 
		 11: %v_4->is_a? def_%v_6 %v_4[2.9,] %v_5[2.10,] 	 SYMBOL:	 ARGS:%v_5,
		 12: BRANCH %v_6[2.11,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->commit_update_keywords def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_7->each def_%v_8 %v_7[3.1,] %self[3.1,2.0,] 	 SYMBOL:	 ARGS:%v_7,
CLOSURE BEGIN: rule[] %self[3.1,2.0,] v[] keywords[] a[2.7,] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_rule 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 10 
	datadep: 
	instructions:
		 0: 
		 1: (Hash) def_%cl_1_3 
		 2: rule->is_a? def_%cl_1_4 rule[2.2,] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_5 
		 1: 
BB 5
	outgoing: 10 12 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] 
BB 6
	outgoing: 7 8 10 
	datadep: 
	instructions:
		 0: 
		 1: rule->dup def_%cl_1_6 rule[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_rule %cl_1_6[6.1,] 
		 3: 
		 4: %cl_1_6->delete_if def_%cl_1_7 %cl_1_6[6.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%cl_1_6,
CLOSURE BEGIN: v[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_k 
		 3: RECEIVEARG def_v 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: v->blank? def_%cl_2_3 v[2.3,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: v[2.3,] 
		 5: 
		 6: COPY TYPE_StringLiteral "keywords" def_%cl_1_8 
		 7: rule->[] def_%cl_1_9 rule[6.1,6.2,] %cl_1_8[6.6,] 	 SYMBOL:	 ARGS:%cl_1_8,
		 8: %cl_1_9->to_s def_%cl_1_10 %cl_1_9[6.7,] 	 SYMBOL:	 ARGS:
		 9: %cl_1_10->downcase def_%cl_1_11 %cl_1_10[6.8,] 	 SYMBOL:	 ARGS:
		 10: COPY TYPE_StringLiteral "," def_%cl_1_12 
		 11: %cl_1_11->split def_%cl_1_13 %cl_1_11[6.9,] %cl_1_12[6.10,] 	 SYMBOL:	 ARGS:%cl_1_12,
		 12: %cl_1_13->map def_%cl_1_14 %cl_1_13[6.11,] 	 SYMBOL:strip,	 ARGS:
		 13: %cl_1_14->reject def_%cl_1_15 %cl_1_14[6.12,] 	 SYMBOL:blank?,	 ARGS:
		 14: COPY TYPE_PASS def_keywords %cl_1_15[6.13,] 
		 15: 
		 16: %cl_1_15->empty? def_%cl_1_16 %cl_1_15[6.13,] 	 SYMBOL:	 ARGS:
		 17: BRANCH %cl_1_16[6.16,] 
BB 7
	outgoing: 10 12 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_17 
BB 9
	outgoing: 10 12 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "keywords" def_%cl_1_18 
		 2: HASH- def_%cl_1_19 %cl_1_18[9.1,] keywords[6.14,] 
		 3: rule->merge def_%cl_1_20 rule[6.2,] %cl_1_19[9.2,] 	 SYMBOL:	 ARGS:%cl_1_19,
		 4: a-><< def_%cl_1_21 a[] %cl_1_20[9.3,] 	 SYMBOL:	 ARGS:%cl_1_20,
		 5: RETURN %cl_1_21[9.4,] %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_1_22 
		 1: def_%cl_1_23 %cl_1_22[10.0,] 
		 2: RETURN %cl_1_23[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: keywords[6.14,] 
		 3: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_8 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: RETURN a[2.7,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = openid? instanceMethod = false
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Object) def_%v_3 
		 7: %v_3->const_defined? def_%v_4 %v_3[2.6,] 	 SYMBOL:OpenID,	 ARGS:Symbol,
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->[] def_%v_5 %self[2.0,] 	 SYMBOL:openid,	 ARGS:Symbol,
		 1: %v_5->to_i def_%v_6 %v_5[3.0,] 	 SYMBOL:	 ARGS:
		 2: %v_6->> def_%v_7 %v_6[3.1,] 	 SYMBOL:	 ARGS:Fixnum,
		 3: RETURN %v_7[3.2,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_4[2.7,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = check_cache instanceMethod = false
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Setting) def_%v_3 
		 7: %v_3->maximum def_%v_4 %v_3[2.6,] 	 SYMBOL:updated_on,	 ARGS:Symbol,
		 8: COPY TYPE_PASS def_settings_updated_on %v_4[2.7,] 
		 9: 
		 10: COPY TYPE_PASS def_%v_5 %v_4[2.7,] 
		 11: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->cached_cleared_on def_%v_6 %self[2.0,] 
		 1: %v_6-><= def_%v_7 %v_6[3.0,] settings_updated_on[2.8,] 	 SYMBOL:	 ARGS:settings_updated_on,
		 2: COPY TYPE_PASS def_%v_5 %v_7[3.1,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_5[3.2,2.10,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->clear_cache def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_8[5.1,] %self[5.1,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = clear_cache instanceMethod = false
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->cached_settings def_%v_3 %self[2.0,] 
		 7: %v_3->clear def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: 
		 9: (Time) def_%v_5 
		 10: %v_5->now def_%v_6 %v_5[2.9,] 	 SYMBOL:	 ARGS:
		 11: ATTRASSIGN %self->cached_cleared_on %v_6[2.10,] 
		 12: 
		 13: %self->logger def_%v_7 %self[2.0,2.11,] 	 SYMBOL:	 ARGS:
		 14: BRANCH %v_7[2.13,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->logger def_%v_8 %self[2.0,2.11,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_StringLiteral "Settings cache cleared." def_%v_9 
		 2: %v_8->info def_%v_10 %v_8[3.0,] %v_9[3.1,] 	 SYMBOL:	 ARGS:%v_9,
		 3: RETURN %v_10[3.2,] %self[3.0,2.0,2.11,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,2.11,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = define_plugin_setting instanceMethod = false
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_plugin 
		 6: 
		 7: plugin->settings def_%v_3 plugin[2.5,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "plugin_" def_%v_4 
		 2: plugin->id def_%v_5 plugin[2.5,] 	 SYMBOL:	 ARGS:
		 3: BUILDSTRING def_%v_6 %v_4[3.1,] %v_5[3.2,] 
		 4: COPY TYPE_PASS def_name %v_6[3.3,] 
		 5: 
		 6: COPY TYPE_StringLiteral "default" def_%v_7 
		 7: plugin->settings def_%v_8 plugin[3.2,2.5,] 	 SYMBOL:	 ARGS:
		 8: %v_8->[] def_%v_9 %v_8[3.7,] 	 SYMBOL:default,	 ARGS:Symbol,
		 9: COPY TYPE_StringLiteral "serialized" def_%v_10 
		 10: HASH- def_%v_11 %v_7[3.6,] %v_9[3.8,] %v_10[3.9,] 
		 11: %self->define_setting def_%v_12 %self[2.0,] name[3.4,] %v_11[3.10,] 	 SYMBOL:	 ARGS:name,%v_11,
		 12: RETURN %v_12[3.11,] %self[3.11,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = define_setting instanceMethod = false
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: RECEIVECONSTARG def_options 
		 7: options[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->available_settings def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: name->to_s def_%v_5 name[2.5,] 	 SYMBOL:	 ARGS:
		 3: ATTRASSIGN %v_4->[] %v_5[4.2,] options[3.1,2.6,] 
		 4: 
		 5: COPY TYPE_StringLiteral "    def self." def_%v_6 
		 6: 
		 7: COPY TYPE_StringLiteral "
      self[:" def_%v_7 
		 8: 
		 9: COPY TYPE_StringLiteral "]
    end

    def self." def_%v_8 
		 10: 
		 11: COPY TYPE_StringLiteral "?
      self[:" def_%v_9 
		 12: 
		 13: COPY TYPE_StringLiteral "].to_i > 0
    end

    def self." def_%v_10 
		 14: 
		 15: COPY TYPE_StringLiteral "=(value)
      self[:" def_%v_11 
		 16: 
		 17: COPY TYPE_StringLiteral "] = value
    end
" def_%v_12 
		 18: BUILDSTRING def_%v_13 %v_6[4.5,] name[4.2,2.5,] %v_7[4.7,] name[4.2,2.5,] %v_8[4.9,] name[4.2,2.5,] %v_9[4.11,] name[4.2,2.5,] %v_10[4.13,] name[4.2,2.5,] %v_11[4.15,] name[4.2,2.5,] %v_12[4.17,] 
		 19: COPY TYPE_PASS def_src %v_13[4.18,] 
		 20: 
		 21: %self->class_eval def_%v_14 %self[4.1,2.0,] %v_13[4.18,] 	 SYMBOL:	 ARGS:src,Filename,Fixnum,
		 22: RETURN %v_14[4.21,] %self[4.1,4.21,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = load_available_settings instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (YAML) def_%v_3 
		 7: (File) def_%v_4 
		 8: (Rails) def_%v_5 
		 9: %v_5->root def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: COPY TYPE_StringLiteral "/config/settings.yml" def_%v_7 
		 11: BUILDSTRING def_%v_8 %v_6[2.9,] %v_7[2.10,] 
		 12: %v_4->open def_%v_9 %v_4[2.7,] %v_8[2.11,] 	 SYMBOL:	 ARGS:%v_8,
		 13: %v_3->load def_%v_10 %v_3[2.6,] %v_9[2.12,] 	 SYMBOL:	 ARGS:%v_9,
		 14: %v_10->each def_%v_11 %v_10[2.13,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_10,
CLOSURE BEGIN: %self[2.0,] name[] options[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_name 
		 3: RECEIVEARG def_options 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->define_setting def_%cl_1_3 %self[2.0,] name[2.2,] options[2.3,] 	 SYMBOL:	 ARGS:name,options,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: options[2.3,] 
		 15: RETURN %v_11[2.14,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = load_plugin_settings instanceMethod = false
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Redmine) def_%v_3 
		 7: (inherit Plugin) def_%v_4 %v_3[2.6,] 
		 8: %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.6,] 	 SYMBOL:Plugin,	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_4->all def_%v_5 %v_4[3.0,2.7,] 	 SYMBOL:	 ARGS:
		 1: %v_5->each def_%v_6 %v_5[4.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_5,
CLOSURE BEGIN: %self[2.0,] plugin[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_plugin 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->define_plugin_setting def_%cl_1_3 %self[2.0,] plugin[2.2,] 	 SYMBOL:	 ARGS:plugin,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: RETURN %v_6[4.1,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = force_utf8_strings instanceMethod = true
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_arg 
		 6: 
		 7: (String) def_%v_3 
		 8: arg->is_a? def_%v_4 arg[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: arg->dup def_%v_5 arg[2.5,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "UTF-8" def_%v_6 
		 3: %v_5->force_encoding def_%v_7 %v_5[3.1,] %v_6[3.2,] 	 SYMBOL:	 ARGS:%v_6,
		 4: RETURN %v_7[3.3,] %self[2.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: (Array) def_%v_8 
		 2: arg->is_a? def_%v_9 arg[2.5,] %v_8[4.1,] 	 SYMBOL:	 ARGS:%v_8,
		 3: BRANCH %v_9[4.2,] 
BB 5
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: arg->map def_%v_10 arg[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:arg,
CLOSURE BEGIN: %self[2.0,] a[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_a 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->force_utf8_strings def_%cl_1_3 %self[2.0,] a[2.2,] 	 SYMBOL:	 ARGS:a,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: (Hash) def_%v_11 
		 2: arg->is_a? def_%v_12 arg[2.5,] %v_11[6.1,] 	 SYMBOL:	 ARGS:%v_11,
		 3: BRANCH %v_12[6.2,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: arg->dup def_%v_13 arg[2.5,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_arg %v_13[7.1,] 
		 3: 
		 4: %v_13->each def_%v_14 %v_13[7.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_13,
CLOSURE BEGIN: %self[2.0,] v[] arg[7.1,7.2,] k[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_k 
		 3: RECEIVEARG def_v 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->force_utf8_strings def_%cl_2_3 %self[2.0,] v[2.3,] 	 SYMBOL:	 ARGS:v,
		 2: ATTRASSIGN arg->[] k[2.2,] %cl_2_3[3.1,] 
		 3: RETURN %cl_2_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: v[2.3,] 
		 5: 
		 6: COPY TYPE_PASS def_%v_15 arg[7.1,7.2,] 
		 7: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_15 arg[2.5,] 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_10 %v_15[8.1,7.6,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %v_10[9.0,5.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find_or_default instanceMethod = false
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: 
		 7: name->to_s def_%v_3 name[2.5,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_PASS def_name %v_3[2.7,] 
		 9: 
		 10: %self->available_settings def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 11: %v_4->has_key? def_%v_5 %v_4[2.10,] name[2.5,2.7,2.8,] 	 SYMBOL:	 ARGS:name,
		 12: BRANCH %v_5[2.11,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
		 1: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "There's no setting named " def_%v_7 
		 1: BUILDSTRING def_%v_8 %v_7[4.0,] name[2.5,2.8,] 
		 2: %self->raise def_%v_9 %self[2.0,] %v_8[4.1,] 	 SYMBOL:	 ARGS:%v_8,
		 3: COPY TYPE_PASS def_%v_6 %v_9[4.2,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: HASH-name- def_%v_10 name[2.5,2.8,] 
		 2: %self->where def_%v_11 %self[2.0,] %v_10[5.1,] 	 SYMBOL:	 ARGS:%v_10,
		 3: HASH-id- def_%v_12 
		 4: %v_11->order def_%v_13 %v_11[5.2,] %v_12[5.3,] 	 SYMBOL:	 ARGS:%v_12,
		 5: %v_13->first def_%v_14 %v_13[5.4,] 	 SYMBOL:	 ARGS:
		 6: COPY TYPE_PASS def_setting %v_14[5.5,] 
		 7: 
		 8: BRANCH %v_14[5.5,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_15 
		 1: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->new def_%v_16 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_setting %v_16[7.1,] 
		 3: 
		 4: ATTRASSIGN %v_16->name name[2.5,2.8,] 
		 5: 
		 6: %self->available_settings def_%v_17 %self[7.1,2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_17->[] def_%v_18 %v_17[7.6,] name[2.5,2.8,] 	 SYMBOL:	 ARGS:name,
		 8: COPY TYPE_StringLiteral "default" def_%v_19 
		 9: %v_18->[] def_%v_20 %v_18[7.7,] %v_19[7.8,] 	 SYMBOL:	 ARGS:%v_19,
		 10: ATTRASSIGN setting->value %v_20[7.9,] 
		 11: COPY TYPE_PASS def_%v_15 %v_20[7.9,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: RETURN setting[7.2,7.10,5.6,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

