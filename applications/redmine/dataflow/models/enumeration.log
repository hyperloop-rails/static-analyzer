SET IRMethod, name = default instanceMethod = false
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->descends_from_active_record? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "Enumeration" def_%v_4 
		 2: HASH-is_default-type- def_%v_5 %v_4[3.1,] 
		 3: %self->where def_%v_6 %self[2.0,] %v_5[3.2,] 	 SYMBOL:	 ARGS:%v_5,
		 4: %v_6->first def_%v_7 %v_6[3.3,] 	 SYMBOL:	 ARGS:
		 5: RETURN %v_7[3.4,] %self[3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: HASH-is_default- def_%v_8 
		 2: %self->where def_%v_9 %self[2.0,] %v_8[4.1,] 	 SYMBOL:	 ARGS:%v_8,
		 3: %v_9->first def_%v_10 %v_9[4.2,] 	 SYMBOL:	 ARGS:
		 4: RETURN %v_10[4.3,] %self[4.2,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = option_name instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = check_default instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->is_default? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->is_default_changed? def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_3 %v_4[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.6,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: (Enumeration) def_%v_5 
		 2: %self->type def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: HASH-type- def_%v_7 %v_6[5.2,] 
		 4: %v_5->where def_%v_8 %v_5[5.1,] %v_7[5.3,] 	 SYMBOL:	 ARGS:%v_7,
		 5: HASH-is_default- def_%v_9 
		 6: %v_8->update_all def_%v_10 %v_8[5.4,] %v_9[5.5,] 	 SYMBOL:	 ARGS:%v_9,
		 7: RETURN %v_10[5.6,] %self[5.2,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = objects_count instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = in_use? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->objects_count def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->!= def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:Fixnum,
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = is_override? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->parent def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->nil? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->! def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = destroy instanceMethod = true
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_reassign_to 
		 6: reassign_to[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_reassign_to 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_3 reassign_to[3.0,2.5,] 
		 2: BRANCH reassign_to[3.0,2.5,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: (Enumeration) def_%v_4 
		 1: reassign_to->is_a? def_%v_5 reassign_to[3.0,2.5,] %v_4[5.0,] 	 SYMBOL:	 ARGS:%v_4,
		 2: COPY TYPE_PASS def_%v_3 %v_5[5.1,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: BRANCH %v_3[5.2,4.1,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->transfer_relations def_%v_6 %self[2.0,] reassign_to[3.0,2.5,] 	 SYMBOL:	 ARGS:reassign_to,
		 2: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->destroy_without_reassign def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_7[9.1,] %self[9.1,2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = <=> instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_enumeration 
		 6: 
		 7: %self->position def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: enumeration->position def_%v_4 enumeration[2.5,] 	 SYMBOL:	 ARGS:
		 9: %v_3-><=> def_%v_5 %v_3[2.7,] %v_4[2.8,] 	 SYMBOL:	 ARGS:%v_4,
		 10: RETURN %v_5[2.9,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_s instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_subclasses instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->subclasses def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = overriding_change? instanceMethod = false
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_new 
		 6: RECEIVEARG def_previous 
		 7: 
		 8: COPY TYPE_StringLiteral "active" def_%v_3 
		 9: new->[] def_%v_4 new[2.5,] %v_3[2.8,] 	 SYMBOL:	 ARGS:%v_3,
		 10: previous->active def_%v_5 previous[2.6,] 	 SYMBOL:	 ARGS:
		 11: %self->same_active_state? def_%v_6 %self[2.0,] %v_4[2.9,] %v_5[2.10,] 	 SYMBOL:	 ARGS:%v_4,%v_5,
		 12: BRANCH %v_6[2.11,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->same_custom_values? def_%v_7 %self[2.0,] new[2.5,] previous[2.6,] 	 SYMBOL:	 ARGS:new,previous,
		 1: COPY TYPE_PASS def_%v_6 %v_7[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_6[3.1,2.11,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = same_custom_values? instanceMethod = false
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 5 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_new 
		 6: RECEIVEARG def_previous 
		 7: 
		 8: previous->custom_field_values def_%v_3 previous[2.6,] 	 SYMBOL:	 ARGS:
		 9: %v_3->each def_%v_4 %v_3[2.8,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: custom_value[] new[2.5,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_custom_value 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: custom_value->value def_%cl_1_3 custom_value[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "custom_field_values" def_%cl_1_4 
		 3: new->[] def_%cl_1_5 new[] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: custom_value->custom_field_id def_%cl_1_6 custom_value[3.1,2.2,] 	 SYMBOL:	 ARGS:
		 5: %cl_1_6->to_s def_%cl_1_7 %cl_1_6[3.4,] 	 SYMBOL:	 ARGS:
		 6: %cl_1_5->[] def_%cl_1_8 %cl_1_5[3.3,] %cl_1_7[3.5,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 7: %cl_1_3->!= def_%cl_1_9 %cl_1_3[3.1,] %cl_1_8[3.6,] 	 SYMBOL:	 ARGS:%cl_1_8,
		 8: BRANCH %cl_1_9[3.7,] 
BB 4
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: RETURN %self[2.0,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_11 
		 1: def_%cl_1_12 %cl_1_11[7.0,] 
		 2: RETURN %cl_1_12[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: 
		 11: RETURN %self[2.0,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: def_%v_5 
		 1: def_%v_6 %v_5[5.0,] 
		 2: RETURN %v_6[5.1,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = same_active_state? instanceMethod = false
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_new 
		 6: RECEIVEARG def_previous 
		 7: 
		 8: COPY TYPE_StringLiteral "1" def_%v_3 
		 9: new->== def_%v_4 new[2.5,] %v_3[2.8,] 	 SYMBOL:	 ARGS:%v_3,
		 10: BRANCH %v_4[2.9,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Boolean def_%v_5 
		 1: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Boolean def_%v_5 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_new %v_5[4.0,3.0,] 
		 1: 
		 2: %v_5->== def_%v_6 %v_5[4.0,3.0,] previous[2.6,] 	 SYMBOL:	 ARGS:previous,
		 3: RETURN %v_6[5.2,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = check_integrity instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->in_use? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "Cannot delete enumeration" def_%v_4 
		 1: %self->raise def_%v_5 %self[2.0,] %v_4[3.0,] 	 SYMBOL:	 ARGS:%v_4,
		 2: RETURN %v_5[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_default_position instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->position def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->nil? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->parent def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_4 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_4[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->parent def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_6->position def_%v_7 %v_6[5.1,] 	 SYMBOL:	 ARGS:
		 3: ATTRASSIGN %self->position %v_7[5.2,] 
		 4: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_7 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->super def_%v_8 %current_module[2.3,] %v_0[2.1,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_8[7.1,] %self[5.3,2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_position instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->super def_%v_3 %v_0[2.1,] 	 SYMBOL:	 ARGS:
		 7: 
		 8: %self->position_changed? def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->class def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_5->where def_%v_6 %v_5[3.1,] 	 SYMBOL:	 ARGS:
		 3: HASH-parent_id- def_%v_7 
		 4: %v_6->not def_%v_8 %v_6[3.2,] %v_7[3.3,] 	 SYMBOL:	 ARGS:%v_7,
		 5: COPY TYPE_StringLiteral "position = coalesce((
          select position
          from (select id, position from enumerations) as parent
          where parent_id = parent.id), 1)" def_%v_9 
		 6: %v_8->update_all def_%v_10 %v_8[3.4,] %v_9[3.5,] 	 SYMBOL:	 ARGS:%v_9,
		 7: RETURN %v_10[3.6,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = remove_position instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->parent_id def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->blank? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->super def_%v_5 %current_module[2.3,] %v_0[2.1,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_5[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

