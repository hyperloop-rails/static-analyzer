SET IRMethod, name = upcoming instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "end_time > ?" def_%cl_1_3 
		 2: (Time) def_%cl_1_4 
		 3: %cl_1_4->now def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %self->where def_%cl_1_6 %self[2.0,] %cl_1_3[3.1,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_3,%cl_1_5,
		 5: COPY TYPE_StringLiteral "start_time ASC" def_%cl_1_7 
		 6: %cl_1_6->order def_%cl_1_8 %cl_1_6[3.4,] %cl_1_7[3.5,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 7: RETURN %cl_1_8[3.6,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[4.0,] 
		 2: RETURN %cl_1_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = past instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "end_time <= ?" def_%cl_1_3 
		 2: (Time) def_%cl_1_4 
		 3: %cl_1_4->now def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %self->where def_%cl_1_6 %self[2.0,] %cl_1_3[3.1,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_3,%cl_1_5,
		 5: COPY TYPE_StringLiteral "start_time DESC" def_%cl_1_7 
		 6: %cl_1_6->order def_%cl_1_8 %cl_1_6[3.4,] %cl_1_7[3.5,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 7: RETURN %cl_1_8[3.6,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[4.0,] 
		 2: RETURN %cl_1_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = upcoming instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "end_time > ?" def_%cl_1_3 
		 2: (Time) def_%cl_1_4 
		 3: %cl_1_4->now def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %self->where def_%cl_1_6 %self[2.0,] %cl_1_3[3.1,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_3,%cl_1_5,
		 5: COPY TYPE_StringLiteral "start_time ASC" def_%cl_1_7 
		 6: %cl_1_6->order def_%cl_1_8 %cl_1_6[3.4,] %cl_1_7[3.5,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 7: RETURN %cl_1_8[3.6,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[4.0,] 
		 2: RETURN %cl_1_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = past instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "end_time <= ?" def_%cl_1_3 
		 2: (Time) def_%cl_1_4 
		 3: %cl_1_4->now def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %self->where def_%cl_1_6 %self[2.0,] %cl_1_3[3.1,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_3,%cl_1_5,
		 5: COPY TYPE_StringLiteral "start_time DESC" def_%cl_1_7 
		 6: %cl_1_6->order def_%cl_1_8 %cl_1_6[3.4,] %cl_1_7[3.5,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 7: RETURN %cl_1_8[3.6,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[4.0,] 
		 2: RETURN %cl_1_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = upcoming instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "end_time > ?" def_%cl_1_3 
		 2: (Time) def_%cl_1_4 
		 3: %cl_1_4->now def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %self->where def_%cl_1_6 %self[2.0,] %cl_1_3[3.1,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_3,%cl_1_5,
		 5: COPY TYPE_StringLiteral "start_time ASC" def_%cl_1_7 
		 6: %cl_1_6->order def_%cl_1_8 %cl_1_6[3.4,] %cl_1_7[3.5,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 7: RETURN %cl_1_8[3.6,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[4.0,] 
		 2: RETURN %cl_1_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = past instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "end_time <= ?" def_%cl_1_3 
		 2: (Time) def_%cl_1_4 
		 3: %cl_1_4->now def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %self->where def_%cl_1_6 %self[2.0,] %cl_1_3[3.1,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_3,%cl_1_5,
		 5: COPY TYPE_StringLiteral "start_time DESC" def_%cl_1_7 
		 6: %cl_1_6->order def_%cl_1_8 %cl_1_6[3.4,] %cl_1_7[3.5,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 7: RETURN %cl_1_8[3.6,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[4.0,] 
		 2: RETURN %cl_1_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = owner instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->user def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = rsvped? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: 
		 7: %self->rsvps def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->find_by_user_id def_%v_4 %v_3[2.7,] user[2.5,] 	 SYMBOL:	 ARGS:user,
		 9: RETURN %v_4[2.8,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = attendees_for_user instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: 
		 7: %self->rsvps def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->find_by_user_id def_%v_4 %v_3[2.7,] user[2.5,] 	 SYMBOL:	 ARGS:user,
		 9: %v_4->attendees_count def_%v_5 %v_4[2.8,] 	 SYMBOL:	 ARGS:
		 10: RETURN %v_5[2.9,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = attendees_count instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->rsvps def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->sum def_%v_4 %v_3[2.6,] 	 SYMBOL:attendees_count,	 ARGS:Symbol,
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = time_and_date instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->spans_days? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->start_time def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "%B %d" def_%v_5 
		 3: %v_4->strftime def_%v_6 %v_4[3.1,] %v_5[3.2,] 	 SYMBOL:	 ARGS:%v_5,
		 4: COPY TYPE_StringLiteral " to " def_%v_7 
		 5: %self->end_time def_%v_8 %self[3.1,2.0,] 	 SYMBOL:	 ARGS:
		 6: COPY TYPE_StringLiteral "%B %d %Y" def_%v_9 
		 7: %v_8->strftime def_%v_10 %v_8[3.5,] %v_9[3.6,] 	 SYMBOL:	 ARGS:%v_9,
		 8: BUILDSTRING def_%v_11 %v_6[3.3,] %v_7[3.4,] %v_10[3.7,] 
		 9: COPY TYPE_PASS def_string %v_11[3.8,] 
		 10: RETURN %v_11[3.8,] %self[3.1,3.5,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->start_time def_%v_12 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "%B %d, %Y" def_%v_13 
		 3: %v_12->strftime def_%v_14 %v_12[4.1,] %v_13[4.2,] 	 SYMBOL:	 ARGS:%v_13,
		 4: COPY TYPE_StringLiteral ", " def_%v_15 
		 5: %self->start_time def_%v_16 %self[4.1,2.0,] 	 SYMBOL:	 ARGS:
		 6: COPY TYPE_StringLiteral "%I:%M %p" def_%v_17 
		 7: %v_16->strftime def_%v_18 %v_16[4.5,] %v_17[4.6,] 	 SYMBOL:	 ARGS:%v_17,
		 8: COPY TYPE_StringLiteral " - " def_%v_19 
		 9: %self->end_time def_%v_20 %self[4.1,4.5,2.0,] 	 SYMBOL:	 ARGS:
		 10: COPY TYPE_StringLiteral "%I:%M %p" def_%v_21 
		 11: %v_20->strftime def_%v_22 %v_20[4.9,] %v_21[4.10,] 	 SYMBOL:	 ARGS:%v_21,
		 12: BUILDSTRING def_%v_23 %v_14[4.3,] %v_15[4.4,] %v_18[4.7,] %v_19[4.8,] %v_22[4.11,] 
		 13: COPY TYPE_PASS def_string %v_23[4.12,] 
		 14: RETURN %v_23[4.12,] %self[4.1,4.5,4.9,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = spans_days? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->end_time def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %self->start_time def_%v_4 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_3->- def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: %v_5->>= def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:Fixnum,
		 10: RETURN %v_6[2.9,] %self[2.0,2.6,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = start_time_cannot_be_before_end_time instanceMethod = true
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->start_time def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->end_time def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_3 %v_4[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.6,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->start_time def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %self->end_time def_%v_6 %self[5.0,2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_5->< def_%v_7 %v_5[5.0,] %v_6[5.1,] 	 SYMBOL:	 ARGS:%v_6,
		 3: COPY TYPE_PASS def_%v_3 %v_7[5.2,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: BRANCH %v_3[5.3,3.1,2.6,] 
BB 7
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_8 
		 1: RETURN %v_8[7.0,] %self[2.0,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: %self->errors def_%v_9 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_StringLiteral "start_time" def_%v_10 
		 2: COPY TYPE_StringLiteral " must be before end time" def_%v_11 
		 3: %v_9->add def_%v_12 %v_9[8.0,] %v_10[8.1,] %v_11[8.2,] 	 SYMBOL:	 ARGS:%v_10,%v_11,
		 4: RETURN %v_12[8.3,] %self[8.0,2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:

