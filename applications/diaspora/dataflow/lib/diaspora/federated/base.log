SET IRMethod, name = included instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_model 
		 6: 
		 7: model->instance_eval def_%v_3 model[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:model,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 10 
	datadep: 
	instructions:
		 0: 
		 1: (ROXML) def_%cl_1_3 
		 2: %self->include def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: 
		 4: (Diaspora) def_%cl_1_5 
		 5: (inherit Federated) def_%cl_1_6 %cl_1_5[3.4,] 
		 6: %cl_1_6[3.5,] 
BB 4
	outgoing: 5 10 
	datadep: 
	instructions:
		 0: %cl_1_5->const_missing def_%cl_1_6 %cl_1_5[3.4,] 	 SYMBOL:Federated,	 ARGS:Symbol,
BB 5
	outgoing: 6 7 10 
	datadep: 
	instructions:
		 0: (inherit Base) def_%cl_1_7 %cl_1_6[4.0,3.5,] 
		 1: %cl_1_7[5.0,] 
BB 6
	outgoing: 7 10 
	datadep: 
	instructions:
		 0: %cl_1_6->const_missing def_%cl_1_7 %cl_1_6[4.0,3.5,] 	 SYMBOL:Base,	 ARGS:Symbol,
BB 7
	outgoing: 8 9 10 
	datadep: 
	instructions:
		 0: (inherit InstanceMethods) def_%cl_1_8 %cl_1_7[6.0,5.0,] 
		 1: %cl_1_8[7.0,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: %cl_1_7->const_missing def_%cl_1_8 %cl_1_7[6.0,5.0,] 	 SYMBOL:InstanceMethods,	 ARGS:Symbol,
BB 9
	outgoing: 10 12 
	datadep: 
	instructions:
		 0: %self->include def_%cl_1_9 %self[2.0,] %cl_1_8[8.0,7.0,] 	 SYMBOL:	 ARGS:%cl_1_8,
		 1: RETURN %cl_1_9[9.0,] %self[9.0,2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_1_10 
		 1: def_%cl_1_11 %cl_1_10[10.0,] 
		 2: RETURN %cl_1_11[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_3[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_diaspora_xml instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->to_xml def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_PASS def_xml %v_3[2.6,] 
		 8: 
		 9: (inherit Logging) def_%v_4 
		 10: %v_4[2.9,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: CONSTANT def_%v_4 	 SYMBOL:Logging,	 ARGS:Symbol,
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: (inherit Logger) def_%v_5 %v_4[3.0,2.9,] 
		 1: %v_5[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %v_4->const_missing def_%v_5 %v_4[3.0,2.9,] 	 SYMBOL:Logger,	 ARGS:Symbol,
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "XMLLogger" def_%v_6 
		 1: %v_5->[] def_%v_7 %v_5[5.0,4.0,] %v_6[6.0,] 	 SYMBOL:	 ARGS:%v_6,
		 2: COPY TYPE_StringLiteral "to_xml: " def_%v_8 
		 3: BUILDSTRING def_%v_9 %v_8[6.2,] xml[2.7,] 
		 4: %v_7->debug def_%v_10 %v_7[6.1,] %v_9[6.3,] 	 SYMBOL:	 ARGS:%v_9,
		 5: 
		 6: COPY TYPE_StringLiteral "          <XML>
            <post>" def_%v_11 
		 7: COPY TYPE_StringLiteral "</post>
          </XML>
" def_%v_12 
		 8: BUILDSTRING def_%v_13 %v_11[6.6,] xml[2.7,] %v_12[6.7,] 
		 9: RETURN %v_13[6.8,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = x instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_input 
		 6: 
		 7: input->to_s def_%v_3 input[2.5,] 	 SYMBOL:	 ARGS:
		 8: %v_3->to_xs def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = subscribers instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: 
		 7: COPY TYPE_StringLiteral "You must override subscribers in order to enable federation on this model" def_%v_3 
		 8: %self->raise def_%v_4 %self[2.0,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: RETURN %v_4[2.8,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = receive instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: RECEIVEARG def_person 
		 7: 
		 8: COPY TYPE_StringLiteral "You must override receive in order to enable federation on this model" def_%v_3 
		 9: %self->raise def_%v_4 %self[2.0,] %v_3[2.8,] 	 SYMBOL:	 ARGS:%v_3,
		 10: RETURN %v_4[2.9,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = after_dispatch instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_sender 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

