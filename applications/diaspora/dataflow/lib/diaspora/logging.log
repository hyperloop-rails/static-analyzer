SET IRMethod, name = logger instanceMethod = true
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->logger def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 10 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: (inherit Logging) def_%v_6 
		 1: %v_6[5.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: CONSTANT def_%v_6 	 SYMBOL:Logging,	 ARGS:Symbol,
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: (inherit Logger) def_%v_7 %v_6[6.0,5.0,] 
		 1: %v_7[7.0,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: %v_6->const_missing def_%v_7 %v_6[6.0,5.0,] 	 SYMBOL:Logger,	 ARGS:Symbol,
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: %v_7->[] def_%v_8 %v_7[8.0,7.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
		 1: ATTRASSIGN %self->logger %v_8[9.0,] 
		 2: RETURN %v_8[9.0,] %self[9.1,2.0,] 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

