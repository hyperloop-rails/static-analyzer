SET IRMethod, name = call instanceMethod = true
BB 1
	outgoing: 18 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_worker 
		 6: RECEIVEARG def_item 
		 7: RECEIVEARG def_queue 
		 8: GLOBALVAR $! def_%v_3 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: def_%v_6 %v_0[2.1,] 
		 3: COPY TYPE_PASS def_%v_5 %v_6[4.2,] 
		 4: %v_3[2.8,] 
BB 5
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
BB 6
	outgoing: 7 8 16 
	datadep: 
	instructions:
		 0: def_%v_7 
		 1: (Exception) def_%v_8 
		 2: def_%v_9 %v_8[6.1,] %v_7[6.0,] 
		 3: BRANCH %v_9[6.2,] 
BB 7
	outgoing: 16 18 
	datadep: 
	instructions:
		 0: %v_7[6.0,] 
BB 8
	outgoing: 9 10 16 
	datadep: 
	instructions:
		 0: 
		 1: (Rails) def_%v_10 
		 2: %v_10->backtrace_cleaner def_%v_11 %v_10[8.1,] 	 SYMBOL:	 ARGS:
		 3: GLOBALVAR $! def_%v_12 
		 4: %v_12->backtrace def_%v_13 %v_12[8.3,] 	 SYMBOL:	 ARGS:
		 5: %v_11->clean def_%v_14 %v_11[8.2,] %v_13[8.4,] 	 SYMBOL:	 ARGS:%v_13,
		 6: COPY TYPE_PASS def_backtrace %v_14[8.5,] 
		 7: 
		 8: %v_14->reject! def_%v_15 %v_14[8.5,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_14,
CLOSURE BEGIN: line[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_line 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Regexp def_%cl_1_3 
		 2: line->=~ def_%cl_1_4 line[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: 
		 10: (AppConfig) def_%v_16 
		 11: %v_16->environment def_%v_17 %v_16[8.10,] 	 SYMBOL:	 ARGS:
		 12: %v_17->sidekiq def_%v_18 %v_17[8.11,] 	 SYMBOL:	 ARGS:
		 13: %v_18->backtrace def_%v_19 %v_18[8.12,] 	 SYMBOL:	 ARGS:
		 14: %v_19->get def_%v_20 %v_19[8.13,] 	 SYMBOL:	 ARGS:
		 15: COPY TYPE_PASS def_limit %v_20[8.14,] 
		 16: 
		 17: BRANCH %v_20[8.14,] 
BB 9
	outgoing: 11 16 
	datadep: 
	instructions:
		 0: limit->to_i def_%v_21 limit[8.15,] 	 SYMBOL:	 ARGS:
		 1: 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Fixnum def_%v_21 
BB 11
	outgoing: 12 13 16 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_limit %v_21[10.0,9.0,] 
		 1: 
		 2: %v_21->== def_%v_22 %v_21[10.0,9.0,] 	 SYMBOL:	 ARGS:Fixnum,
		 3: BRANCH %v_22[11.2,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_23 
		 1: COPY TYPE_PASS def_backtrace %v_23[12.0,] 
		 2: 
BB 13
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_23 
BB 14
	outgoing: 15 16 
	datadep: 
	instructions:
		 0: 
		 1: GLOBALVAR $! def_%v_24 
		 2: GLOBALVAR $! def_%v_25 
		 3: %v_25->message def_%v_26 %v_25[14.2,] 	 SYMBOL:	 ARGS:
		 4: CONSTANT def_%v_27 limit[11.0,] 
		 5: backtrace->[] def_%v_28 backtrace[12.1,8.6,] %v_27[14.4,] 	 SYMBOL:	 ARGS:%v_27,
		 6: %self->raise def_%v_29 %self[2.0,] %v_24[14.1,] %v_26[14.3,] %v_28[14.5,] 	 SYMBOL:	 ARGS:%v_24,%v_26,%v_28,
		 7: COPY TYPE_PASS def_%v_5 %v_29[14.6,] 
		 8: %v_3[2.8,] 
BB 15
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
BB 16
	outgoing: 18 
	datadep: 
	instructions:
		 0: def_%v_30 
		 1: def_%v_31 %v_30[16.0,] %v_3[2.8,] 
		 2: %v_30[16.0,] 
BB 17
	outgoing: 18 
	datadep: 
	instructions:
		 0: RETURN %v_5[4.3,14.7,] %self[2.0,] 
BB 18
	outgoing: 
	datadep: 
	instructions:

