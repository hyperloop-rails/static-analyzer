SET IRMethod, name = perform instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_xml 
		 6: 
		 7: %self->suppress_annoying_errors def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: xml[2.5,] 
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 8 
	datadep: 
	instructions:
		 0: 
		 1: (Postzord) def_%cl_1_3 
		 2: (inherit Receiver) def_%cl_1_4 %cl_1_3[3.1,] 
		 3: %cl_1_4[3.2,] 
BB 4
	outgoing: 5 8 
	datadep: 
	instructions:
		 0: %cl_1_3->const_missing def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:Receiver,	 ARGS:Symbol,
BB 5
	outgoing: 6 7 8 
	datadep: 
	instructions:
		 0: (inherit Public) def_%cl_1_5 %cl_1_4[4.0,3.2,] 
		 1: %cl_1_5[5.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: %cl_1_4->const_missing def_%cl_1_5 %cl_1_4[4.0,3.2,] 	 SYMBOL:Public,	 ARGS:Symbol,
BB 7
	outgoing: 8 10 
	datadep: 
	instructions:
		 0: %cl_1_5->new def_%cl_1_6 %cl_1_5[6.0,5.0,] xml[] 	 SYMBOL:	 ARGS:xml,
		 1: COPY TYPE_PASS def_receiver %cl_1_6[7.0,] 
		 2: 
		 3: %cl_1_6->perform! def_%cl_1_7 %cl_1_6[7.0,] 	 SYMBOL:	 ARGS:
		 4: RETURN %cl_1_7[7.3,] %self[2.0,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[8.0,] 
		 2: RETURN %cl_1_9[8.1,] %self[2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_3[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

