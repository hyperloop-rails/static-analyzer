SET IRMethod, name = new instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_args 
		 6: 
		 7: args->[] def_%v_3 args[2.5,] 	 SYMBOL:	 ARGS:Fixnum,
		 8: %v_3->nil? def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: (NilPresenter) def_%v_5 
		 1: %v_5->new def_%v_6 %v_5[3.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_6[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_7 
		 1: 
		 2: def_%v_8 args[2.5,] 
		 3: %self->super def_%v_9 %current_module[2.3,] %v_8[4.2,] %v_0[2.1,] 	 SYMBOL:	 ARGS:Splat,
		 4: RETURN %v_9[4.3,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = as_collection instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_collection 
		 6: RECEIVECONSTARG def_method 
		 7: method[2.6,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Symbol def_method 
BB 5
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: RECEIVEARG def_args 
		 1: 
		 2: collection->map def_%v_3 collection[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:collection,
CLOSURE BEGIN: object[] args[5.0,] %self[2.0,] method[4.0,2.6,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_object 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%cl_1_3 object[2.2,] 
		 2: def_%cl_1_4 %cl_1_3[3.1,] args[] 
		 3: %self->new def_%cl_1_5 %self[2.0,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:Splat,
		 4: %cl_1_5->send def_%cl_1_6 %cl_1_5[3.3,] method[] 	 SYMBOL:	 ARGS:method,
		 5: RETURN %cl_1_6[3.4,] %self[3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: RETURN %v_3[5.2,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%v_4 
		 1: def_%v_5 %v_4[6.0,] 
		 2: RETURN %v_5[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_presentable 
		 6: RECEIVECONSTARG def_curr_user 
		 7: curr_user[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_curr_user 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->presentable presentable[2.5,] 
		 2: 
		 3: ATTRASSIGN %self->current_user curr_user[3.0,2.6,] 
		 4: RETURN curr_user[3.0,2.6,] %self[4.1,4.3,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = method_missing instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_method 
		 6: RECEIVEARG def_args 
		 7: 
		 8: GETFIELD %self->presentable def_%v_3 %self[2.0,] 
		 9: COPY TYPE_Array def_%v_4 method[2.5,] 
		 10: def_%v_5 %v_4[2.9,] args[2.6,] 
		 11: %v_3->public_send def_%v_6 %v_3[2.8,] %v_5[2.10,] 	 SYMBOL:	 ARGS:Splat,
		 12: RETURN %v_6[2.11,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

