SET IRMethod, name = without_parent instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-parent_id- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = except_descendants instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->where def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: (Array) def_%v_4 
		 8: %self->record def_%v_5 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 9: %v_5->descendants def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: %v_4->new def_%v_7 %v_4[2.7,] %v_6[2.9,] 	 SYMBOL:	 ARGS:%v_6,
		 11: %self->record def_%v_8 %self[2.0,2.6,2.8,] 	 SYMBOL:	 ARGS:
		 12: %v_7-><< def_%v_9 %v_7[2.10,] %v_8[2.11,] 	 SYMBOL:	 ARGS:%v_8,
		 13: %v_9->flatten def_%v_10 %v_9[2.12,] 	 SYMBOL:	 ARGS:
		 14: HASH-id- def_%v_11 %v_10[2.13,] 
		 15: %v_3->not def_%v_12 %v_3[2.6,] %v_11[2.14,] 	 SYMBOL:	 ARGS:%v_11,
		 16: RETURN %v_12[2.15,] %self[2.0,2.6,2.8,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ordered instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->includes def_%v_3 %self[2.0,] 	 SYMBOL:translations,	 ARGS:Symbol,
		 7: %v_3->order def_%v_4 %v_3[2.6,] 	 SYMBOL:name,	 ARGS:Symbol,
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = without_parent instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-parent_id- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = except_descendants instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->where def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: (Array) def_%v_4 
		 8: %self->record def_%v_5 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 9: %v_5->descendants def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: %v_4->new def_%v_7 %v_4[2.7,] %v_6[2.9,] 	 SYMBOL:	 ARGS:%v_6,
		 11: %self->record def_%v_8 %self[2.0,2.6,2.8,] 	 SYMBOL:	 ARGS:
		 12: %v_7-><< def_%v_9 %v_7[2.10,] %v_8[2.11,] 	 SYMBOL:	 ARGS:%v_8,
		 13: %v_9->flatten def_%v_10 %v_9[2.12,] 	 SYMBOL:	 ARGS:
		 14: HASH-id- def_%v_11 %v_10[2.13,] 
		 15: %v_3->not def_%v_12 %v_3[2.6,] %v_11[2.14,] 	 SYMBOL:	 ARGS:%v_11,
		 16: RETURN %v_12[2.15,] %self[2.0,2.6,2.8,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ordered instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->includes def_%v_3 %self[2.0,] 	 SYMBOL:translations,	 ARGS:Symbol,
		 7: %v_3->order def_%v_4 %v_3[2.6,] 	 SYMBOL:name,	 ARGS:Symbol,
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = without_parent instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-parent_id- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = except_descendants instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->where def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: (Array) def_%v_4 
		 8: %self->record def_%v_5 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 9: %v_5->descendants def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: %v_4->new def_%v_7 %v_4[2.7,] %v_6[2.9,] 	 SYMBOL:	 ARGS:%v_6,
		 11: %self->record def_%v_8 %self[2.0,2.6,2.8,] 	 SYMBOL:	 ARGS:
		 12: %v_7-><< def_%v_9 %v_7[2.10,] %v_8[2.11,] 	 SYMBOL:	 ARGS:%v_8,
		 13: %v_9->flatten def_%v_10 %v_9[2.12,] 	 SYMBOL:	 ARGS:
		 14: HASH-id- def_%v_11 %v_10[2.13,] 
		 15: %v_3->not def_%v_12 %v_3[2.6,] %v_11[2.14,] 	 SYMBOL:	 ARGS:%v_11,
		 16: RETURN %v_12[2.15,] %self[2.0,2.6,2.8,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ordered instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->includes def_%v_3 %self[2.0,] 	 SYMBOL:translations,	 ARGS:Symbol,
		 7: %v_3->order def_%v_4 %v_3[2.6,] 	 SYMBOL:name,	 ARGS:Symbol,
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = attachments= instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_attrs 
		 6: 
		 7: COPY TYPE_StringLiteral "image" def_%v_3 
		 8: attrs->[] def_%v_4 attrs[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: COPY TYPE_StringLiteral "file" def_%v_5 
		 10: %v_4->[] def_%v_6 %v_4[2.8,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_5,
		 11: %v_6->present? def_%v_7 %v_6[2.10,] 	 SYMBOL:	 ARGS:
		 12: BRANCH %v_7[2.11,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->attachments def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_StringLiteral "image" def_%v_9 
		 2: attrs->[] def_%v_10 attrs[2.5,] %v_9[3.1,] 	 SYMBOL:	 ARGS:%v_9,
		 3: %v_8->build def_%v_11 %v_8[3.0,] %v_10[3.2,] 	 SYMBOL:	 ARGS:%v_10,
		 4: RETURN %v_11[3.3,] %self[3.0,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = combined_permalink instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->permalink_includes_ancestors def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->ancestral_permalink def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_4->present? def_%v_5 %v_4[3.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_3 %v_5[3.1,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.2,2.6,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->ancestral_permalink def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "/" def_%v_7 
		 3: %self->permalink def_%v_8 %self[5.1,2.0,] 	 SYMBOL:	 ARGS:
		 4: BUILDSTRING def_%v_9 %v_6[5.1,] %v_7[5.2,] %v_8[5.3,] 
		 5: RETURN %v_9[5.4,] %self[5.1,5.3,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->permalink def_%v_10 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_10[6.1,] %self[6.1,2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = hierarchy_array instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->parent def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: %self->parent def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %v_6->hierarchy_array def_%v_7 %v_6[3.2,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_Array def_%v_8 %self[3.2,2.0,] 
		 5: %v_7->concat def_%v_9 %v_7[3.3,] %v_8[3.4,] 	 SYMBOL:	 ARGS:%v_8,
		 6: RETURN %v_9[3.5,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_5 %self[2.0,] 
		 1: RETURN %v_5[4.0,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = image instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->attachments def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "image" def_%v_4 
		 8: %v_3->for def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_permalink instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->permalink def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->blank? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->name def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: (String) def_%v_6 
		 2: %v_5->is_a? def_%v_7 %v_5[3.0,] %v_6[3.1,] 	 SYMBOL:	 ARGS:%v_6,
		 3: COPY TYPE_PASS def_%v_4 %v_7[3.2,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_4[3.3,2.7,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: %self->name def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_8->parameterize def_%v_9 %v_8[5.0,] 	 SYMBOL:	 ARGS:
		 2: ATTRASSIGN %self->permalink %v_9[5.1,] 
		 3: RETURN %v_9[5.1,] %self[5.0,5.2,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_ancestral_permalink instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 
		 7: COPY TYPE_PASS def_permalinks %v_3[2.6,] 
		 8: 
		 9: %self->ancestors def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 10: %v_4->each def_%v_5 %v_4[2.9,] %self[2.0,2.9,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: category[] permalinks[2.7,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_category 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: category->permalink def_%cl_1_3 category[2.2,] 	 SYMBOL:	 ARGS:
		 2: permalinks-><< def_%cl_1_4 permalinks[] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: 
		 12: COPY TYPE_StringLiteral "/" def_%v_6 
		 13: permalinks->join def_%v_7 permalinks[2.7,] %v_6[2.12,] 	 SYMBOL:	 ARGS:%v_6,
		 14: ATTRASSIGN %self->ancestral_permalink %v_7[2.13,] 
		 15: RETURN %v_7[2.13,] %self[2.0,2.9,2.14,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_child_permalinks instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->children def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->each def_%v_4 %v_3[2.6,] 	 SYMBOL:save!,	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

