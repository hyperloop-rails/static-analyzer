SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_comment 
		 6: 
		 7: ATTRASSIGN %self->comment comment[2.5,] 
		 8: 
		 9: COPY TYPE_Array def_%v_3 
		 10: ATTRASSIGN %self->children %v_3[2.9,] 
		 11: RETURN %v_3[2.9,] %self[2.0,2.7,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = << instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_child 
		 6: 
		 7: GETFIELD %self->children def_%v_3 %self[2.0,] 
		 8: %v_3-><< def_%v_4 %v_3[2.7,] child[2.5,] 	 SYMBOL:	 ARGS:child,
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = all instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_node_id 
		 6: 
		 7: (Comment) def_%v_3 
		 8: COPY TYPE_Array def_%v_4 
		 9: %v_3->select def_%v_5 %v_3[2.7,] %v_4[2.8,] 	 SYMBOL:	 ARGS:%v_4,
		 10: HASH-node_id- def_%v_6 node_id[2.5,] 
		 11: %v_5->where def_%v_7 %v_5[2.9,] %v_6[2.10,] 	 SYMBOL:	 ARGS:%v_6,
		 12: COPY TYPE_StringLiteral "materialized_path IS NOT NULL" def_%v_8 
		 13: %v_7->where def_%v_9 %v_7[2.11,] %v_8[2.12,] 	 SYMBOL:	 ARGS:%v_8,
		 14: COPY TYPE_StringLiteral "materialized_path ASC" def_%v_10 
		 15: %v_9->order def_%v_11 %v_9[2.13,] %v_10[2.14,] 	 SYMBOL:	 ARGS:%v_10,
		 16: %v_11->includes def_%v_12 %v_11[2.15,] 	 SYMBOL:user,	 ARGS:Symbol,
		 17: COPY TYPE_PASS def_comments %v_12[2.16,] 
		 18: 
		 19: %self->please_make_me_a_tree def_%v_13 %self[2.0,] %v_12[2.16,] 	 SYMBOL:	 ARGS:comments,
		 20: RETURN %v_13[2.19,] %self[2.0,2.19,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = please_make_me_a_tree instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_comments 
		 6: 
		 7: COPY TYPE_Array def_%v_3 
		 8: COPY TYPE_Array def_%v_4 
		 9: COPY TYPE_Array def_%v_5 %v_3[2.7,] %v_4[2.8,] 
		 10: COPY TYPE_PASS def_%v_6 %v_3[2.7,] 
		 11: COPY TYPE_PASS def_%v_7 %v_4[2.8,] 
		 12: COPY TYPE_PASS def_roots %v_3[2.7,] 
		 13: COPY TYPE_PASS def_threads %v_4[2.8,] 
		 14: 
		 15: comments->each def_%v_8 comments[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:comments,
CLOSURE BEGIN: %self[2.0,] comment[] roots[2.12,] thread[] threads[2.13,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_comment 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->new def_%cl_1_3 %self[2.0,] comment[2.2,] 	 SYMBOL:	 ARGS:comment,
		 2: COPY TYPE_PASS def_thread %cl_1_3[3.1,] 
		 3: 
		 4: comment->root? def_%cl_1_4 comment[2.2,] 	 SYMBOL:	 ARGS:
		 5: BRANCH %cl_1_4[3.4,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%cl_1_5 
		 2: COPY TYPE_PASS def_threads %cl_1_5[4.1,] 
		 3: 
		 4: roots-><< def_%cl_1_6 roots[] thread[3.2,] 	 SYMBOL:	 ARGS:thread,
		 5: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: threads->length def_%cl_1_7 threads[] 	 SYMBOL:	 ARGS:
		 2: comment->depth def_%cl_1_8 comment[2.2,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_7->- def_%cl_1_9 %cl_1_7[5.1,] %cl_1_8[5.2,] 	 SYMBOL:	 ARGS:%cl_1_8,
		 4: %cl_1_9->times def_%cl_1_10 %cl_1_9[5.3,] %self[2.0,] 	 SYMBOL:	 ARGS:%cl_1_9,
CLOSURE BEGIN: threads[5.1,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: threads->pop def_%cl_2_3 threads[] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 5: 
		 6: threads->last def_%cl_1_11 threads[5.1,] 	 SYMBOL:	 ARGS:
		 7: %cl_1_11-><< def_%cl_1_12 %cl_1_11[5.6,] thread[3.2,] 	 SYMBOL:	 ARGS:thread,
		 8: COPY TYPE_PASS def_%cl_1_6 %cl_1_12[5.7,] 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: threads-><< def_%cl_1_13 threads[4.2,] thread[3.2,] 	 SYMBOL:	 ARGS:thread,
		 2: RETURN %cl_1_13[6.1,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_14 
		 1: def_%cl_1_15 %cl_1_14[7.0,] 
		 2: RETURN %cl_1_15[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: threads[4.2,] thread[3.2,] 
		 16: 
		 17: RETURN roots[2.12,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

