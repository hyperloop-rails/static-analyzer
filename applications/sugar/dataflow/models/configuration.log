SET IRMethod, name = settings instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->settings def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: HASH- def_%v_6 
		 1: ATTRASSIGN %self->settings %v_6[5.0,] 
		 2: RETURN %v_6[5.0,] %self[5.1,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = setting instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_key 
		 6: RECEIVEARG def_type 
		 7: RECEIVECONSTARG def_default 
		 8: default[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_default 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->settings def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: (OpenStruct) def_%v_4 
		 3: HASH-type-default- def_%v_5 type[2.6,] default[3.0,2.7,] 
		 4: %v_4->new def_%v_6 %v_4[4.2,] %v_5[4.3,] 	 SYMBOL:	 ARGS:%v_5,
		 5: ATTRASSIGN %v_3->[] key[2.5,] %v_6[4.4,] 
		 6: 
		 7: %self->define_reader_method def_%v_7 %self[4.1,2.0,] key[2.5,] 	 SYMBOL:	 ARGS:key,
		 8: 
		 9: %self->define_boolean_reader_method def_%v_8 %self[4.1,4.7,2.0,] key[2.5,] 	 SYMBOL:	 ARGS:key,
		 10: 
		 11: %self->define_writer_method def_%v_9 %self[4.1,4.7,4.9,2.0,] key[2.5,] 	 SYMBOL:	 ARGS:key,
		 12: RETURN %v_9[4.11,] %self[4.1,4.7,4.9,4.11,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = define_reader_method instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_key 
		 6: 
		 7: %self->define_method def_%v_3 %self[2.0,] key[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:key,%self,
CLOSURE BEGIN: args[] key[2.5,] %self[2.0,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_args 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: args->length def_%cl_1_3 args[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->> def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:Fixnum,
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%cl_1_5 key[] 
		 2: def_%cl_1_6 %cl_1_5[4.1,] args[2.2,] 
		 3: %self->set def_%cl_1_7 %self[2.0,] %cl_1_6[4.2,] 	 SYMBOL:	 ARGS:Splat,
		 4: 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->get def_%cl_1_8 %self[2.0,] key[] 	 SYMBOL:	 ARGS:key,
		 2: RETURN %cl_1_8[5.1,] %self[5.1,2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_1_7[4.3,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[7.0,] 
		 2: RETURN %cl_1_10[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_3[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = define_boolean_reader_method instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_key 
		 6: 
		 7: COPY TYPE_StringLiteral "?" def_%v_3 
		 8: BUILDSTRING def_%v_4 key[2.5,] %v_3[2.7,] 
		 9: %self->define_method def_%v_5 %self[2.0,] %v_4[2.8,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_4,%self,
CLOSURE BEGIN: %self[2.0,] key[2.5,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->get def_%cl_1_3 %self[2.0,] key[] 	 SYMBOL:	 ARGS:key,
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Boolean def_%cl_1_4 
		 1: RETURN %cl_1_4[4.0,] %self[2.0,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[7.0,] 
		 2: RETURN %cl_1_6[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: RETURN %v_5[2.9,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = define_writer_method instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_key 
		 6: 
		 7: COPY TYPE_StringLiteral "=" def_%v_3 
		 8: BUILDSTRING def_%v_4 key[2.5,] %v_3[2.7,] 
		 9: %self->define_method def_%v_5 %self[2.0,] %v_4[2.8,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_4,%self,
CLOSURE BEGIN: %self[2.0,] key[2.5,] value[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_value 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->set def_%cl_1_3 %self[2.0,] key[] value[2.2,] 	 SYMBOL:	 ARGS:key,value,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: RETURN %v_5[2.9,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_key 
		 6: 
		 7: %self->has_setting? def_%v_3 %self[2.0,] key[2.5,] 	 SYMBOL:	 ARGS:key,
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: (InvalidConfigurationKey) def_%v_5 
		 2: COPY TYPE_StringLiteral ":" def_%v_6 
		 3: 
		 4: COPY TYPE_StringLiteral " is not a valid configuration option" def_%v_7 
		 5: BUILDSTRING def_%v_8 %v_6[4.2,] key[2.5,] %v_7[4.4,] 
		 6: %self->raise def_%v_9 %self[2.0,] %v_5[4.1,] %v_8[4.5,] 	 SYMBOL:	 ARGS:%v_5,%v_8,
		 7: COPY TYPE_PASS def_%v_4 %v_9[4.6,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->configuration def_%v_10 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_10->has_key? def_%v_11 %v_10[5.1,] key[2.5,] 	 SYMBOL:	 ARGS:key,
		 3: BRANCH %v_11[5.2,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->configuration def_%v_12 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_12->[] def_%v_13 %v_12[6.1,] key[2.5,] 	 SYMBOL:	 ARGS:key,
		 3: RETURN %v_13[6.2,] %self[6.1,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->class def_%v_14 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_14->settings def_%v_15 %v_14[7.1,] 	 SYMBOL:	 ARGS:
		 3: %v_15->[] def_%v_16 %v_15[7.2,] key[2.5,] 	 SYMBOL:	 ARGS:key,
		 4: %v_16->default def_%v_17 %v_16[7.3,] 	 SYMBOL:	 ARGS:
		 5: RETURN %v_17[7.4,] %self[7.1,2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set instanceMethod = true
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_key 
		 6: RECEIVEARG def_value 
		 7: 
		 8: (String) def_%v_3 
		 9: key->is_a? def_%v_4 key[2.5,] %v_3[2.8,] 	 SYMBOL:	 ARGS:%v_3,
		 10: BRANCH %v_4[2.9,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: key->to_sym def_%v_5 key[2.5,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_key %v_5[3.0,] 
		 2: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->has_setting? def_%v_6 %self[2.0,] key[3.1,2.5,] 	 SYMBOL:	 ARGS:key,
		 2: BRANCH %v_6[5.1,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_7 
		 1: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: (InvalidConfigurationKey) def_%v_8 
		 2: COPY TYPE_StringLiteral ":" def_%v_9 
		 3: 
		 4: COPY TYPE_StringLiteral " is not a valid configuration option" def_%v_10 
		 5: BUILDSTRING def_%v_11 %v_9[7.2,] key[3.1,2.5,] %v_10[7.4,] 
		 6: %self->raise def_%v_12 %self[2.0,] %v_8[7.1,] %v_11[7.5,] 	 SYMBOL:	 ARGS:%v_8,%v_11,
		 7: COPY TYPE_PASS def_%v_7 %v_12[7.6,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->parse_value def_%v_13 %self[2.0,] key[3.1,2.5,] value[2.6,] 	 SYMBOL:	 ARGS:key,value,
		 2: COPY TYPE_PASS def_value %v_13[8.1,] 
		 3: 
		 4: %self->valid_type? def_%v_14 %self[8.1,2.0,] key[3.1,2.5,] %v_13[8.1,] 	 SYMBOL:	 ARGS:key,value,
		 5: BRANCH %v_14[8.4,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_15 
		 1: 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: (ArgumentError) def_%v_16 
		 2: COPY TYPE_StringLiteral "expected " def_%v_17 
		 3: 
		 4: %self->class def_%v_18 %self[2.0,] 	 SYMBOL:	 ARGS:
		 5: %v_18->settings def_%v_19 %v_18[10.4,] 	 SYMBOL:	 ARGS:
		 6: %v_19->[] def_%v_20 %v_19[10.5,] key[3.1,2.5,] 	 SYMBOL:	 ARGS:key,
		 7: %v_20->type def_%v_21 %v_20[10.6,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_StringLiteral ", " def_%v_22 
		 9: BUILDSTRING def_%v_23 %v_17[10.2,] %v_21[10.7,] %v_22[10.8,] 
		 10: COPY TYPE_StringLiteral "got " def_%v_24 
		 11: 
		 12: value->class def_%v_25 value[8.2,] 	 SYMBOL:	 ARGS:
		 13: COPY TYPE_StringLiteral " (" def_%v_26 
		 14: value->inspect def_%v_27 value[10.12,8.2,] 	 SYMBOL:	 ARGS:
		 15: COPY TYPE_StringLiteral ")" def_%v_28 
		 16: BUILDSTRING def_%v_29 %v_24[10.10,] %v_25[10.12,] %v_26[10.13,] %v_27[10.14,] %v_28[10.15,] 
		 17: %v_23->+ def_%v_30 %v_23[10.9,] %v_29[10.16,] 	 SYMBOL:	 ARGS:%v_29,
		 18: %self->raise def_%v_31 %self[10.4,2.0,] %v_16[10.1,] %v_30[10.17,] 	 SYMBOL:	 ARGS:%v_16,%v_30,
		 19: COPY TYPE_PASS def_%v_15 %v_31[10.18,] 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->configuration def_%v_32 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: ATTRASSIGN %v_32->[] key[3.1,2.5,] value[8.2,] 
		 3: RETURN value[8.2,] %self[11.1,2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = load instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Sugar) def_%v_3 
		 7: %v_3->redis def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_StringLiteral "configuration" def_%v_5 
		 9: %v_4->get def_%v_6 %v_4[2.7,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_5,
		 10: COPY TYPE_PASS def_saved_config %v_6[2.9,] 
		 11: BRANCH %v_6[2.9,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: (JSON) def_%v_7 
		 2: %v_7->parse def_%v_8 %v_7[3.1,] saved_config[2.10,] 	 SYMBOL:	 ARGS:saved_config,
		 3: %v_8->symbolize_keys def_%v_9 %v_8[3.2,] 	 SYMBOL:	 ARGS:
		 4: ATTRASSIGN %self->configuration %v_9[3.3,] 
		 5: RETURN %v_9[3.3,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = save instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Sugar) def_%v_3 
		 7: %v_3->redis def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_StringLiteral "configuration" def_%v_5 
		 9: GETFIELD %self->configuration def_%v_6 %self[2.0,] 
		 10: %v_6->to_json def_%v_7 %v_6[2.9,] 	 SYMBOL:	 ARGS:
		 11: %v_4->set def_%v_8 %v_4[2.7,] %v_5[2.8,] %v_7[2.10,] 	 SYMBOL:	 ARGS:%v_5,%v_7,
		 12: RETURN %v_8[2.11,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_attributes 
		 6: attributes[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_attributes %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: attributes->each def_%v_4 attributes[3.1,2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:attributes,
CLOSURE BEGIN: %self[2.0,] key[] value[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_key 
		 3: RECEIVEARG def_value 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->set def_%cl_1_3 %self[2.0,] key[2.2,] value[2.3,] 	 SYMBOL:	 ARGS:key,value,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: value[2.3,] 
		 2: 
		 3: %self->save def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 4: RETURN %v_5[4.3,] %self[4.3,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reset! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH- def_%v_3 
		 7: ATTRASSIGN %self->configuration %v_3[2.6,] 
		 8: RETURN %v_3[2.6,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = configuration instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->configuration def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: HASH- def_%v_6 
		 1: ATTRASSIGN %self->configuration %v_6[5.0,] 
		 2: RETURN %v_6[5.0,] %self[5.1,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = has_setting? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_key 
		 6: 
		 7: %self->class def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->settings def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_4->has_key? def_%v_5 %v_4[2.8,] key[2.5,] 	 SYMBOL:	 ARGS:key,
		 10: RETURN %v_5[2.9,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = type_for instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_key 
		 6: 
		 7: %self->class def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->settings def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_4->[] def_%v_5 %v_4[2.8,] key[2.5,] 	 SYMBOL:	 ARGS:key,
		 10: %v_5->type def_%v_6 %v_5[2.9,] 	 SYMBOL:	 ARGS:
		 11: RETURN %v_6[2.10,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = valid_type? instanceMethod = true
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_key 
		 6: RECEIVEARG def_value 
		 7: 
		 8: value->nil? def_%v_3 value[2.6,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %v_3[2.8,] 
BB 3
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 4
	outgoing: 6 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: %self->type_for def_%v_5 %self[2.0,] key[2.5,] 	 SYMBOL:	 ARGS:key,
		 3: %v_5->== def_%v_6 %v_5[4.2,] 	 SYMBOL:boolean,	 ARGS:Symbol,
		 4: BRANCH %v_6[4.3,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: (TrueClass) def_%v_7 
		 2: value->is_a? def_%v_8 value[2.6,] %v_7[6.1,] 	 SYMBOL:	 ARGS:%v_7,
		 3: BRANCH %v_8[6.2,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: (FalseClass) def_%v_9 
		 1: value->is_a? def_%v_10 value[2.6,] %v_9[7.0,] 	 SYMBOL:	 ARGS:%v_9,
		 2: COPY TYPE_PASS def_%v_8 %v_10[7.1,] 
BB 8
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %v_8[7.2,6.2,] %self[2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: %self->type_for def_%v_11 %self[2.0,] key[2.5,] 	 SYMBOL:	 ARGS:key,
		 2: %v_11->to_s def_%v_12 %v_11[9.1,] 	 SYMBOL:	 ARGS:
		 3: %v_12->camelize def_%v_13 %v_12[9.2,] 	 SYMBOL:	 ARGS:
		 4: %v_13->constantize def_%v_14 %v_13[9.3,] 	 SYMBOL:	 ARGS:
		 5: value->is_a? def_%v_15 value[2.6,] %v_14[9.4,] 	 SYMBOL:	 ARGS:%v_14,
		 6: RETURN %v_15[9.5,] %self[9.1,2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = parse_value instanceMethod = true
BB 1
	outgoing: 24 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 22 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_key 
		 6: RECEIVEARG def_value 
		 7: 
		 8: %self->type_for def_%v_3 %self[2.0,] key[2.5,] 	 SYMBOL:	 ARGS:key,
		 9: %v_3->== def_%v_4 %v_3[2.8,] 	 SYMBOL:boolean,	 ARGS:Symbol,
		 10: BRANCH %v_4[2.9,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "1" def_%v_5 
		 2: value->== def_%v_6 value[2.6,] %v_5[3.1,] 	 SYMBOL:	 ARGS:%v_5,
		 3: BRANCH %v_6[3.2,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Boolean def_value 
		 1: COPY TYPE_Boolean def_%v_7 
		 2: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_7 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "0" def_%v_8 
		 2: value->== def_%v_9 value[4.0,2.6,] %v_8[6.1,] 	 SYMBOL:	 ARGS:%v_8,
		 3: BRANCH %v_9[6.2,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Boolean def_value 
		 1: COPY TYPE_Boolean def_%v_10 
		 2: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_10 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "true" def_%v_11 
		 2: value->== def_%v_12 value[7.0,4.0,2.6,] %v_11[9.1,] 	 SYMBOL:	 ARGS:%v_11,
		 3: BRANCH %v_12[9.2,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: COPY TYPE_Boolean def_value 
		 1: COPY TYPE_Boolean def_%v_13 
		 2: 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_13 
BB 12
	outgoing: 13 14 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "false" def_%v_14 
		 2: value->== def_%v_15 value[10.0,7.0,4.0,2.6,] %v_14[12.1,] 	 SYMBOL:	 ARGS:%v_14,
		 3: BRANCH %v_15[12.2,] 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: COPY TYPE_Boolean def_value 
		 1: COPY TYPE_Boolean def_%v_16 
		 2: 
BB 14
	outgoing: 15 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_16 
BB 15
	outgoing: 16 17 
	datadep: 
	instructions:
		 0: 
		 1: value->== def_%v_17 value[13.0,10.0,7.0,4.0,2.6,] 	 SYMBOL:enabled,	 ARGS:Symbol,
		 2: BRANCH %v_17[15.1,] 
BB 16
	outgoing: 18 
	datadep: 
	instructions:
		 0: COPY TYPE_Boolean def_value 
		 1: COPY TYPE_Boolean def_%v_18 
		 2: 
BB 17
	outgoing: 18 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_18 
BB 18
	outgoing: 19 20 
	datadep: 
	instructions:
		 0: 
		 1: value->== def_%v_19 value[16.0,13.0,10.0,7.0,4.0,2.6,] 	 SYMBOL:disabled,	 ARGS:Symbol,
		 2: BRANCH %v_19[18.1,] 
BB 19
	outgoing: 21 
	datadep: 
	instructions:
		 0: COPY TYPE_Boolean def_value 
		 1: COPY TYPE_Boolean def_%v_20 
		 2: 
BB 20
	outgoing: 21 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_20 
BB 21
	outgoing: 23 
	datadep: 
	instructions:
		 0: 
BB 22
	outgoing: 23 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_20 
BB 23
	outgoing: 24 
	datadep: 
	instructions:
		 0: 
		 1: RETURN value[2.6,19.0,16.0,13.0,10.0,7.0,4.0,] %self[2.0,] 
BB 24
	outgoing: 
	datadep: 
	instructions:

