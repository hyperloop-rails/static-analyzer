SET IRMethod, name = active instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "expires_at >= ?" def_%v_3 
		 7: (Time) def_%v_4 
		 8: %v_4->now def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: %self->where def_%v_6 %self[2.0,] %v_3[2.6,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_3,%v_5,
		 10: %v_6->includes def_%v_7 %v_6[2.9,] 	 SYMBOL:user,	 ARGS:Symbol,
		 11: RETURN %v_7[2.10,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = expired instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "expires_at < ?" def_%v_3 
		 7: (Time) def_%v_4 
		 8: %v_4->now def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: %self->where def_%v_6 %self[2.0,] %v_3[2.6,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_3,%v_5,
		 10: RETURN %v_6[2.9,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = active instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "expires_at >= ?" def_%v_3 
		 7: (Time) def_%v_4 
		 8: %v_4->now def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: %self->where def_%v_6 %self[2.0,] %v_3[2.6,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_3,%v_5,
		 10: %v_6->includes def_%v_7 %v_6[2.9,] 	 SYMBOL:user,	 ARGS:Symbol,
		 11: RETURN %v_7[2.10,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = expired instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "expires_at < ?" def_%v_3 
		 7: (Time) def_%v_4 
		 8: %v_4->now def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: %self->where def_%v_6 %self[2.0,] %v_3[2.6,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_3,%v_5,
		 10: RETURN %v_6[2.9,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = active instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "expires_at >= ?" def_%v_3 
		 7: (Time) def_%v_4 
		 8: %v_4->now def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: %self->where def_%v_6 %self[2.0,] %v_3[2.6,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_3,%v_5,
		 10: %v_6->includes def_%v_7 %v_6[2.9,] 	 SYMBOL:user,	 ARGS:Symbol,
		 11: RETURN %v_7[2.10,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = expired instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "expires_at < ?" def_%v_3 
		 7: (Time) def_%v_4 
		 8: %v_4->now def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: %self->where def_%v_6 %self[2.0,] %v_3[2.6,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_3,%v_5,
		 10: RETURN %v_6[2.9,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = unique_token instanceMethod = true
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Nil def_token 
		 7: 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_4 token[2.6,8.7,] 
		 1: BRANCH token[2.6,8.7,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: HASH-token- def_%v_5 token[2.6,8.7,] 
		 1: %self->exists? def_%v_6 %self[2.0,] %v_5[4.0,] 	 SYMBOL:	 ARGS:%v_5,
		 2: %v_6->! def_%v_7 %v_6[4.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_PASS def_%v_4 %v_7[4.2,] 
BB 5
	outgoing: 6 10 
	datadep: 
	instructions:
		 0: BRANCH %v_4[4.3,3.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: (Digest) def_%v_8 
		 3: (inherit SHA1) def_%v_9 %v_8[6.2,] 
		 4: %v_9[6.3,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: %v_8->const_missing def_%v_9 %v_8[6.2,] 	 SYMBOL:SHA1,	 ARGS:Symbol,
BB 8
	outgoing: 3 
	datadep: 
	instructions:
		 0: %self->rand def_%v_10 %self[2.0,] 	 SYMBOL:	 ARGS:Fixnum,
		 1: %v_10->to_s def_%v_11 %v_10[8.0,] 	 SYMBOL:	 ARGS:
		 2: (Time) def_%v_12 
		 3: %v_12->now def_%v_13 %v_12[8.2,] 	 SYMBOL:	 ARGS:
		 4: %v_13->to_s def_%v_14 %v_13[8.3,] 	 SYMBOL:	 ARGS:
		 5: %v_11->+ def_%v_15 %v_11[8.1,] %v_14[8.4,] 	 SYMBOL:	 ARGS:%v_14,
		 6: %v_9->hexdigest def_%v_16 %v_9[7.0,6.3,] %v_15[8.5,] 	 SYMBOL:	 ARGS:%v_15,
		 7: COPY TYPE_PASS def_token %v_16[8.6,] 
		 8: 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_3 
		 1: 
		 2: RETURN token[2.6,8.7,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find_by_token instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_token 
		 6: 
		 7: HASH-token- def_%v_3 token[2.5,] 
		 8: %self->where def_%v_4 %self[2.0,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: %v_4->first def_%v_5 %v_4[2.8,] 	 SYMBOL:	 ARGS:
		 10: RETURN %v_5[2.9,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = expiration_time instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (DEFAULT_EXPIRATION) def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = destroy_expired! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->expired def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->each def_%v_4 %v_3[2.6,] 	 SYMBOL:destroy,	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = expired? instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Time) def_%v_3 
		 7: %v_3->now def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %self->expires_at def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 9: %v_4-><= def_%v_6 %v_4[2.7,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_5,
		 10: BRANCH %v_6[2.9,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Boolean def_%v_7 
		 1: RETURN %v_7[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = expire! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: ATTRASSIGN %self->used 
		 7: 
		 8: %self->destroy def_%v_3 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 9: RETURN %v_3[2.8,] %self[2.0,2.6,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = revoke_invite instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->user def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->revoke_invite! def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = grant_invite instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->used def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: RETURN %v_4[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->user def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_5->grant_invite! def_%v_6 %v_5[4.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_6[4.1,] %self[4.0,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_token instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->token def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: (Invite) def_%v_5 
		 1: %v_5->unique_token def_%v_6 %v_5[3.0,] 	 SYMBOL:	 ARGS:
		 2: %self->token= def_%v_4 %v_6[3.1,] 	 SYMBOL:	 ARGS:%v_6,
		 3: RETURN %v_6[3.1,] %self[3.2,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.6,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_expires_at instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->expires_at def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: (Time) def_%v_5 
		 1: %v_5->now def_%v_6 %v_5[3.0,] 	 SYMBOL:	 ARGS:
		 2: (Invite) def_%v_7 
		 3: %v_7->expiration_time def_%v_8 %v_7[3.2,] 	 SYMBOL:	 ARGS:
		 4: %v_6->+ def_%v_9 %v_6[3.1,] %v_8[3.3,] 	 SYMBOL:	 ARGS:%v_8,
		 5: %self->expires_at= def_%v_4 %v_9[3.4,] 	 SYMBOL:	 ARGS:%v_9,
		 6: RETURN %v_9[3.4,] %self[3.5,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.6,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = validate_email_registered instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (User) def_%v_3 
		 7: %self->email def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: HASH-email- def_%v_5 %v_4[2.7,] 
		 9: %v_3->exists? def_%v_6 %v_3[2.6,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_5,
		 10: BRANCH %v_6[2.9,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->errors def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "is already registered!" def_%v_8 
		 3: %v_7->add def_%v_9 %v_7[3.1,] %v_8[3.2,] 	 SYMBOL:email,	 ARGS:Symbol,%v_8,
		 4: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_9 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: (Invite) def_%v_10 
		 2: %v_10->active def_%v_11 %v_10[5.1,] 	 SYMBOL:	 ARGS:
		 3: %v_11->select def_%v_12 %v_11[5.2,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_11,
CLOSURE BEGIN: i[] %self[2.0,] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_i 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: i->!= def_%cl_1_3 i[2.2,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: i->email def_%cl_1_4 i[3.1,2.2,] 	 SYMBOL:	 ARGS:
		 1: %self->email def_%cl_1_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_4->== def_%cl_1_6 %cl_1_4[4.0,] %cl_1_5[4.1,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 3: RETURN %cl_1_6[4.2,] %self[4.1,2.0,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[6.0,] 
		 2: RETURN %cl_1_8[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 4: %v_12->length def_%v_13 %v_12[5.3,] 	 SYMBOL:	 ARGS:
		 5: %v_13->> def_%v_14 %v_13[5.4,] 	 SYMBOL:	 ARGS:Fixnum,
		 6: BRANCH %v_14[5.5,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->errors def_%v_15 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "has already been invited!" def_%v_16 
		 3: %v_15->add def_%v_17 %v_15[6.1,] %v_16[6.2,] 	 SYMBOL:email,	 ARGS:Symbol,%v_16,
		 4: RETURN %v_17[6.3,] %self[6.1,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

