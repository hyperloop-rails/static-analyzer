SET IRMethod, name = process instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_post 
		 6: 
		 7: (Nokogiri) def_%v_3 
		 8: (inherit HTML) def_%v_4 %v_3[2.7,] 
		 9: %v_4[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.7,] 	 SYMBOL:HTML,	 ARGS:Symbol,
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: (inherit DocumentFragment) def_%v_5 %v_4[3.0,2.8,] 
		 1: %v_5[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %v_4->const_missing def_%v_5 %v_4[3.0,2.8,] 	 SYMBOL:DocumentFragment,	 ARGS:Symbol,
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %v_5->parse def_%v_6 %v_5[5.0,4.0,] post[2.5,] 	 SYMBOL:	 ARGS:post,
		 1: COPY TYPE_PASS def_parser %v_6[6.0,] 
		 2: 
		 3: COPY TYPE_StringLiteral "code" def_%v_7 
		 4: %v_6->search def_%v_8 %v_6[6.0,] %v_7[6.3,] 	 SYMBOL:	 ARGS:%v_7,
		 5: %v_8->each def_%v_9 %v_8[6.4,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_8,
CLOSURE BEGIN: element[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_element 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: element->content def_%cl_1_3 element[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_code %cl_1_3[3.1,] 
		 3: 
		 4: %self->syntax_highlight def_%cl_1_4 %self[2.0,] element[3.1,2.2,] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:element,code,
		 5: RETURN %cl_1_4[3.4,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: code[3.2,] 
		 6: 
		 7: parser->to_html def_%v_10 parser[6.1,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_10[6.7,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = syntax_formatter instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Rouge) def_%v_3 
		 7: (inherit Formatters) def_%v_4 %v_3[2.6,] 
		 8: %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.6,] 	 SYMBOL:Formatters,	 ARGS:Symbol,
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: (inherit HTML) def_%v_5 %v_4[3.0,2.7,] 
		 1: %v_5[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %v_4->const_missing def_%v_5 %v_4[3.0,2.7,] 	 SYMBOL:HTML,	 ARGS:Symbol,
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "highlight" def_%v_6 
		 1: HASH-css_class- def_%v_7 %v_6[6.0,] 
		 2: %v_5->new def_%v_8 %v_5[5.0,4.0,] %v_7[6.1,] 	 SYMBOL:	 ARGS:%v_7,
		 3: RETURN %v_8[6.2,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = syntax_highlight instanceMethod = true
BB 1
	outgoing: 14 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 12 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_element 
		 6: RECEIVEARG def_code 
		 7: 
		 8: element->parent def_%v_3 element[2.5,] 	 SYMBOL:	 ARGS:
		 9: %v_3->name def_%v_4 %v_3[2.8,] 	 SYMBOL:	 ARGS:
		 10: COPY TYPE_StringLiteral "pre" def_%v_5 
		 11: %v_4->== def_%v_6 %v_4[2.9,] %v_5[2.10,] 	 SYMBOL:	 ARGS:%v_5,
		 12: BRANCH %v_6[2.11,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: 
		 1: element->attributes def_%v_7 element[2.5,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "class" def_%v_8 
		 3: %v_7->[] def_%v_9 %v_7[3.1,] %v_8[3.2,] 	 SYMBOL:	 ARGS:%v_8,
		 4: %v_9->try def_%v_10 %v_9[3.3,] 	 SYMBOL:value,	 ARGS:
		 5: COPY TYPE_PASS def_language %v_10[3.4,] 
		 6: 
		 7: (Rouge) def_%v_11 
		 8: (inherit Lexer) def_%v_12 %v_11[3.7,] 
		 9: %v_12[3.8,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_11->const_missing def_%v_12 %v_11[3.7,] 	 SYMBOL:Lexer,	 ARGS:Symbol,
BB 5
	outgoing: 6 11 
	datadep: 
	instructions:
		 0: %v_12->find_fancy def_%v_13 %v_12[4.0,3.8,] language[3.5,] code[2.6,] 	 SYMBOL:	 ARGS:language,code,
		 1: BRANCH %v_13[5.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: (Rouge) def_%v_14 
		 1: (inherit Lexers) def_%v_15 %v_14[6.0,] 
		 2: %v_15[6.1,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: %v_14->const_missing def_%v_15 %v_14[6.0,] 	 SYMBOL:Lexers,	 ARGS:Symbol,
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: (inherit PlainText) def_%v_16 %v_15[7.0,6.1,] 
		 1: %v_16[8.0,] 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: %v_15->const_missing def_%v_16 %v_15[7.0,6.1,] 	 SYMBOL:PlainText,	 ARGS:Symbol,
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_13 %v_16[9.0,8.0,] 
BB 11
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_lexer %v_13[10.0,5.0,] 
		 1: 
		 2: element->parent def_%v_17 element[2.5,] 	 SYMBOL:	 ARGS:
		 3: %self->syntax_formatter def_%v_18 %self[2.0,] 	 SYMBOL:	 ARGS:
		 4: lexer->lex def_%v_19 lexer[11.0,] code[2.6,] 	 SYMBOL:	 ARGS:code,
		 5: %v_18->format def_%v_20 %v_18[11.3,] %v_19[11.4,] 	 SYMBOL:	 ARGS:%v_19,
		 6: %v_17->swap def_%v_21 %v_17[11.2,] %v_20[11.5,] 	 SYMBOL:	 ARGS:%v_20,
		 7: RETURN %v_21[11.6,] %self[11.3,2.0,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 14
	outgoing: 
	datadep: 
	instructions:

