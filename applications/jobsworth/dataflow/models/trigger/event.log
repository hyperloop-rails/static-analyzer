SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_params 
		 6: params[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_params %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: params->[] def_%v_4 params[3.1,2.5,] 	 SYMBOL:id,	 ARGS:Symbol,
		 2: ATTRASSIGN %self->id %v_4[4.1,] 
		 3: 
		 4: params->[] def_%v_5 params[4.1,3.1,2.5,] 	 SYMBOL:name,	 ARGS:Symbol,
		 5: ATTRASSIGN %self->name %v_5[4.4,] 
		 6: RETURN %v_5[4.4,] %self[4.2,4.5,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = all instanceMethod = false
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%v_5 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "Task created" def_%v_6 
		 1: HASH-id-name- def_%v_7 %v_6[5.0,] 
		 2: %self->new def_%v_8 %self[2.0,] %v_7[5.1,] 	 SYMBOL:	 ARGS:%v_7,
		 3: COPY TYPE_StringLiteral "Task updated" def_%v_9 
		 4: HASH-id-name- def_%v_10 %v_9[5.3,] 
		 5: %self->new def_%v_11 %self[5.2,2.0,] %v_10[5.4,] 	 SYMBOL:	 ARGS:%v_10,
		 6: COPY TYPE_Array def_%v_12 %v_8[5.2,] %v_11[5.5,] 
		 7: %v_12[5.6,] 
		 8: RETURN %v_12[5.6,] %self[5.2,5.5,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_id 
		 6: 
		 7: %self->all def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->detect def_%v_4 %v_3[2.7,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: event[] id[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_event 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: event->id def_%cl_1_3 event[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->== def_%cl_1_4 %cl_1_3[3.1,] id[] 	 SYMBOL:	 ARGS:id,
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: RETURN %v_4[2.8,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

