SET IRMethod, name = count instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->tasks def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "tasks.completed_at IS NULL" def_%v_4 
		 8: %v_3->where def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: %v_5->count def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: RETURN %v_6[2.9,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = total_count instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->tasks def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->count def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_s instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->to_s def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = top_counts instanceMethod = false
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_company 
		 6: RECEIVECONSTARG def_task_conditions 
		 7: task_conditions[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_task_conditions 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->top_counts_as_tags def_%v_3 %self[2.0,] company[2.5,] 	 SYMBOL:	 ARGS:company,
		 2: %v_3->map def_%v_4 %v_3[4.1,] %self[4.1,2.0,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: tag[] count[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_tag 
		 3: RECEIVEARG def_count 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: tag->name def_%cl_1_3 tag[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_Array def_%cl_1_4 %cl_1_3[3.1,] count[2.3,] 
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: count[2.3,] 
		 3: RETURN %v_4[4.2,] %self[4.1,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = top_counts_as_tags instanceMethod = false
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_company 
		 6: RECEIVECONSTARG def_task_conditions 
		 7: task_conditions[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_task_conditions 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "          select tag_id, count(task_tags.task_id)
          from task_tags
          left join
          tasks on task_tags.task_id = tasks.id
          left join
          task_users on task_tags.task_id = task_users.task_id
          " def_%v_3 
		 2: 
		 3: BRANCH task_conditions[3.0,2.6,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "where " def_%v_4 
		 1: BUILDSTRING def_%v_5 %v_4[5.0,] task_conditions[3.0,2.6,] 
		 2: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "" def_%v_6 
		 1: COPY TYPE_PASS def_%v_5 %v_6[6.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "
          group by tag_id
" def_%v_7 
		 1: BUILDSTRING def_%v_8 %v_3[4.1,] %v_5[6.1,5.1,] %v_7[7.0,] 
		 2: COPY TYPE_PASS def_sql %v_8[7.1,] 
		 3: 
		 4: %self->connection def_%v_9 %self[2.0,] 	 SYMBOL:	 ARGS:
		 5: %v_9->select_rows def_%v_10 %v_9[7.4,] sql[7.2,] 	 SYMBOL:	 ARGS:sql,
		 6: COPY TYPE_PASS def_ids_and_counts %v_10[7.5,] 
		 7: 
		 8: %v_10->map def_%v_11 %v_10[7.5,] %self[7.4,2.0,] 	 SYMBOL:	 ARGS:%v_10,
CLOSURE BEGIN: company[2.5,] %self[7.4,2.0,] t[] id[] count[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_id 
		 3: RECEIVEARG def_count 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: company->tags def_%cl_1_3 company[] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->detect def_%cl_1_4 %cl_1_3[3.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%cl_1_3,
CLOSURE BEGIN: t[] id[2.2,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_t 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: t->id def_%cl_2_3 t[2.2,] 	 SYMBOL:	 ARGS:
		 2: id->to_i def_%cl_2_4 id[] 	 SYMBOL:	 ARGS:
		 3: %cl_2_3->== def_%cl_2_5 %cl_2_3[3.1,] %cl_2_4[3.2,] 	 SYMBOL:	 ARGS:%cl_2_4,
		 4: RETURN %cl_2_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_6 
		 1: def_%cl_2_7 %cl_2_6[4.0,] 
		 2: RETURN %cl_2_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: count->to_i def_%cl_1_5 count[2.3,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_Array def_%cl_1_6 %cl_1_4[3.2,] %cl_1_5[3.3,] 
		 5: RETURN %cl_1_6[3.4,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: count[2.3,] 
		 9: %v_11->reject def_%v_12 %v_11[7.8,] %self[7.4,2.0,] 	 SYMBOL:	 ARGS:%v_11,
CLOSURE BEGIN: tag[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_tag 
		 3: RECEIVEARG def_count 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: tag->nil? def_%cl_3_3 tag[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_3_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_4 
		 1: def_%cl_3_5 %cl_3_4[4.0,] 
		 2: RETURN %cl_3_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: count[2.3,] 
		 10: COPY TYPE_PASS def_res %v_12[7.9,] 
		 11: 
		 12: %v_12->sort_by def_%v_13 %v_12[7.9,] %self[7.4,2.0,] 	 SYMBOL:	 ARGS:%v_12,
CLOSURE BEGIN: tag[7.9,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_4_0 
		 2: RECEIVEARG def_tag 
		 3: RECEIVEARG def_count 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: tag->name def_%cl_4_3 tag[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_4_3->downcase def_%cl_4_4 %cl_4_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: RETURN %cl_4_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_4_5 
		 1: def_%cl_4_6 %cl_4_5[4.0,] 
		 2: RETURN %cl_4_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: count[2.3,] 
		 13: RETURN %v_13[7.12,] %self[7.4,2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

