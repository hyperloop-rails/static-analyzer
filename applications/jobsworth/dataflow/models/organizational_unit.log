SET IRMethod, name = active instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-active- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = active instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-active- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = active instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-active- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = company instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->customer def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->company def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_s instanceMethod = true
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_PASS def_res %v_3[2.6,] 
		 8: 
		 9: %self->custom_attribute_values def_%v_4 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 10: %v_4->any? def_%v_5 %v_4[2.9,] 	 SYMBOL:	 ARGS:
		 11: BRANCH %v_5[2.10,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_6 res[2.7,] 
		 1: COPY TYPE_PASS def_%v_7 res[2.7,] 
		 2: BRANCH res[2.7,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->custom_attribute_values def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_8->first def_%v_9 %v_8[4.0,] 	 SYMBOL:	 ARGS:
		 2: %v_9->value def_%v_10 %v_9[4.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_PASS def_res %v_10[4.2,] 
		 4: COPY TYPE_PASS def_%v_7 %v_10[4.2,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_7 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_11 res[2.7,4.3,] 
		 2: COPY TYPE_PASS def_%v_12 res[2.7,4.3,] 
		 3: BRANCH res[2.7,4.3,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: %self->super def_%v_13 %current_module[2.3,] %v_0[2.1,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_res %v_13[8.0,] 
		 2: COPY TYPE_PASS def_%v_12 %v_13[8.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: RETURN res[8.1,2.7,4.3,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

