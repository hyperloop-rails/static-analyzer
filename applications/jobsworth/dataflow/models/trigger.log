SET IRMethod, name = actions_attributes= instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_params 
		 6: 
		 7: %self->action_ids def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: params->map def_%v_4 params[2.5,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:params,
CLOSURE BEGIN: attr[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_attr 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: attr->[] def_%cl_1_3 attr[2.2,] 	 SYMBOL:id,	 ARGS:Symbol,
		 2: %cl_1_3->to_i def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: %v_3->- def_%v_5 %v_3[2.7,] %v_4[2.8,] 	 SYMBOL:	 ARGS:%v_4,
		 10: %v_5->each def_%v_6 %v_5[2.9,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:%v_5,
CLOSURE BEGIN: %self[2.0,2.7,] id[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_id 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->actions def_%cl_2_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_2_3->destroy def_%cl_2_4 %cl_2_3[3.1,] id[2.2,] 	 SYMBOL:	 ARGS:id,
		 3: RETURN %cl_2_4[3.2,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: 
		 12: params->each def_%v_7 params[2.5,2.8,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:params,
CLOSURE BEGIN: attr[2.8,] %self[2.0,2.7,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_attr 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: attr->[] def_%cl_3_3 attr[2.2,] 	 SYMBOL:id,	 ARGS:Symbol,
		 2: %cl_3_3->blank? def_%cl_3_4 %cl_3_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %cl_3_4[3.2,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->actions def_%cl_3_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: (ActionFactory) def_%cl_3_6 
		 3: attr->delete def_%cl_3_7 attr[2.2,] 	 SYMBOL:factory_id,	 ARGS:Symbol,
		 4: %cl_3_6->find def_%cl_3_8 %cl_3_6[4.2,] %cl_3_7[4.3,] 	 SYMBOL:	 ARGS:%cl_3_7,
		 5: %cl_3_8->build def_%cl_3_9 %cl_3_8[4.4,] attr[4.3,2.2,] 	 SYMBOL:	 ARGS:attr,
		 6: %cl_3_5-><< def_%cl_3_10 %cl_3_5[4.1,] %cl_3_9[4.5,] 	 SYMBOL:	 ARGS:%cl_3_9,
		 7: 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: attr->delete def_%cl_3_11 attr[2.2,] 	 SYMBOL:factory_id,	 ARGS:Symbol,
		 2: 
		 3: %self->actions def_%cl_3_12 %self[2.0,] 	 SYMBOL:	 ARGS:
		 4: attr->[] def_%cl_3_13 attr[5.1,2.2,] 	 SYMBOL:id,	 ARGS:Symbol,
		 5: %cl_3_12->find def_%cl_3_14 %cl_3_12[5.3,] %cl_3_13[5.4,] 	 SYMBOL:	 ARGS:%cl_3_13,
		 6: %cl_3_14->update_attributes def_%cl_3_15 %cl_3_14[5.5,] attr[5.1,5.4,2.2,] 	 SYMBOL:	 ARGS:attr,
		 7: RETURN %cl_3_15[5.6,] %self[5.3,2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_3_10[4.6,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_3_16 
		 1: def_%cl_3_17 %cl_3_16[7.0,] 
		 2: RETURN %cl_3_17[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 13: RETURN %v_7[2.12,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = fire instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_task 
		 6: RECEIVEARG def_fire_on 
		 7: 
		 8: task->company def_%v_3 task[2.5,] 	 SYMBOL:	 ARGS:
		 9: %v_3->triggers def_%v_4 %v_3[2.8,] 	 SYMBOL:	 ARGS:
		 10: HASH-event_id- def_%v_5 fire_on[2.6,] 
		 11: %v_4->where def_%v_6 %v_4[2.9,] %v_5[2.10,] 	 SYMBOL:	 ARGS:%v_5,
		 12: COPY TYPE_PASS def_triggers %v_6[2.11,] 
		 13: 
		 14: COPY TYPE_StringLiteral "tasks.id = " def_%v_7 
		 15: task->id def_%v_8 task[2.5,2.8,] 	 SYMBOL:	 ARGS:
		 16: BUILDSTRING def_%v_9 %v_7[2.14,] %v_8[2.15,] 
		 17: COPY TYPE_PASS def_match %v_9[2.16,] 
		 18: 
		 19: triggers->each def_%v_10 triggers[2.12,] %self[2.0,] 	 SYMBOL:	 ARGS:triggers,
CLOSURE BEGIN: trigger[] task[2.5,2.8,2.15,] match[2.17,] apply[] %self[2.0,] action[] worklog[] executes[] 
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_trigger 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 8 13 
	datadep: 
	instructions:
		 0: 
		 1: trigger->task_filter def_%cl_1_3 trigger[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 5 6 13 
	datadep: 
	instructions:
		 0: 
		 1: task->creator def_%cl_1_4 task[] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_4[4.1,] 
BB 5
	outgoing: 7 13 
	datadep: 
	instructions:
		 0: trigger->task_filter def_%cl_1_5 trigger[2.2,] 	 SYMBOL:	 ARGS:
		 1: task->creator def_%cl_1_6 task[] 	 SYMBOL:	 ARGS:
		 2: ATTRASSIGN %cl_1_5->user %cl_1_6[5.1,] 
		 3: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_6 
BB 7
	outgoing: 9 13 
	datadep: 
	instructions:
		 0: 
		 1: trigger->task_filter def_%cl_1_7 trigger[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_7->count def_%cl_1_8 %cl_1_7[7.1,] match[] 	 SYMBOL:	 ARGS:match,
		 3: %cl_1_8->> def_%cl_1_9 %cl_1_8[7.2,] 	 SYMBOL:	 ARGS:Fixnum,
		 4: COPY TYPE_PASS def_apply %cl_1_9[7.3,] 
		 5: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Boolean def_apply 
		 2: COPY TYPE_Boolean def_%cl_1_9 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: 
		 1: BRANCH apply[8.1,7.4,] 
BB 10
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: 
		 1: trigger->actions def_%cl_1_10 trigger[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_10->collect def_%cl_1_11 %cl_1_10[10.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%cl_1_10,
CLOSURE BEGIN: action[] task[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_action 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: action->execute def_%cl_2_3 action[2.2,] task[] 	 SYMBOL:	 ARGS:task,
		 2: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: COPY TYPE_PASS def_executes %cl_1_11[10.2,] 
		 4: 
		 5: (WorkLog) def_%cl_1_12 
		 6: %cl_1_12->new def_%cl_1_13 %cl_1_12[10.5,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_PASS def_worklog %cl_1_13[10.6,] 
		 8: 
		 9: %cl_1_13->for_task def_%cl_1_14 %cl_1_13[10.6,] task[] 	 SYMBOL:	 ARGS:task,
		 10: 
		 11: (I18n) def_%cl_1_15 
		 12: COPY TYPE_StringLiteral "triggers.updated_by_trigger" def_%cl_1_16 
		 13: %cl_1_15->t def_%cl_1_17 %cl_1_15[10.11,] %cl_1_16[10.12,] 	 SYMBOL:	 ARGS:%cl_1_16,
		 14: ATTRASSIGN worklog->body %cl_1_17[10.13,] 
		 15: 
		 16: worklog->body def_%cl_1_18 worklog[10.7,10.14,] 	 SYMBOL:	 ARGS:
		 17: COPY TYPE_StringLiteral " " def_%cl_1_19 
		 18: executes->join def_%cl_1_20 executes[10.3,] %cl_1_19[10.17,] 	 SYMBOL:	 ARGS:%cl_1_19,
		 19: %cl_1_18-><< def_%cl_1_21 %cl_1_18[10.16,] %cl_1_20[10.18,] 	 SYMBOL:	 ARGS:%cl_1_20,
		 20: 
		 21: worklog->save! def_%cl_1_22 worklog[10.7,10.14,10.16,] 	 SYMBOL:	 ARGS:
		 22: 
BB 11
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 12
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %cl_1_22[10.21,] %self[2.0,] 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: def_%cl_1_23 
		 1: def_%cl_1_24 %cl_1_23[13.0,] 
		 2: RETURN %cl_1_24[13.1,] %self[2.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: apply[7.4,8.1,] executes[10.3,] worklog[10.7,10.14,] 
		 20: RETURN %v_10[2.19,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = task_filter_name instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->task_filter def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->nil? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: (I18n) def_%v_5 
		 1: COPY TYPE_StringLiteral "shared.none" def_%v_6 
		 2: %v_5->t def_%v_7 %v_5[3.0,] %v_6[3.1,] 	 SYMBOL:	 ARGS:%v_6,
		 3: RETURN %v_7[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->task_filter def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_8->name def_%v_9 %v_8[4.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_9[4.1,] %self[4.0,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = event_name instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Event) def_%v_3 
		 7: %self->event_id def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->find def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: %v_5->name def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: RETURN %v_6[2.9,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

