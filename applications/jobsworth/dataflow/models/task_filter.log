SET IRMethod, name = shared instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-shared- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = visible instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-system-recent_for_user_id- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = recent_for instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: user[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_user 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: user->id def_%cl_1_3 user[2.2,] 	 SYMBOL:	 ARGS:
		 2: HASH-recent_for_user_id- def_%cl_1_4 %cl_1_3[3.1,] 
		 3: %self->where def_%cl_1_5 %self[2.0,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: COPY TYPE_StringLiteral "id desc" def_%cl_1_6 
		 5: %cl_1_5->order def_%cl_1_7 %cl_1_5[3.3,] %cl_1_6[3.4,] 	 SYMBOL:	 ARGS:%cl_1_6,
		 6: RETURN %cl_1_7[3.5,] %self[3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[4.0,] 
		 2: RETURN %cl_1_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = shared instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-shared- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = visible instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-system-recent_for_user_id- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = recent_for instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: user[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_user 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: user->id def_%cl_1_3 user[2.2,] 	 SYMBOL:	 ARGS:
		 2: HASH-recent_for_user_id- def_%cl_1_4 %cl_1_3[3.1,] 
		 3: %self->where def_%cl_1_5 %self[2.0,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: COPY TYPE_StringLiteral "id desc" def_%cl_1_6 
		 5: %cl_1_5->order def_%cl_1_7 %cl_1_5[3.3,] %cl_1_6[3.4,] 	 SYMBOL:	 ARGS:%cl_1_6,
		 6: RETURN %cl_1_7[3.5,] %self[3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[4.0,] 
		 2: RETURN %cl_1_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = shared instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-shared- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = visible instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-system-recent_for_user_id- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = recent_for instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: user[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_user 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: user->id def_%cl_1_3 user[2.2,] 	 SYMBOL:	 ARGS:
		 2: HASH-recent_for_user_id- def_%cl_1_4 %cl_1_3[3.1,] 
		 3: %self->where def_%cl_1_5 %self[2.0,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: COPY TYPE_StringLiteral "id desc" def_%cl_1_6 
		 5: %cl_1_5->order def_%cl_1_7 %cl_1_5[3.3,] %cl_1_6[3.4,] 	 SYMBOL:	 ARGS:%cl_1_6,
		 6: RETURN %cl_1_7[3.5,] %self[3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[4.0,] 
		 2: RETURN %cl_1_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = system_filter instanceMethod = false
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: 
		 7: user->task_filters def_%v_3 user[2.5,] 	 SYMBOL:	 ARGS:
		 8: HASH-system- def_%v_4 
		 9: %v_3->where def_%v_5 %v_3[2.7,] %v_4[2.8,] 	 SYMBOL:	 ARGS:%v_4,
		 10: %v_5->first def_%v_6 %v_5[2.9,] 	 SYMBOL:	 ARGS:
		 11: COPY TYPE_PASS def_filter %v_6[2.10,] 
		 12: 
		 13: %v_6->nil? def_%v_7 %v_6[2.10,] 	 SYMBOL:	 ARGS:
		 14: BRANCH %v_7[2.13,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: user->task_filters def_%v_8 user[2.5,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "System filter for " def_%v_9 
		 3: BUILDSTRING def_%v_10 %v_9[3.2,] user[3.1,2.5,] 
		 4: user->id def_%v_11 user[3.1,2.5,] 	 SYMBOL:	 ARGS:
		 5: HASH-name-user_id-system- def_%v_12 %v_10[3.3,] %v_11[3.4,] 
		 6: %v_8->build def_%v_13 %v_8[3.1,] %v_12[3.5,] 	 SYMBOL:	 ARGS:%v_12,
		 7: COPY TYPE_PASS def_filter %v_13[3.6,] 
		 8: 
		 9: %v_13->save! def_%v_14 %v_13[3.6,] 	 SYMBOL:	 ARGS:
		 10: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_14 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: RETURN filter[3.7,2.11,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tasks instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_extra_conditions 
		 6: extra_conditions[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_extra_conditions 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: (TaskRecord) def_%v_3 
		 2: %self->user def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %v_3->all_accessed_by def_%v_5 %v_3[4.1,] %v_4[4.2,] 	 SYMBOL:	 ARGS:%v_4,
		 4: %self->conditions def_%v_6 %self[4.2,2.0,] extra_conditions[3.0,2.5,] 	 SYMBOL:	 ARGS:extra_conditions,
		 5: %v_5->where def_%v_7 %v_5[4.3,] %v_6[4.4,] 	 SYMBOL:	 ARGS:%v_6,
		 6: %self->to_include def_%v_8 %self[4.2,4.4,2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_7->includes def_%v_9 %v_7[4.5,] %v_8[4.6,] 	 SYMBOL:	 ARGS:%v_8,
		 8: %v_9->limit def_%v_10 %v_9[4.7,] 	 SYMBOL:	 ARGS:Fixnum,
		 9: RETURN %v_10[4.8,] %self[4.2,4.4,4.6,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tasks_for_fullcalendar instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_parameters 
		 6: 
		 7: %self->parse_fullcalendar_params def_%v_3 %self[2.0,] parameters[2.5,] 	 SYMBOL:	 ARGS:parameters,
		 8: %self->tasks def_%v_4 %self[2.0,2.7,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: %v_4->includes def_%v_5 %v_4[2.8,] 	 SYMBOL:milestone,	 ARGS:Symbol,
		 10: RETURN %v_5[2.9,] %self[2.0,2.7,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tasks_for_gantt instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_parameters 
		 6: 
		 7: %self->tasks def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->includes def_%v_4 %v_3[2.7,] 	 SYMBOL:milestone,	 ARGS:Symbol,
		 9: COPY TYPE_StringLiteral "projects.name, milestones.name" def_%v_5 
		 10: %v_4->order def_%v_6 %v_4[2.8,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_5,
		 11: RETURN %v_6[2.10,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = projects_for_fullcalendar instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_parameters 
		 6: 
		 7: %self->parse_fullcalendar_params def_%v_3 %self[2.0,] parameters[2.5,] 	 SYMBOL:	 ARGS:parameters,
		 8: %self->tasks def_%v_4 %self[2.0,2.7,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: %v_4->includes def_%v_5 %v_4[2.8,] 	 SYMBOL:project,	 ARGS:Symbol,
		 10: %v_5->collect def_%v_6 %v_5[2.9,] %self[2.0,2.7,2.8,] 	 SYMBOL:	 ARGS:%v_5,
CLOSURE BEGIN: t[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_t 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: t->project def_%cl_1_3 t[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: COPY TYPE_PASS def_projects %v_6[2.10,] 
		 12: 
		 13: %v_6->uniq def_%v_7 %v_6[2.10,] 	 SYMBOL:	 ARGS:
		 14: RETURN %v_7[2.13,] %self[2.0,2.7,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = count instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_extra_conditions 
		 6: extra_conditions[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_extra_conditions 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: (TaskRecord) def_%v_3 
		 2: %self->user def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %v_3->all_accessed_by def_%v_5 %v_3[4.1,] %v_4[4.2,] 	 SYMBOL:	 ARGS:%v_4,
		 4: %self->conditions def_%v_6 %self[4.2,2.0,] extra_conditions[3.0,2.5,] 	 SYMBOL:	 ARGS:extra_conditions,
		 5: %v_5->where def_%v_7 %v_5[4.3,] %v_6[4.4,] 	 SYMBOL:	 ARGS:%v_6,
		 6: %self->to_include def_%v_8 %self[4.2,4.4,2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_7->includes def_%v_9 %v_7[4.5,] %v_8[4.6,] 	 SYMBOL:	 ARGS:%v_8,
		 8: %v_9->count def_%v_10 %v_9[4.7,] 	 SYMBOL:	 ARGS:
		 9: RETURN %v_10[4.8,] %self[4.2,4.4,4.6,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = display_count instanceMethod = true
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: RECEIVECONSTARG def_force_recount 
		 7: force_recount[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Boolean def_force_recount 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: BRANCH force_recount[3.0,2.6,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: ATTRASSIGN %self->display_count 
		 1: COPY TYPE_Nil def_%v_3 
		 2: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_3 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_5 %self[5.0,2.0,] 
		 2: COPY TYPE_PASS def_%v_4 %v_5[7.1,] 
		 3: %v_5[7.1,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: GETFIELD %self->display_count def_%v_6 %self[5.0,2.0,] 
		 1: COPY TYPE_PASS def_%v_4 %v_6[8.0,] 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: BRANCH %v_4[8.1,7.2,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: %self->unread_conditions def_%v_7 %self[5.0,2.0,] user[2.5,] 	 SYMBOL:	 ARGS:user,Boolean,
		 1: %self->count def_%v_8 %self[10.0,5.0,2.0,] %v_7[10.0,] 	 SYMBOL:	 ARGS:%v_7,
		 2: ATTRASSIGN %self->display_count %v_8[10.1,] 
		 3: RETURN %v_8[10.1,] %self[10.0,10.1,10.2,5.0,2.0,] 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %v_6[8.0,] %self[5.0,2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = conditions instanceMethod = true
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_extra_conditions 
		 6: extra_conditions[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_extra_conditions 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->qualifiers def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_3->select def_%v_4 %v_3[4.1,] %self[4.1,2.0,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: q[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_q 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: q->qualifiable_type def_%cl_1_3 q[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "TimeRange" def_%cl_1_4 
		 3: %cl_1_3->== def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: RETURN %cl_1_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: COPY TYPE_PASS def_time_qualifiers %v_4[4.2,] 
		 4: 
		 5: %self->qualifiers def_%v_5 %self[4.1,2.0,] 	 SYMBOL:	 ARGS:
		 6: %v_5->select def_%v_6 %v_5[4.5,] %self[4.1,4.5,2.0,] 	 SYMBOL:	 ARGS:%v_5,
CLOSURE BEGIN: q[4.2,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_q 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: q->qualifiable_type def_%cl_2_3 q[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "Status" def_%cl_2_4 
		 3: %cl_2_3->== def_%cl_2_5 %cl_2_3[3.1,] %cl_2_4[3.2,] 	 SYMBOL:	 ARGS:%cl_2_4,
		 4: RETURN %cl_2_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_6 
		 1: def_%cl_2_7 %cl_2_6[4.0,] 
		 2: RETURN %cl_2_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: COPY TYPE_PASS def_status_qualifiers %v_6[4.6,] 
		 8: 
		 9: %self->qualifiers def_%v_7 %self[4.1,4.5,2.0,] 	 SYMBOL:	 ARGS:
		 10: %v_7->select def_%v_8 %v_7[4.9,] %self[4.1,4.5,4.9,2.0,] 	 SYMBOL:	 ARGS:%v_7,
CLOSURE BEGIN: q[4.2,4.6,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_q 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: q->qualifiable_type def_%cl_3_3 q[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "PropertyValue" def_%cl_3_4 
		 3: %cl_3_3->== def_%cl_3_5 %cl_3_3[3.1,] %cl_3_4[3.2,] 	 SYMBOL:	 ARGS:%cl_3_4,
		 4: RETURN %cl_3_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_6 
		 1: def_%cl_3_7 %cl_3_6[4.0,] 
		 2: RETURN %cl_3_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: COPY TYPE_PASS def_property_qualifiers %v_8[4.10,] 
		 12: 
		 13: %self->qualifiers def_%v_9 %self[4.1,4.5,4.9,2.0,] 	 SYMBOL:	 ARGS:
		 14: %v_9->select def_%v_10 %v_9[4.13,] %self[4.1,4.5,4.9,4.13,2.0,] 	 SYMBOL:	 ARGS:%v_9,
CLOSURE BEGIN: q[4.2,4.6,4.10,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_4_0 
		 2: RECEIVEARG def_q 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: q->qualifiable_type def_%cl_4_3 q[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "Customer" def_%cl_4_4 
		 3: %cl_4_3->== def_%cl_4_5 %cl_4_3[3.1,] %cl_4_4[3.2,] 	 SYMBOL:	 ARGS:%cl_4_4,
		 4: RETURN %cl_4_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_4_6 
		 1: def_%cl_4_7 %cl_4_6[4.0,] 
		 2: RETURN %cl_4_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 15: COPY TYPE_PASS def_customer_qualifiers %v_10[4.14,] 
		 16: 
		 17: %self->qualifiers def_%v_11 %self[4.1,4.5,4.9,4.13,2.0,] 	 SYMBOL:	 ARGS:
		 18: %v_11->- def_%v_12 %v_11[4.17,] property_qualifiers[4.11,] 	 SYMBOL:	 ARGS:property_qualifiers,
		 19: %v_12->- def_%v_13 %v_12[4.18,] status_qualifiers[4.7,] 	 SYMBOL:	 ARGS:status_qualifiers,
		 20: %v_13->- def_%v_14 %v_13[4.19,] customer_qualifiers[4.15,] 	 SYMBOL:	 ARGS:customer_qualifiers,
		 21: %v_14->- def_%v_15 %v_14[4.20,] time_qualifiers[4.3,] 	 SYMBOL:	 ARGS:time_qualifiers,
		 22: COPY TYPE_PASS def_standard_qualifiers %v_15[4.21,] 
		 23: 
		 24: %self->conditions_for_standard_qualifiers def_%v_16 %self[4.1,4.5,4.9,4.13,4.17,2.0,] %v_15[4.21,] 	 SYMBOL:	 ARGS:standard_qualifiers,
		 25: COPY TYPE_PASS def_res %v_16[4.24,] 
		 26: 
		 27: %self->conditions_for_property_qualifiers def_%v_17 %self[4.1,4.5,4.9,4.13,4.17,4.24,2.0,] property_qualifiers[4.11,] 	 SYMBOL:	 ARGS:property_qualifiers,
		 28: res->+ def_%v_18 res[4.25,] %v_17[4.27,] 	 SYMBOL:	 ARGS:%v_17,
		 29: COPY TYPE_PASS def_res %v_18[4.28,] 
		 30: 
		 31: %self->conditions_for_status_qualifiers def_%v_19 %self[4.1,4.5,4.9,4.13,4.17,4.24,4.27,2.0,] status_qualifiers[4.7,] 	 SYMBOL:	 ARGS:status_qualifiers,
		 32: res-><< def_%v_20 res[4.25,4.28,4.29,] %v_19[4.31,] 	 SYMBOL:	 ARGS:%v_19,
		 33: 
		 34: %self->conditions_for_customer_qualifiers def_%v_21 %self[4.1,4.5,4.9,4.13,4.17,4.24,4.27,4.31,2.0,] customer_qualifiers[4.15,] 	 SYMBOL:	 ARGS:customer_qualifiers,
		 35: res-><< def_%v_22 res[4.25,4.28,4.29,4.32,] %v_21[4.34,] 	 SYMBOL:	 ARGS:%v_21,
		 36: 
		 37: %self->conditions_for_time_qualifiers def_%v_23 %self[4.1,4.5,4.9,4.13,4.17,4.24,4.27,4.31,4.34,2.0,] time_qualifiers[4.3,] 	 SYMBOL:	 ARGS:time_qualifiers,
		 38: res-><< def_%v_24 res[4.25,4.28,4.29,4.32,4.35,] %v_23[4.37,] 	 SYMBOL:	 ARGS:%v_23,
		 39: 
		 40: %self->conditions_for_keywords def_%v_25 %self[4.1,4.5,4.9,4.13,4.17,4.24,4.27,4.31,4.34,4.37,2.0,] 	 SYMBOL:	 ARGS:
		 41: res-><< def_%v_26 res[4.25,4.28,4.29,4.32,4.35,4.38,] %v_25[4.40,] 	 SYMBOL:	 ARGS:%v_25,
		 42: 
		 43: BRANCH extra_conditions[3.0,2.5,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: res-><< def_%v_27 res[4.25,4.29,] extra_conditions[3.0,2.5,] 	 SYMBOL:	 ARGS:extra_conditions,
		 1: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_27 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->unread_only? def_%v_28 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_28[7.1,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: %self->user def_%v_29 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %self->unread_conditions def_%v_30 %self[8.0,2.0,] %v_29[8.0,] 	 SYMBOL:	 ARGS:%v_29,
		 2: res-><< def_%v_31 res[4.25,4.29,] %v_30[8.1,] 	 SYMBOL:	 ARGS:%v_30,
		 3: 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_31 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: res->select def_%v_32 res[4.25,4.29,] %self[2.0,] 	 SYMBOL:	 ARGS:res,
CLOSURE BEGIN: c[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_5_0 
		 2: RECEIVEARG def_c 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: c->blank? def_%cl_5_3 c[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_5_3->! def_%cl_5_4 %cl_5_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: RETURN %cl_5_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_5_5 
		 1: def_%cl_5_6 %cl_5_5[4.0,] 
		 2: RETURN %cl_5_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: COPY TYPE_PASS def_res %v_32[10.1,] 
		 3: 
		 4: COPY TYPE_StringLiteral " AND " def_%v_33 
		 5: %v_32->join def_%v_34 %v_32[10.1,] %v_33[10.4,] 	 SYMBOL:	 ARGS:%v_33,
		 6: COPY TYPE_PASS def_res %v_34[10.5,] 
		 7: 
		 8: RETURN %v_34[10.5,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = cache_key instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->super def_%v_3 %v_0[2.1,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_PASS def_key %v_3[2.6,] 
		 8: 
		 9: %self->unread_only? def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 10: BRANCH %v_4[2.9,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "/Time.now.to_i/" def_%v_5 
		 2: %self->user def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %v_6->id def_%v_7 %v_6[3.2,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_StringLiteral "/" def_%v_8 
		 5: %self->rand def_%v_9 %self[3.2,2.0,] 	 SYMBOL:	 ARGS:
		 6: COPY TYPE_StringLiteral "/" def_%v_10 
		 7: BUILDSTRING def_%v_11 key[2.7,] %v_5[3.1,] %v_7[3.3,] %v_8[3.4,] %v_9[3.5,] %v_10[3.6,] 
		 8: RETURN %v_11[3.7,] %self[3.2,3.5,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->user def_%v_12 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_12->company def_%v_13 %v_12[4.1,] 	 SYMBOL:	 ARGS:
		 3: %v_13->tasks def_%v_14 %v_13[4.2,] 	 SYMBOL:	 ARGS:
		 4: %self->conditions def_%v_15 %self[4.1,2.0,] 	 SYMBOL:	 ARGS:
		 5: %v_14->where def_%v_16 %v_14[4.3,] %v_15[4.4,] 	 SYMBOL:	 ARGS:%v_15,
		 6: %self->to_include def_%v_17 %self[4.1,4.4,2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_16->includes def_%v_18 %v_16[4.5,] %v_17[4.6,] 	 SYMBOL:	 ARGS:%v_17,
		 8: %v_18->maximum def_%v_19 %v_18[4.7,] 	 SYMBOL:updated_at,	 ARGS:Symbol,
		 9: COPY TYPE_PASS def_last_task_update %v_19[4.8,] 
		 10: 
		 11: COPY TYPE_StringLiteral "/" def_%v_20 
		 12: %v_19->to_i def_%v_21 %v_19[4.8,] 	 SYMBOL:	 ARGS:
		 13: COPY TYPE_StringLiteral "/" def_%v_22 
		 14: %self->user def_%v_23 %self[4.1,4.4,4.6,2.0,] 	 SYMBOL:	 ARGS:
		 15: %v_23->id def_%v_24 %v_23[4.14,] 	 SYMBOL:	 ARGS:
		 16: BUILDSTRING def_%v_25 key[2.7,] %v_20[4.11,] %v_21[4.12,] %v_22[4.13,] %v_24[4.15,] 
		 17: RETURN %v_25[4.16,] %self[4.1,4.4,4.6,4.14,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = copy_from instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_filter 
		 6: 
		 7: filter->unread_only def_%v_3 filter[2.5,] 	 SYMBOL:	 ARGS:
		 8: ATTRASSIGN %self->unread_only %v_3[2.7,] 
		 9: 
		 10: filter->qualifiers def_%v_4 filter[2.5,2.7,] 	 SYMBOL:	 ARGS:
		 11: %v_4->each def_%v_5 %v_4[2.10,] %self[2.0,2.8,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: %self[2.0,2.8,] q[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_q 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->qualifiers def_%cl_1_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: q->task_filter_id def_%cl_1_4 q[2.2,] 	 SYMBOL:	 ARGS:
		 3: q->qualifiable_type def_%cl_1_5 q[3.2,2.2,] 	 SYMBOL:	 ARGS:
		 4: q->qualifiable_id def_%cl_1_6 q[3.2,3.3,2.2,] 	 SYMBOL:	 ARGS:
		 5: q->qualifiable_column def_%cl_1_7 q[3.2,3.3,3.4,2.2,] 	 SYMBOL:	 ARGS:
		 6: q->reversed def_%cl_1_8 q[3.2,3.3,3.4,3.5,2.2,] 	 SYMBOL:	 ARGS:
		 7: HASH-task_filter_id-qualifiable_type-qualifiable_id-qualifiable_column-reversed- def_%cl_1_9 %cl_1_4[3.2,] %cl_1_5[3.3,] %cl_1_6[3.4,] %cl_1_7[3.5,] %cl_1_8[3.6,] 
		 8: %cl_1_3->build def_%cl_1_10 %cl_1_3[3.1,] %cl_1_9[3.7,] 	 SYMBOL:	 ARGS:%cl_1_9,
		 9: RETURN %cl_1_10[3.8,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_11 
		 1: def_%cl_1_12 %cl_1_11[4.0,] 
		 2: RETURN %cl_1_12[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 12: 
		 13: filter->keywords def_%v_6 filter[2.5,2.7,2.10,] 	 SYMBOL:	 ARGS:
		 14: %v_6->each def_%v_7 %v_6[2.13,] %self[2.0,2.8,] 	 SYMBOL:	 ARGS:%v_6,
CLOSURE BEGIN: %self[2.0,2.8,] filter[2.5,2.7,2.10,2.13,] kw[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_kw 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->keywords def_%cl_2_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: filter->company def_%cl_2_4 filter[] 	 SYMBOL:	 ARGS:
		 3: kw->word def_%cl_2_5 kw[2.2,] 	 SYMBOL:	 ARGS:
		 4: HASH-task_filter-company-word- def_%cl_2_6 %self[3.1,2.0,] %cl_2_4[3.2,] %cl_2_5[3.3,] 
		 5: %cl_2_3->build def_%cl_2_7 %cl_2_3[3.1,] %cl_2_6[3.4,] 	 SYMBOL:	 ARGS:%cl_2_6,
		 6: RETURN %cl_2_7[3.5,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_8 
		 1: def_%cl_2_9 %cl_2_8[4.0,] 
		 2: RETURN %cl_2_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 15: RETURN %v_7[2.14,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = select_filter instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_filter 
		 6: 
		 7: (TaskFilter) def_%v_3 
		 8: %v_3->transaction def_%v_4 %v_3[2.7,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: %self[2.0,] filter[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->qualifiers def_%cl_1_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->scoped def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->delete_all def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: 
		 5: %self->keywords def_%cl_1_6 %self[3.1,2.0,] 	 SYMBOL:	 ARGS:
		 6: %cl_1_6->scoped def_%cl_1_7 %cl_1_6[3.5,] 	 SYMBOL:	 ARGS:
		 7: %cl_1_7->delete_all def_%cl_1_8 %cl_1_7[3.6,] 	 SYMBOL:	 ARGS:
		 8: 
		 9: %self->copy_from def_%cl_1_9 %self[3.1,3.5,2.0,] filter[] 	 SYMBOL:	 ARGS:filter,
		 10: 
		 11: %self->save! def_%cl_1_10 %self[3.1,3.5,3.9,2.0,] 	 SYMBOL:	 ARGS:
		 12: RETURN %cl_1_10[3.11,] %self[3.1,3.5,3.9,3.11,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_11 
		 1: def_%cl_1_12 %cl_1_11[4.0,] 
		 2: RETURN %cl_1_12[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = store_for instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: 
		 7: (ActiveRecord) def_%v_3 
		 8: (inherit Base) def_%v_4 %v_3[2.7,] 
		 9: %v_4[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.7,] 	 SYMBOL:Base,	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_4->transaction def_%v_5 %v_4[3.0,2.8,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: user[2.5,] %self[2.0,] filter[] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 10 
	datadep: 
	instructions:
		 0: 
		 1: (TaskFilter) def_%cl_1_3 
		 2: %cl_1_3->recent_for def_%cl_1_4 %cl_1_3[3.1,] user[] 	 SYMBOL:	 ARGS:user,
		 3: %cl_1_4->count def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %cl_1_5->>= def_%cl_1_6 %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:Fixnum,
		 5: BRANCH %cl_1_6[3.4,] 
BB 4
	outgoing: 6 10 
	datadep: 
	instructions:
		 0: 
		 1: (TaskFilter) def_%cl_1_7 
		 2: %cl_1_7->recent_for def_%cl_1_8 %cl_1_7[4.1,] user[] 	 SYMBOL:	 ARGS:user,
		 3: %cl_1_8->last def_%cl_1_9 %cl_1_8[4.2,] 	 SYMBOL:	 ARGS:
		 4: %cl_1_9->destroy def_%cl_1_10 %cl_1_9[4.3,] 	 SYMBOL:	 ARGS:
		 5: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_10 
BB 6
	outgoing: 7 8 10 
	datadep: 
	instructions:
		 0: 
		 1: (TaskFilter) def_%cl_1_11 
		 2: user->id def_%cl_1_12 user[] 	 SYMBOL:	 ARGS:
		 3: %self->company def_%cl_1_13 %self[2.0,] 	 SYMBOL:	 ARGS:
		 4: HASH-recent_for_user_id-user-company- def_%cl_1_14 %cl_1_12[6.2,] user[6.2,] %cl_1_13[6.3,] 
		 5: %cl_1_11->new def_%cl_1_15 %cl_1_11[6.1,] %cl_1_14[6.4,] 	 SYMBOL:	 ARGS:%cl_1_14,
		 6: COPY TYPE_PASS def_filter %cl_1_15[6.5,] 
		 7: 
		 8: %self->generate_name def_%cl_1_16 %self[6.3,2.0,] 	 SYMBOL:	 ARGS:
		 9: ATTRASSIGN filter->name %cl_1_16[6.8,] 
		 10: 
		 11: filter->name def_%cl_1_17 filter[6.6,6.9,] 	 SYMBOL:	 ARGS:
		 12: %cl_1_17->blank? def_%cl_1_18 %cl_1_17[6.11,] 	 SYMBOL:	 ARGS:
		 13: BRANCH %cl_1_18[6.12,] 
BB 7
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: %self->name def_%cl_1_19 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: ATTRASSIGN filter->name %cl_1_19[7.0,] 
		 2: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_19 
BB 9
	outgoing: 10 12 
	datadep: 
	instructions:
		 0: 
		 1: filter->copy_from def_%cl_1_20 filter[7.1,6.6,6.9,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
		 2: 
		 3: filter->save! def_%cl_1_21 filter[9.1,7.1,6.6,6.9,] 	 SYMBOL:	 ARGS:
		 4: RETURN %cl_1_21[9.3,] %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_1_22 
		 1: def_%cl_1_23 %cl_1_22[10.0,] 
		 2: RETURN %cl_1_23[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 1: RETURN %v_5[4.0,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_filter instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_params 
		 6: 
		 7: (ActiveRecord) def_%v_3 
		 8: (inherit Base) def_%v_4 %v_3[2.7,] 
		 9: %v_4[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.7,] 	 SYMBOL:Base,	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_4->transaction def_%v_5 %v_4[3.0,2.8,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: %self[2.0,] params[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->keywords def_%cl_1_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->scoped def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->delete_all def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: 
		 5: %self->qualifiers def_%cl_1_6 %self[3.1,2.0,] 	 SYMBOL:	 ARGS:
		 6: %cl_1_6->scoped def_%cl_1_7 %cl_1_6[3.5,] 	 SYMBOL:	 ARGS:
		 7: %cl_1_7->delete_all def_%cl_1_8 %cl_1_7[3.6,] 	 SYMBOL:	 ARGS:
		 8: 
		 9: ATTRASSIGN %self->unread_only 
		 10: 
		 11: ATTRASSIGN %self->attributes params[] 
		 12: 
		 13: %self->save! def_%cl_1_9 %self[3.1,3.5,3.9,3.11,2.0,] 	 SYMBOL:	 ARGS:
		 14: RETURN %cl_1_9[3.13,] %self[3.1,3.5,3.9,3.11,3.13,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_10 
		 1: def_%cl_1_11 %cl_1_10[4.0,] 
		 2: RETURN %cl_1_11[4.1,] %self[3.9,3.11,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 1: RETURN %v_5[4.0,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = show? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: 
		 7: %self->task_filter_users def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: user->id def_%v_4 user[2.5,] 	 SYMBOL:	 ARGS:
		 9: HASH-user_id- def_%v_5 %v_4[2.8,] 
		 10: %v_3->where def_%v_6 %v_3[2.7,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_5,
		 11: %v_6->count def_%v_7 %v_6[2.10,] 	 SYMBOL:	 ARGS:
		 12: %v_7->!= def_%v_8 %v_7[2.11,] 	 SYMBOL:	 ARGS:Fixnum,
		 13: RETURN %v_8[2.12,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = generate_name instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Fixnum def_counter 
		 7: 
		 8: COPY TYPE_Array def_%v_3 
		 9: COPY TYPE_PASS def_arr %v_3[2.8,] 
		 10: 
		 11: COPY TYPE_StringLiteral "Project" def_%v_4 
		 12: COPY TYPE_StringLiteral "Milestone" def_%v_5 
		 13: COPY TYPE_StringLiteral "Status" def_%v_6 
		 14: COPY TYPE_StringLiteral "Client" def_%v_7 
		 15: COPY TYPE_StringLiteral "User" def_%v_8 
		 16: COPY TYPE_Array def_%v_9 %v_4[2.11,] %v_5[2.12,] %v_6[2.13,] %v_7[2.14,] %v_8[2.15,] 
		 17: COPY TYPE_PASS def_types %v_9[2.16,] 
		 18: 
		 19: %v_9->each def_%v_10 %v_9[2.16,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_9,
CLOSURE BEGIN: %self[2.0,] q[] type[] qualifier[] arr[2.9,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_type 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->qualifiers def_%cl_1_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->select def_%cl_1_4 %cl_1_3[3.1,] %self[3.1,2.0,] 	 SYMBOL:	 ARGS:%cl_1_3,
CLOSURE BEGIN: q[] type[2.2,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_q 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: q->qualifiable_type def_%cl_2_3 q[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_2_3->== def_%cl_2_4 %cl_2_3[3.1,] type[] 	 SYMBOL:	 ARGS:type,
		 3: RETURN %cl_2_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: %cl_1_4->each def_%cl_1_5 %cl_1_4[3.2,] %self[3.1,2.0,] 	 SYMBOL:	 ARGS:%cl_1_4,
CLOSURE BEGIN: qualifier[] arr[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_qualifier 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: qualifier->reversed? def_%cl_3_3 qualifier[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_3_3[3.1,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "not " def_%cl_3_4 
		 1: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "" def_%cl_3_5 
		 1: COPY TYPE_PASS def_%cl_3_4 %cl_3_5[5.0,] 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: qualifier->qualifiable def_%cl_3_6 qualifier[2.2,] 	 SYMBOL:	 ARGS:
		 1: %cl_3_6->to_s def_%cl_3_7 %cl_3_6[6.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_3_4->+ def_%cl_3_8 %cl_3_4[5.1,4.0,] %cl_3_7[6.1,] 	 SYMBOL:	 ARGS:%cl_3_7,
		 3: arr-><< def_%cl_3_9 arr[] %cl_3_8[6.2,] 	 SYMBOL:	 ARGS:%cl_3_8,
		 4: RETURN %cl_3_9[6.3,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_3_10 
		 1: def_%cl_3_11 %cl_3_10[7.0,] 
		 2: RETURN %cl_3_11[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 4: RETURN %cl_1_5[3.3,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 20: 
		 21: %self->keywords def_%v_11 %self[2.0,] 	 SYMBOL:	 ARGS:
		 22: %v_11->each def_%v_12 %v_11[2.21,] %self[2.0,2.21,] 	 SYMBOL:	 ARGS:%v_11,
CLOSURE BEGIN: kw[] arr[2.9,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_4_0 
		 2: RECEIVEARG def_kw 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: kw->reversed? def_%cl_4_3 kw[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_4_3[3.1,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "not " def_%cl_4_4 
		 1: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "" def_%cl_4_5 
		 1: COPY TYPE_PASS def_%cl_4_4 %cl_4_5[5.0,] 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: kw->word def_%cl_4_6 kw[2.2,] 	 SYMBOL:	 ARGS:
		 1: %cl_4_4->+ def_%cl_4_7 %cl_4_4[5.1,4.0,] %cl_4_6[6.0,] 	 SYMBOL:	 ARGS:%cl_4_6,
		 2: arr-><< def_%cl_4_8 arr[] %cl_4_7[6.1,] 	 SYMBOL:	 ARGS:%cl_4_7,
		 3: RETURN %cl_4_8[6.2,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_4_9 
		 1: def_%cl_4_10 %cl_4_9[7.0,] 
		 2: RETURN %cl_4_10[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 23: 
		 24: %self->qualifiers def_%v_13 %self[2.0,2.21,] 	 SYMBOL:	 ARGS:
		 25: %v_13->select def_%v_14 %v_13[2.24,] %self[2.0,2.21,2.24,] 	 SYMBOL:	 ARGS:%v_13,
CLOSURE BEGIN: q[] types[2.17,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_5_0 
		 2: RECEIVEARG def_q 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: q->qualifiable_type def_%cl_5_3 q[2.2,] 	 SYMBOL:	 ARGS:
		 2: types->include? def_%cl_5_4 types[] %cl_5_3[3.1,] 	 SYMBOL:	 ARGS:%cl_5_3,
		 3: %cl_5_4->! def_%cl_5_5 %cl_5_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: RETURN %cl_5_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_5_6 
		 1: def_%cl_5_7 %cl_5_6[4.0,] 
		 2: RETURN %cl_5_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 26: %v_14->each def_%v_15 %v_14[2.25,] %self[2.0,2.21,2.24,] 	 SYMBOL:	 ARGS:%v_14,
CLOSURE BEGIN: qualifier[] arr[2.9,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_6_0 
		 2: RECEIVEARG def_qualifier 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: qualifier->reversed? def_%cl_6_3 qualifier[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_6_3[3.1,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "not " def_%cl_6_4 
		 1: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "" def_%cl_6_5 
		 1: COPY TYPE_PASS def_%cl_6_4 %cl_6_5[5.0,] 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: qualifier->qualifiable def_%cl_6_6 qualifier[2.2,] 	 SYMBOL:	 ARGS:
		 1: %cl_6_6->to_s def_%cl_6_7 %cl_6_6[6.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_6_4->+ def_%cl_6_8 %cl_6_4[5.1,4.0,] %cl_6_7[6.1,] 	 SYMBOL:	 ARGS:%cl_6_7,
		 3: arr-><< def_%cl_6_9 arr[] %cl_6_8[6.2,] 	 SYMBOL:	 ARGS:%cl_6_8,
		 4: RETURN %cl_6_9[6.3,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_6_10 
		 1: def_%cl_6_11 %cl_6_10[7.0,] 
		 2: RETURN %cl_6_11[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 27: 
		 28: %self->unread_only? def_%v_16 %self[2.0,2.21,2.24,] 	 SYMBOL:	 ARGS:
		 29: BRANCH %v_16[2.28,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "Unread only" def_%v_17 
		 1: arr-><< def_%v_18 arr[2.9,] %v_17[3.0,] 	 SYMBOL:	 ARGS:%v_17,
		 2: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_18 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral ", " def_%v_19 
		 2: arr->join def_%v_20 arr[2.9,] %v_19[5.1,] 	 SYMBOL:	 ARGS:%v_19,
		 3: (MAXIMUM_NAME_LENGTH) def_%v_21 
		 4: %v_20->truncate def_%v_22 %v_20[5.2,] %v_21[5.3,] 	 SYMBOL:	 ARGS:%v_21,
		 5: RETURN %v_22[5.4,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_include instanceMethod = true
BB 1
	outgoing: 13 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 
		 7: COPY TYPE_PASS def_to_include %v_3[2.6,] 
		 8: 
		 9: %self->qualifiers def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 10: COPY TYPE_StringLiteral "Tag" def_%v_5 
		 11: %v_4->for def_%v_6 %v_4[2.9,] %v_5[2.10,] 	 SYMBOL:	 ARGS:%v_5,
		 12: %v_6->any? def_%v_7 %v_6[2.11,] 	 SYMBOL:	 ARGS:
		 13: BRANCH %v_7[2.12,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: to_include-><< def_%v_8 to_include[2.7,] 	 SYMBOL:tags,	 ARGS:Symbol,
		 1: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_8 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->qualifiers def_%v_9 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "PropertyValue" def_%v_10 
		 3: %v_9->for def_%v_11 %v_9[5.1,] %v_10[5.2,] 	 SYMBOL:	 ARGS:%v_10,
		 4: %v_11->any? def_%v_12 %v_11[5.3,] 	 SYMBOL:	 ARGS:
		 5: BRANCH %v_12[5.4,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: to_include-><< def_%v_13 to_include[2.7,] 	 SYMBOL:task_property_values,	 ARGS:Symbol,
		 1: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_13 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->qualifiers def_%v_14 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "Customer" def_%v_15 
		 3: %v_14->for def_%v_16 %v_14[8.1,] %v_15[8.2,] 	 SYMBOL:	 ARGS:%v_15,
		 4: %v_16->any? def_%v_17 %v_16[8.3,] 	 SYMBOL:	 ARGS:
		 5: BRANCH %v_17[8.4,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: to_include-><< def_%v_18 to_include[2.7,] 	 SYMBOL:customers,	 ARGS:Symbol,
		 1: 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_18 
BB 11
	outgoing: 13 
	datadep: 
	instructions:
		 0: 
		 1: RETURN to_include[2.7,] %self[2.0,] 
BB 13
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_company_from_user instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->user def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->company def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: ATTRASSIGN %self->company %v_4[2.7,] 
		 9: RETURN %v_4[2.7,] %self[2.0,2.6,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = conditions_for_property_qualifiers instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_property_qualifiers 
		 6: 
		 7: property_qualifiers->group_by def_%v_3 property_qualifiers[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:property_qualifiers,
CLOSURE BEGIN: qualifier[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_qualifier 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: qualifier->reversed? def_%cl_1_3 qualifier[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: COPY TYPE_PASS def_property_qualifiers %v_3[2.7,] 
		 9: 
		 10: %v_3->[] def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:Boolean,
		 11: %self->simple_conditions_for_property_qualifiers def_%v_5 %self[2.0,] %v_4[2.10,] 	 SYMBOL:	 ARGS:%v_4,Boolean,
		 12: property_qualifiers->[] def_%v_6 property_qualifiers[2.5,2.7,2.8,] 	 SYMBOL:	 ARGS:Boolean,
		 13: %self->simple_conditions_for_property_qualifiers def_%v_7 %self[2.0,2.11,] %v_6[2.12,] 	 SYMBOL:	 ARGS:%v_6,Boolean,
		 14: %v_5->+ def_%v_8 %v_5[2.11,] %v_7[2.13,] 	 SYMBOL:	 ARGS:%v_7,
		 15: RETURN %v_8[2.14,] %self[2.0,2.11,2.13,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = simple_conditions_for_property_qualifiers instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_property_qualifiers 
		 6: RECEIVEARG def_reverse 
		 7: 
		 8: property_qualifiers->nil? def_%v_3 property_qualifiers[2.5,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %v_3[2.8,] 
BB 3
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_4 
		 1: RETURN %v_4[3.0,] %self[2.0,] 
BB 4
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: COPY TYPE_StringLiteral "task_property_values.property_value_id" def_%v_6 
		 3: COPY TYPE_PASS def_name %v_6[4.2,] 
		 4: 
		 5: property_qualifiers->group_by def_%v_7 property_qualifiers[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:property_qualifiers,
CLOSURE BEGIN: q[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_q 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: q->qualifiable def_%cl_1_3 q[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->property def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 6: COPY TYPE_PASS def_grouped %v_7[4.5,] 
		 7: 
		 8: COPY TYPE_Array def_%v_8 
		 9: COPY TYPE_PASS def_res %v_8[4.8,] 
		 10: 
		 11: %v_7->each def_%v_9 %v_7[4.5,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_7,
CLOSURE BEGIN: qualifiers[] %self[2.0,] q[4.5,] reverse[2.6,] ids[] property[] name[4.3,] res[4.9,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_property 
		 3: RECEIVEARG def_qualifiers 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: qualifiers->map def_%cl_2_3 qualifiers[2.3,] %self[2.0,] 	 SYMBOL:	 ARGS:qualifiers,
CLOSURE BEGIN: q[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_q 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: q->qualifiable def_%cl_3_3 q[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_3_3->id def_%cl_3_4 %cl_3_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: RETURN %cl_3_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_5 
		 1: def_%cl_3_6 %cl_3_5[4.0,] 
		 2: RETURN %cl_3_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: COPY TYPE_PASS def_ids %cl_2_3[3.1,] 
		 3: 
		 4: BRANCH reverse[] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "(" def_%cl_2_4 
		 2: COPY TYPE_StringLiteral " NOT IN (" def_%cl_2_5 
		 3: COPY TYPE_StringLiteral ", " def_%cl_2_6 
		 4: ids->join def_%cl_2_7 ids[3.2,] %cl_2_6[4.3,] 	 SYMBOL:	 ARGS:%cl_2_6,
		 5: COPY TYPE_StringLiteral ") AND task_property_values.property_id = " def_%cl_2_8 
		 6: property->id def_%cl_2_9 property[2.2,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral ")" def_%cl_2_10 
		 8: BUILDSTRING def_%cl_2_11 %cl_2_4[4.1,] name[] %cl_2_5[4.2,] %cl_2_7[4.4,] %cl_2_8[4.5,] %cl_2_9[4.6,] %cl_2_10[4.7,] 
		 9: res-><< def_%cl_2_12 res[] %cl_2_11[4.8,] 	 SYMBOL:	 ARGS:%cl_2_11,
		 10: 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "(" def_%cl_2_13 
		 2: COPY TYPE_StringLiteral " IN (" def_%cl_2_14 
		 3: COPY TYPE_StringLiteral ", " def_%cl_2_15 
		 4: ids->join def_%cl_2_16 ids[3.2,] %cl_2_15[5.3,] 	 SYMBOL:	 ARGS:%cl_2_15,
		 5: COPY TYPE_StringLiteral ") AND task_property_values.property_id = " def_%cl_2_17 
		 6: property->id def_%cl_2_18 property[2.2,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral ")" def_%cl_2_19 
		 8: BUILDSTRING def_%cl_2_20 %cl_2_13[5.1,] name[] %cl_2_14[5.2,] %cl_2_16[5.4,] %cl_2_17[5.5,] %cl_2_18[5.6,] %cl_2_19[5.7,] 
		 9: res-><< def_%cl_2_21 res[] %cl_2_20[5.8,] 	 SYMBOL:	 ARGS:%cl_2_20,
		 10: RETURN %cl_2_21[5.9,] %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_2_12[4.9,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_2_22 
		 1: def_%cl_2_23 %cl_2_22[7.0,] 
		 2: RETURN %cl_2_23[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: qualifiers[2.3,] ids[3.2,] 
		 12: 
		 13: RETURN res[4.9,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = conditions_for_standard_qualifiers instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_standard_qualifiers 
		 6: 
		 7: standard_qualifiers->group_by def_%v_3 standard_qualifiers[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:standard_qualifiers,
CLOSURE BEGIN: qualifier[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_qualifier 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: qualifier->reversed? def_%cl_1_3 qualifier[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: COPY TYPE_PASS def_standard_qualifiers %v_3[2.7,] 
		 9: 
		 10: %v_3->[] def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:Boolean,
		 11: %self->simple_conditions_for_standard_qualifiers def_%v_5 %self[2.0,] %v_4[2.10,] 	 SYMBOL:	 ARGS:%v_4,
		 12: standard_qualifiers->[] def_%v_6 standard_qualifiers[2.5,2.7,2.8,] 	 SYMBOL:	 ARGS:Boolean,
		 13: %self->simple_conditions_for_standard_qualifiers def_%v_7 %self[2.0,2.11,] %v_6[2.12,] 	 SYMBOL:	 ARGS:%v_6,
		 14: %v_7->map def_%v_8 %v_7[2.13,] %self[2.0,2.11,2.13,] 	 SYMBOL:	 ARGS:%v_7,
CLOSURE BEGIN: sql[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_sql 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "not " def_%cl_2_3 
		 2: %cl_2_3->+ def_%cl_2_4 %cl_2_3[3.1,] sql[2.2,] 	 SYMBOL:	 ARGS:sql,
		 3: RETURN %cl_2_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 15: %v_5->+ def_%v_9 %v_5[2.11,] %v_8[2.14,] 	 SYMBOL:	 ARGS:%v_8,
		 16: RETURN %v_9[2.15,] %self[2.0,2.11,2.13,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = simple_conditions_for_standard_qualifiers instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_standard_qualifiers 
		 6: 
		 7: standard_qualifiers->nil? def_%v_3 standard_qualifiers[2.5,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_4 
		 1: RETURN %v_4[3.0,] %self[2.0,] 
BB 4
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: COPY TYPE_Array def_%v_6 
		 3: COPY TYPE_PASS def_res %v_6[4.2,] 
		 4: 
		 5: standard_qualifiers->group_by def_%v_7 standard_qualifiers[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:standard_qualifiers,
CLOSURE BEGIN: q[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_q 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: q->qualifiable_type def_%cl_1_3 q[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 6: COPY TYPE_PASS def_grouped_conditions %v_7[4.5,] 
		 7: 
		 8: %v_7->each def_%v_8 %v_7[4.5,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_7,
CLOSURE BEGIN: %self[2.0,] type[] values[] v[] name[] res[4.3,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_type 
		 3: RECEIVEARG def_values 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->column_name_for def_%cl_2_3 %self[2.0,] type[2.2,] 	 SYMBOL:	 ARGS:type,
		 2: COPY TYPE_PASS def_name %cl_2_3[3.1,] 
		 3: 
		 4: values->map def_%cl_2_4 values[2.3,] %self[3.1,2.0,] 	 SYMBOL:	 ARGS:values,
CLOSURE BEGIN: v[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_v 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: v->qualifiable_id def_%cl_3_3 v[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_3_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_4 
		 1: def_%cl_3_5 %cl_3_4[4.0,] 
		 2: RETURN %cl_3_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 5: COPY TYPE_PASS def_ids %cl_2_4[3.4,] 
		 6: 
		 7: COPY TYPE_StringLiteral " in (" def_%cl_2_5 
		 8: COPY TYPE_StringLiteral "," def_%cl_2_6 
		 9: %cl_2_4->join def_%cl_2_7 %cl_2_4[3.4,] %cl_2_6[3.8,] 	 SYMBOL:	 ARGS:%cl_2_6,
		 10: COPY TYPE_StringLiteral ")" def_%cl_2_8 
		 11: BUILDSTRING def_%cl_2_9 name[3.2,] %cl_2_5[3.7,] %cl_2_7[3.9,] %cl_2_8[3.10,] 
		 12: res-><< def_%cl_2_10 res[] %cl_2_9[3.11,] 	 SYMBOL:	 ARGS:%cl_2_9,
		 13: RETURN %cl_2_10[3.12,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_11 
		 1: def_%cl_2_12 %cl_2_11[4.0,] 
		 2: RETURN %cl_2_12[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: values[2.3,] name[3.2,] ids[3.5,] 
		 9: 
		 10: RETURN res[4.3,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = conditions_for_keywords instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->keywords def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->group_by def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: keyword[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_keyword 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: keyword->reversed? def_%cl_1_3 keyword[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: COPY TYPE_PASS def_kws %v_4[2.7,] 
		 9: 
		 10: %v_4->[] def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:Boolean,
		 11: %self->simple_conditions_for_keywords def_%v_6 %self[2.0,2.6,] %v_5[2.10,] 	 SYMBOL:	 ARGS:%v_5,
		 12: kws->[] def_%v_7 kws[2.8,] 	 SYMBOL:	 ARGS:Boolean,
		 13: %self->simple_conditions_for_keywords def_%v_8 %self[2.0,2.6,2.11,] %v_7[2.12,] 	 SYMBOL:	 ARGS:%v_7,
		 14: %self->compose_sql def_%v_9 %self[2.0,2.6,2.11,2.13,] %v_6[2.11,] %v_8[2.13,] 	 SYMBOL:	 ARGS:%v_6,%v_8,
		 15: RETURN %v_9[2.14,] %self[2.0,2.6,2.11,2.13,2.14,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = simple_conditions_for_keywords instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_keywords_arg 
		 6: 
		 7: keywords_arg->nil? def_%v_3 keywords_arg[2.5,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: COPY TYPE_Array def_%v_5 
		 3: COPY TYPE_PASS def_sql %v_5[4.2,] 
		 4: 
		 5: COPY TYPE_Array def_%v_6 
		 6: COPY TYPE_PASS def_params %v_6[4.5,] 
		 7: 
		 8: keywords_arg->each def_%v_7 keywords_arg[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:keywords_arg,
CLOSURE BEGIN: sql[4.3,] %self[2.0,] kw[] params[4.6,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_kw 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "lower(tasks.name) like ?" def_%cl_1_3 
		 2: COPY TYPE_PASS def_str %cl_1_3[3.1,] 
		 3: 
		 4: COPY TYPE_StringLiteral " or lower(tasks.description) like ?" def_%cl_1_4 
		 5: %cl_1_3->+ def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.4,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 6: COPY TYPE_PASS def_str %cl_1_5[3.5,] 
		 7: 
		 8: COPY TYPE_StringLiteral "coalesce((" def_%cl_1_6 
		 9: COPY TYPE_StringLiteral "), FALSE)" def_%cl_1_7 
		 10: BUILDSTRING def_%cl_1_8 %cl_1_6[3.8,] %cl_1_5[3.5,] %cl_1_7[3.9,] 
		 11: sql-><< def_%cl_1_9 sql[] %cl_1_8[3.10,] 	 SYMBOL:	 ARGS:%cl_1_8,
		 12: 
		 13: CONSTANT def_%cl_1_10 %self[2.0,] 	 SYMBOL:	 ARGS:
CLOSURE BEGIN: kw[2.2,] params[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "%" def_%cl_2_3 
		 2: kw->word def_%cl_2_4 kw[] 	 SYMBOL:	 ARGS:
		 3: %cl_2_4->downcase def_%cl_2_5 %cl_2_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_StringLiteral "%" def_%cl_2_6 
		 5: BUILDSTRING def_%cl_2_7 %cl_2_3[3.1,] %cl_2_5[3.3,] %cl_2_6[3.4,] 
		 6: params-><< def_%cl_2_8 params[] %cl_2_7[3.5,] 	 SYMBOL:	 ARGS:%cl_2_7,
		 7: RETURN %cl_2_8[3.6,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_9 
		 1: def_%cl_2_10 %cl_2_9[4.0,] 
		 2: RETURN %cl_2_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 14: RETURN %cl_1_10[3.13,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_11 
		 1: def_%cl_1_12 %cl_1_11[4.0,] 
		 2: RETURN %cl_1_12[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: str[3.2,3.6,] 
		 9: 
		 10: COPY TYPE_StringLiteral " or " def_%v_8 
		 11: sql->join def_%v_9 sql[4.3,] %v_8[4.10,] 	 SYMBOL:	 ARGS:%v_8,
		 12: COPY TYPE_PASS def_sql %v_9[4.11,] 
		 13: 
		 14: (TaskFilter) def_%v_10 
		 15: COPY TYPE_Array def_%v_11 %v_9[4.11,] 
		 16: %v_11->+ def_%v_12 %v_11[4.15,] params[4.6,] 	 SYMBOL:	 ARGS:params,
		 17: %v_10->send def_%v_13 %v_10[4.14,] %v_12[4.16,] 	 SYMBOL:sanitize_sql_array,	 ARGS:Symbol,%v_12,
		 18: COPY TYPE_PASS def_res %v_13[4.17,] 
		 19: 
		 20: %v_13->blank? def_%v_14 %v_13[4.17,] 	 SYMBOL:	 ARGS:
		 21: %v_14->! def_%v_15 %v_14[4.20,] 	 SYMBOL:	 ARGS:
		 22: BRANCH %v_15[4.21,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "(" def_%v_16 
		 1: COPY TYPE_StringLiteral ")" def_%v_17 
		 2: BUILDSTRING def_%v_18 %v_16[6.0,] res[4.18,] %v_17[6.1,] 
		 3: RETURN %v_18[6.2,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = conditions_for_status_qualifiers instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_status_qualifiers 
		 6: 
		 7: status_qualifiers->group_by def_%v_3 status_qualifiers[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:status_qualifiers,
CLOSURE BEGIN: qualifier[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_qualifier 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: qualifier->reversed? def_%cl_1_3 qualifier[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: COPY TYPE_PASS def_status_qualifiers %v_3[2.7,] 
		 9: 
		 10: %v_3->[] def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:Boolean,
		 11: %self->simple_conditions_for_status_qualifiers def_%v_5 %self[2.0,] %v_4[2.10,] 	 SYMBOL:	 ARGS:%v_4,
		 12: status_qualifiers->[] def_%v_6 status_qualifiers[2.5,2.7,2.8,] 	 SYMBOL:	 ARGS:Boolean,
		 13: %self->simple_conditions_for_status_qualifiers def_%v_7 %self[2.0,2.11,] %v_6[2.12,] 	 SYMBOL:	 ARGS:%v_6,
		 14: %self->compose_sql def_%v_8 %self[2.0,2.11,2.13,] %v_5[2.11,] %v_7[2.13,] 	 SYMBOL:	 ARGS:%v_5,%v_7,
		 15: RETURN %v_8[2.14,] %self[2.0,2.11,2.13,2.14,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = simple_conditions_for_status_qualifiers instanceMethod = true
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_status_qualifiers 
		 6: 
		 7: status_qualifiers->nil? def_%v_3 status_qualifiers[2.5,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: COPY TYPE_Array def_%v_5 
		 3: COPY TYPE_PASS def_old_status_ids %v_5[4.2,] 
		 4: 
		 5: %self->company def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 6: BRANCH %v_6[4.5,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %self->user def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_7->company def_%v_8 %v_7[6.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_6 %v_8[6.1,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_c %v_6[6.2,4.5,] 
		 1: 
		 2: status_qualifiers->each def_%v_9 status_qualifiers[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:status_qualifiers,
CLOSURE BEGIN: q[] c[7.0,] status[] old_status_ids[4.3,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_q 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: q->qualifiable def_%cl_1_3 q[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_status %cl_1_3[3.1,] 
		 3: 
		 4: c->statuses def_%cl_1_4 c[] 	 SYMBOL:	 ARGS:
		 5: %cl_1_4->index def_%cl_1_5 %cl_1_4[3.4,] status[3.2,] 	 SYMBOL:	 ARGS:status,
		 6: COPY TYPE_PASS def_old_status %cl_1_5[3.5,] 
		 7: 
		 8: old_status_ids-><< def_%cl_1_6 old_status_ids[] %cl_1_5[3.5,] 	 SYMBOL:	 ARGS:old_status,
		 9: RETURN %cl_1_6[3.8,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: old_status[3.6,] status[3.2,] 
		 3: 
		 4: old_status_ids->compact def_%v_10 old_status_ids[4.3,] 	 SYMBOL:	 ARGS:
		 5: COPY TYPE_StringLiteral "," def_%v_11 
		 6: %v_10->join def_%v_12 %v_10[7.4,] %v_11[7.5,] 	 SYMBOL:	 ARGS:%v_11,
		 7: COPY TYPE_PASS def_old_status_ids %v_12[7.6,] 
		 8: 
		 9: %v_12->blank? def_%v_13 %v_12[7.6,] 	 SYMBOL:	 ARGS:
		 10: %v_13->! def_%v_14 %v_13[7.9,] 	 SYMBOL:	 ARGS:
		 11: BRANCH %v_14[7.10,] 
BB 8
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "tasks.status in (" def_%v_15 
		 1: COPY TYPE_StringLiteral ")" def_%v_16 
		 2: BUILDSTRING def_%v_17 %v_15[8.0,] old_status_ids[7.7,] %v_16[8.1,] 
		 3: RETURN %v_17[8.2,] %self[2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = conditions_for_customer_qualifiers instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_customer_qualifiers 
		 6: 
		 7: customer_qualifiers->group_by def_%v_3 customer_qualifiers[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:customer_qualifiers,
CLOSURE BEGIN: qualifier[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_qualifier 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: qualifier->reversed? def_%cl_1_3 qualifier[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: COPY TYPE_PASS def_customer_qualifiers %v_3[2.7,] 
		 9: 
		 10: %v_3->[] def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:Boolean,
		 11: %self->simple_conditions_for_customer_qualifiers def_%v_5 %self[2.0,] %v_4[2.10,] 	 SYMBOL:	 ARGS:%v_4,
		 12: customer_qualifiers->[] def_%v_6 customer_qualifiers[2.5,2.7,2.8,] 	 SYMBOL:	 ARGS:Boolean,
		 13: %self->simple_conditions_for_customer_qualifiers def_%v_7 %self[2.0,2.11,] %v_6[2.12,] 	 SYMBOL:	 ARGS:%v_6,
		 14: %self->compose_sql def_%v_8 %self[2.0,2.11,2.13,] %v_5[2.11,] %v_7[2.13,] 	 SYMBOL:	 ARGS:%v_5,%v_7,
		 15: RETURN %v_8[2.14,] %self[2.0,2.11,2.13,2.14,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = simple_conditions_for_customer_qualifiers instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_customer_qualifiers 
		 6: 
		 7: customer_qualifiers->nil? def_%v_3 customer_qualifiers[2.5,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: customer_qualifiers->map def_%v_5 customer_qualifiers[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:customer_qualifiers,
CLOSURE BEGIN: q[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_q 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: q->qualifiable def_%cl_1_3 q[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->id def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: COPY TYPE_PASS def_ids %v_5[4.2,] 
		 4: 
		 5: COPY TYPE_StringLiteral "," def_%v_6 
		 6: %v_5->join def_%v_7 %v_5[4.2,] %v_6[4.5,] 	 SYMBOL:	 ARGS:%v_6,
		 7: COPY TYPE_PASS def_ids %v_7[4.6,] 
		 8: 
		 9: %v_7->blank? def_%v_8 %v_7[4.6,] 	 SYMBOL:	 ARGS:
		 10: %v_8->! def_%v_9 %v_8[4.9,] 	 SYMBOL:	 ARGS:
		 11: BRANCH %v_9[4.10,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "projects.customer_id in (" def_%v_10 
		 2: COPY TYPE_StringLiteral ")" def_%v_11 
		 3: BUILDSTRING def_%v_12 %v_10[6.1,] ids[4.3,4.7,] %v_11[6.2,] 
		 4: COPY TYPE_PASS def_res %v_12[6.3,] 
		 5: 
		 6: COPY TYPE_StringLiteral " or coalesce(task_customers.customer_id in (" def_%v_13 
		 7: COPY TYPE_StringLiteral "),0)" def_%v_14 
		 8: BUILDSTRING def_%v_15 %v_13[6.6,] ids[4.3,4.7,] %v_14[6.7,] 
		 9: %v_12->+ def_%v_16 %v_12[6.3,] %v_15[6.8,] 	 SYMBOL:	 ARGS:%v_15,
		 10: COPY TYPE_PASS def_res %v_16[6.9,] 
		 11: 
		 12: COPY TYPE_StringLiteral "(" def_%v_17 
		 13: COPY TYPE_StringLiteral ")" def_%v_18 
		 14: BUILDSTRING def_%v_19 %v_17[6.12,] %v_16[6.9,] %v_18[6.13,] 
		 15: RETURN %v_19[6.14,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = conditions_for_time_qualifiers instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_time_qualifiers 
		 6: 
		 7: time_qualifiers->group_by def_%v_3 time_qualifiers[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:time_qualifiers,
CLOSURE BEGIN: qualifier[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_qualifier 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: qualifier->reversed? def_%cl_1_3 qualifier[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: COPY TYPE_PASS def_time_qualifiers %v_3[2.7,] 
		 9: 
		 10: %v_3->[] def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:Boolean,
		 11: %self->simple_conditions_for_time_qualifiers def_%v_5 %self[2.0,] %v_4[2.10,] 	 SYMBOL:	 ARGS:%v_4,
		 12: time_qualifiers->[] def_%v_6 time_qualifiers[2.5,2.7,2.8,] 	 SYMBOL:	 ARGS:Boolean,
		 13: %self->simple_conditions_for_time_qualifiers def_%v_7 %self[2.0,2.11,] %v_6[2.12,] 	 SYMBOL:	 ARGS:%v_6,
		 14: %self->compose_sql def_%v_8 %self[2.0,2.11,2.13,] %v_5[2.11,] %v_7[2.13,] 	 SYMBOL:	 ARGS:%v_5,%v_7,
		 15: RETURN %v_8[2.14,] %self[2.0,2.11,2.13,2.14,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = simple_conditions_for_time_qualifiers instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_time_qualifiers 
		 6: 
		 7: time_qualifiers->nil? def_%v_3 time_qualifiers[2.5,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: time_qualifiers->empty? def_%v_4 time_qualifiers[2.5,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_3 %v_4[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: COPY TYPE_Array def_%v_6 
		 3: COPY TYPE_PASS def_res %v_6[6.2,] 
		 4: 
		 5: time_qualifiers->each def_%v_7 time_qualifiers[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:time_qualifiers,
CLOSURE BEGIN: tq[] column[] start_time[] end_time[] sql[] res[6.3,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_tq 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: tq->qualifiable def_%cl_1_3 tq[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->start_time def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_PASS def_start_time %cl_1_4[3.2,] 
		 4: 
		 5: tq->qualifiable def_%cl_1_5 tq[3.1,2.2,] 	 SYMBOL:	 ARGS:
		 6: %cl_1_5->end_time def_%cl_1_6 %cl_1_5[3.5,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_PASS def_end_time %cl_1_6[3.6,] 
		 8: 
		 9: tq->qualifiable_column def_%cl_1_7 tq[3.1,3.5,2.2,] 	 SYMBOL:	 ARGS:
		 10: COPY TYPE_PASS def_column %cl_1_7[3.9,] 
		 11: 
		 12: (TaskRecord) def_%cl_1_8 
		 13: %cl_1_8->connection def_%cl_1_9 %cl_1_8[3.12,] 	 SYMBOL:	 ARGS:
		 14: %cl_1_9->quote_column_name def_%cl_1_10 %cl_1_9[3.13,] column[3.10,] 	 SYMBOL:	 ARGS:column,
		 15: COPY TYPE_PASS def_column %cl_1_10[3.14,] 
		 16: 
		 17: COPY TYPE_StringLiteral "tasks." def_%cl_1_11 
		 18: COPY TYPE_StringLiteral " >= '" def_%cl_1_12 
		 19: start_time->to_formatted_s def_%cl_1_13 start_time[3.3,] 	 SYMBOL:db,	 ARGS:Symbol,
		 20: COPY TYPE_StringLiteral "'" def_%cl_1_14 
		 21: BUILDSTRING def_%cl_1_15 %cl_1_11[3.17,] column[3.10,3.15,] %cl_1_12[3.18,] %cl_1_13[3.19,] %cl_1_14[3.20,] 
		 22: COPY TYPE_PASS def_sql %cl_1_15[3.21,] 
		 23: 
		 24: COPY TYPE_StringLiteral " and tasks." def_%cl_1_16 
		 25: COPY TYPE_StringLiteral " < '" def_%cl_1_17 
		 26: end_time->to_formatted_s def_%cl_1_18 end_time[3.7,] 	 SYMBOL:db,	 ARGS:Symbol,
		 27: COPY TYPE_StringLiteral "'" def_%cl_1_19 
		 28: BUILDSTRING def_%cl_1_20 %cl_1_16[3.24,] column[3.10,3.15,] %cl_1_17[3.25,] %cl_1_18[3.26,] %cl_1_19[3.27,] 
		 29: sql->+ def_%cl_1_21 sql[3.22,] %cl_1_20[3.28,] 	 SYMBOL:	 ARGS:%cl_1_20,
		 30: COPY TYPE_PASS def_sql %cl_1_21[3.29,] 
		 31: 
		 32: COPY TYPE_StringLiteral "coalesce((" def_%cl_1_22 
		 33: COPY TYPE_StringLiteral "),0)" def_%cl_1_23 
		 34: BUILDSTRING def_%cl_1_24 %cl_1_22[3.32,] %cl_1_21[3.29,] %cl_1_23[3.33,] 
		 35: res-><< def_%cl_1_25 res[] %cl_1_24[3.34,] 	 SYMBOL:	 ARGS:%cl_1_24,
		 36: RETURN %cl_1_25[3.35,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_26 
		 1: def_%cl_1_27 %cl_1_26[4.0,] 
		 2: RETURN %cl_1_27[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: start_time[3.3,] end_time[3.7,] column[3.10,3.15,] sql[3.22,3.30,] 
		 6: 
		 7: COPY TYPE_StringLiteral " or " def_%v_8 
		 8: res->join def_%v_9 res[6.3,] %v_8[6.7,] 	 SYMBOL:	 ARGS:%v_8,
		 9: COPY TYPE_PASS def_res %v_9[6.8,] 
		 10: 
		 11: COPY TYPE_StringLiteral "(" def_%v_10 
		 12: COPY TYPE_StringLiteral ")" def_%v_11 
		 13: BUILDSTRING def_%v_12 %v_10[6.11,] %v_9[6.8,] %v_11[6.12,] 
		 14: RETURN %v_12[6.13,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = column_name_for instanceMethod = true
BB 1
	outgoing: 18 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_class_type 
		 6: 
		 7: COPY TYPE_StringLiteral "User" def_%v_3 
		 8: class_type->== def_%v_4 class_type[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 18 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "task_users.type= 'TaskOwner' AND task_users.user_id" def_%v_5 
		 2: RETURN %v_5[3.1,] %self[2.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "Project" def_%v_7 
		 2: class_type->== def_%v_8 class_type[2.5,] %v_7[4.1,] 	 SYMBOL:	 ARGS:%v_7,
		 3: BRANCH %v_8[4.2,] 
BB 5
	outgoing: 18 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "tasks.project_id" def_%v_9 
		 2: RETURN %v_9[5.1,] %self[2.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "Task" def_%v_11 
		 2: class_type->== def_%v_12 class_type[2.5,] %v_11[6.1,] 	 SYMBOL:	 ARGS:%v_11,
		 3: BRANCH %v_12[6.2,] 
BB 7
	outgoing: 18 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "tasks.id" def_%v_13 
		 2: RETURN %v_13[7.1,] %self[2.0,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "Customer" def_%v_15 
		 2: class_type->== def_%v_16 class_type[2.5,] %v_15[8.1,] 	 SYMBOL:	 ARGS:%v_15,
		 3: BRANCH %v_16[8.2,] 
BB 9
	outgoing: 18 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "projects.customer_id" def_%v_17 
		 2: RETURN %v_17[9.1,] %self[2.0,] 
BB 10
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "Company" def_%v_19 
		 2: class_type->== def_%v_20 class_type[2.5,] %v_19[10.1,] 	 SYMBOL:	 ARGS:%v_19,
		 3: BRANCH %v_20[10.2,] 
BB 11
	outgoing: 18 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "tasks.company_id" def_%v_21 
		 2: RETURN %v_21[11.1,] %self[2.0,] 
BB 12
	outgoing: 13 14 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "Milestone" def_%v_23 
		 2: class_type->== def_%v_24 class_type[2.5,] %v_23[12.1,] 	 SYMBOL:	 ARGS:%v_23,
		 3: BRANCH %v_24[12.2,] 
BB 13
	outgoing: 18 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "tasks.milestone_id" def_%v_25 
		 2: RETURN %v_25[13.1,] %self[2.0,] 
BB 14
	outgoing: 15 16 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "Tag" def_%v_27 
		 2: class_type->== def_%v_28 class_type[2.5,] %v_27[14.1,] 	 SYMBOL:	 ARGS:%v_27,
		 3: BRANCH %v_28[14.2,] 
BB 15
	outgoing: 18 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "task_tags.tag_id" def_%v_29 
		 2: RETURN %v_29[15.1,] %self[2.0,] 
BB 16
	outgoing: 18 
	datadep: 
	instructions:
		 0: 
		 1: class_type->downcase def_%v_31 class_type[2.5,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "_id" def_%v_32 
		 3: BUILDSTRING def_%v_33 %v_31[16.1,] %v_32[16.2,] 
		 4: RETURN %v_33[16.3,] %self[2.0,] 
BB 18
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = unread_conditions instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: RECEIVECONSTARG def_include_orphaned 
		 7: include_orphaned[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Boolean def_include_orphaned 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%v_3 
		 2: COPY TYPE_PASS def_count_conditions %v_3[4.1,] 
		 3: 
		 4: COPY TYPE_StringLiteral "(task_users.unread = ? and task_users.user_id = " def_%v_4 
		 5: user->id def_%v_5 user[2.5,] 	 SYMBOL:	 ARGS:
		 6: COPY TYPE_StringLiteral ")" def_%v_6 
		 7: BUILDSTRING def_%v_7 %v_4[4.4,] %v_5[4.5,] %v_6[4.6,] 
		 8: count_conditions-><< def_%v_8 count_conditions[4.2,] %v_7[4.7,] 	 SYMBOL:	 ARGS:%v_7,
		 9: 
		 10: BRANCH include_orphaned[3.0,2.6,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "(task_users.id is null)" def_%v_9 
		 1: count_conditions-><< def_%v_10 count_conditions[4.2,] %v_9[5.0,] 	 SYMBOL:	 ARGS:%v_9,
		 2: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_10 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral " or " def_%v_11 
		 2: count_conditions->join def_%v_12 count_conditions[4.2,] %v_11[7.1,] 	 SYMBOL:	 ARGS:%v_11,
		 3: COPY TYPE_PASS def_sql %v_12[7.2,] 
		 4: 
		 5: COPY TYPE_Array def_%v_13 
		 6: COPY TYPE_PASS def_params %v_13[7.5,] 
		 7: 
		 8: (TaskFilter) def_%v_14 
		 9: COPY TYPE_Array def_%v_15 %v_12[7.2,] 
		 10: %v_15->+ def_%v_16 %v_15[7.9,] %v_13[7.5,] 	 SYMBOL:	 ARGS:params,
		 11: %v_14->send def_%v_17 %v_14[7.8,] %v_16[7.10,] 	 SYMBOL:sanitize_sql_array,	 ARGS:Symbol,%v_16,
		 12: COPY TYPE_PASS def_sql %v_17[7.11,] 
		 13: 
		 14: COPY TYPE_StringLiteral "(" def_%v_18 
		 15: COPY TYPE_StringLiteral ")" def_%v_19 
		 16: BUILDSTRING def_%v_20 %v_18[7.14,] %v_17[7.11,] %v_19[7.15,] 
		 17: RETURN %v_20[7.16,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = compose_sql instanceMethod = true
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_arg1 
		 6: RECEIVEARG def_arg2 
		 7: 
		 8: arg1->blank? def_%v_3 arg1[2.5,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %v_3[2.8,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: 
		 1: arg2->blank? def_%v_4 arg2[2.6,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_4[3.1,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "" def_%v_5 
		 2: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "( not " def_%v_6 
		 2: COPY TYPE_StringLiteral " )" def_%v_7 
		 3: BUILDSTRING def_%v_8 %v_6[5.1,] arg2[2.6,] %v_7[5.2,] 
		 4: COPY TYPE_PASS def_%v_5 %v_8[5.3,] 
BB 6
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %v_5[5.4,4.1,] %self[2.0,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: arg2->blank? def_%v_9 arg2[2.6,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_9[7.1,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_10 arg1[2.5,] 
		 2: 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "(" def_%v_11 
		 2: COPY TYPE_StringLiteral " and not " def_%v_12 
		 3: COPY TYPE_StringLiteral ")" def_%v_13 
		 4: BUILDSTRING def_%v_14 %v_11[9.1,] arg1[2.5,] %v_12[9.2,] arg2[2.6,] %v_13[9.3,] 
		 5: COPY TYPE_PASS def_%v_10 %v_14[9.4,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %v_10[9.5,8.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = parse_fullcalendar_params instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_calendar_params 
		 6: 
		 7: calendar_params->[] def_%v_3 calendar_params[2.5,] 	 SYMBOL:end,	 ARGS:Symbol,
		 8: %v_3->blank? def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_4->! def_%v_5 %v_4[2.8,] 	 SYMBOL:	 ARGS:
		 10: BRANCH %v_5[2.9,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: calendar_params->[] def_%v_6 calendar_params[2.5,] 	 SYMBOL:start,	 ARGS:Symbol,
		 1: %v_6->blank? def_%v_7 %v_6[3.0,] 	 SYMBOL:	 ARGS:
		 2: %v_7->! def_%v_8 %v_7[3.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_PASS def_%v_5 %v_8[3.2,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_5[3.3,2.9,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: (TaskFilter) def_%v_9 
		 2: COPY TYPE_StringLiteral "((tasks.estimate_date IS NULL AND milestones.due_at < ? AND milestones.due_at > ?) OR (tasks.estimate_date IS NOT NULL AND tasks.estimate_date < ? AND tasks.estimate_date > ?))" def_%v_10 
		 3: (Time) def_%v_11 
		 4: calendar_params->[] def_%v_12 calendar_params[2.5,] 	 SYMBOL:end,	 ARGS:Symbol,
		 5: %v_12->to_i def_%v_13 %v_12[5.4,] 	 SYMBOL:	 ARGS:
		 6: %v_11->at def_%v_14 %v_11[5.3,] %v_13[5.5,] 	 SYMBOL:	 ARGS:%v_13,
		 7: (Time) def_%v_15 
		 8: calendar_params->[] def_%v_16 calendar_params[5.4,2.5,] 	 SYMBOL:start,	 ARGS:Symbol,
		 9: %v_16->to_i def_%v_17 %v_16[5.8,] 	 SYMBOL:	 ARGS:
		 10: %v_15->at def_%v_18 %v_15[5.7,] %v_17[5.9,] 	 SYMBOL:	 ARGS:%v_17,
		 11: (Time) def_%v_19 
		 12: calendar_params->[] def_%v_20 calendar_params[5.4,5.8,2.5,] 	 SYMBOL:end,	 ARGS:Symbol,
		 13: %v_20->to_i def_%v_21 %v_20[5.12,] 	 SYMBOL:	 ARGS:
		 14: %v_19->at def_%v_22 %v_19[5.11,] %v_21[5.13,] 	 SYMBOL:	 ARGS:%v_21,
		 15: (Time) def_%v_23 
		 16: calendar_params->[] def_%v_24 calendar_params[5.4,5.8,5.12,2.5,] 	 SYMBOL:start,	 ARGS:Symbol,
		 17: %v_24->to_i def_%v_25 %v_24[5.16,] 	 SYMBOL:	 ARGS:
		 18: %v_23->at def_%v_26 %v_23[5.15,] %v_25[5.17,] 	 SYMBOL:	 ARGS:%v_25,
		 19: COPY TYPE_Array def_%v_27 %v_10[5.2,] %v_14[5.6,] %v_18[5.10,] %v_22[5.14,] %v_26[5.18,] 
		 20: %v_9->send def_%v_28 %v_9[5.1,] %v_27[5.19,] 	 SYMBOL:sanitize_sql_array,	 ARGS:Symbol,%v_27,
		 21: RETURN %v_28[5.20,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_task_filter_status instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->task_filter_users def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %self->user_id def_%v_4 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 8: HASH-user_id- def_%v_5 %v_4[2.7,] 
		 9: %v_3->create def_%v_6 %v_3[2.6,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_5,
		 10: RETURN %v_6[2.9,] %self[2.0,2.6,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

