SET IRMethod, name = render_tree instanceMethod = true
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_tree 
		 6: 
		 7: tree->trees def_%v_3 tree[2.5,] 	 SYMBOL:	 ARGS:
		 8: tree->blobs def_%v_4 tree[2.5,2.7,] 	 SYMBOL:	 ARGS:
		 9: tree->submodules def_%v_5 tree[2.5,2.7,2.8,] 	 SYMBOL:	 ARGS:
		 10: COPY TYPE_Array def_%v_6 %v_3[2.7,] %v_4[2.8,] %v_5[2.9,] 
		 11: COPY TYPE_PASS def_%v_7 %v_3[2.7,] 
		 12: COPY TYPE_PASS def_%v_8 %v_4[2.8,] 
		 13: COPY TYPE_PASS def_%v_9 %v_5[2.9,] 
		 14: COPY TYPE_PASS def_folders %v_3[2.7,] 
		 15: COPY TYPE_PASS def_files %v_4[2.8,] 
		 16: COPY TYPE_PASS def_submodules %v_5[2.9,] 
		 17: 
		 18: COPY TYPE_StringLiteral "" def_%v_10 
		 19: COPY TYPE_PASS def_tree %v_10[2.18,] 
		 20: 
		 21: %v_3->present? def_%v_11 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 22: BRANCH %v_11[2.21,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "projects/tree/tree_item" def_%v_12 
		 1: COPY TYPE_StringLiteral "folder" def_%v_13 
		 2: HASH-type- def_%v_14 %v_13[3.1,] 
		 3: HASH-partial-collection-locals- def_%v_15 %v_12[3.0,] folders[2.14,] %v_14[3.2,] 
		 4: %self->render def_%v_16 %self[2.0,] %v_15[3.3,] 	 SYMBOL:	 ARGS:%v_15,
		 5: tree-><< def_%v_17 tree[2.5,2.19,] %v_16[3.4,] 	 SYMBOL:	 ARGS:%v_16,
		 6: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_17 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: files->present? def_%v_18 files[2.15,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_18[5.1,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "projects/tree/blob_item" def_%v_19 
		 1: COPY TYPE_StringLiteral "file" def_%v_20 
		 2: HASH-type- def_%v_21 %v_20[6.1,] 
		 3: HASH-partial-collection-locals- def_%v_22 %v_19[6.0,] files[2.15,] %v_21[6.2,] 
		 4: %self->render def_%v_23 %self[2.0,] %v_22[6.3,] 	 SYMBOL:	 ARGS:%v_22,
		 5: tree-><< def_%v_24 tree[2.5,2.19,] %v_23[6.4,] 	 SYMBOL:	 ARGS:%v_23,
		 6: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_24 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: submodules->present? def_%v_25 submodules[2.16,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_25[8.1,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "projects/tree/submodule_item" def_%v_26 
		 1: HASH-partial-collection- def_%v_27 %v_26[9.0,] submodules[2.16,] 
		 2: %self->render def_%v_28 %self[2.0,] %v_27[9.1,] 	 SYMBOL:	 ARGS:%v_27,
		 3: tree-><< def_%v_29 tree[2.5,2.19,] %v_28[9.2,] 	 SYMBOL:	 ARGS:%v_28,
		 4: 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_29 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: tree->html_safe def_%v_30 tree[2.5,2.19,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_30[11.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = render_readme instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_readme 
		 6: 
		 7: readme->name def_%v_3 readme[2.5,] 	 SYMBOL:	 ARGS:
		 8: readme->data def_%v_4 readme[2.5,2.7,] 	 SYMBOL:	 ARGS:
		 9: %self->render_markup def_%v_5 %self[2.0,] %v_3[2.7,] %v_4[2.8,] 	 SYMBOL:	 ARGS:%v_3,%v_4,
		 10: RETURN %v_5[2.9,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tree_icon instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_type 
		 6: RECEIVEARG def_mode 
		 7: RECEIVEARG def_name 
		 8: 
		 9: %self->file_type_icon_class def_%v_3 %self[2.0,] type[2.5,] mode[2.6,] name[2.7,] 	 SYMBOL:	 ARGS:type,mode,name,
		 10: COPY TYPE_StringLiteral " fw" def_%v_4 
		 11: BUILDSTRING def_%v_5 %v_3[2.9,] %v_4[2.10,] 
		 12: %self->icon def_%v_6 %self[2.0,2.9,] %v_5[2.11,] 	 SYMBOL:	 ARGS:%v_5,
		 13: RETURN %v_6[2.12,] %self[2.0,2.9,2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tree_hex_class instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_content 
		 6: 
		 7: COPY TYPE_StringLiteral "file_" def_%v_3 
		 8: content->name def_%v_4 content[2.5,] 	 SYMBOL:	 ARGS:
		 9: %self->hexdigest def_%v_5 %self[2.0,] %v_4[2.8,] 	 SYMBOL:	 ARGS:%v_4,
		 10: BUILDSTRING def_%v_6 %v_3[2.7,] %v_5[2.9,] 
		 11: RETURN %v_6[2.10,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tree_join instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_args 
		 6: 
		 7: (File) def_%v_3 
		 8: def_%v_4 args[2.5,] 
		 9: %v_3->join def_%v_5 %v_3[2.7,] %v_4[2.8,] 	 SYMBOL:	 ARGS:Splat,
		 10: RETURN %v_5[2.9,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = on_top_of_branch? instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_project 
		 6: project[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->project def_%v_3 %self[2.0,] 
		 1: COPY TYPE_PASS def_project %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: RECEIVECONSTARG def_ref 
		 1: ref[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: GETFIELD %self->ref def_%v_4 %self[2.0,] 
		 1: COPY TYPE_PASS def_ref %v_4[5.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: project->repository def_%v_5 project[3.1,2.5,] 	 SYMBOL:	 ARGS:
		 2: %v_5->branch_names def_%v_6 %v_5[6.1,] 	 SYMBOL:	 ARGS:
		 3: %v_6->include? def_%v_7 %v_6[6.2,] ref[5.1,4.0,] 	 SYMBOL:	 ARGS:ref,
		 4: RETURN %v_7[6.3,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = can_edit_tree? instanceMethod = true
BB 1
	outgoing: 14 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_project 
		 6: project[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_project 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: RECEIVECONSTARG def_ref 
		 1: ref[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_ref 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_3 project[3.0,2.5,] 
		 2: COPY TYPE_PASS def_%v_4 project[3.0,2.5,] 
		 3: BRANCH project[3.0,2.5,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: GETFIELD %self->project def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_project %v_5[7.0,] 
		 2: COPY TYPE_PASS def_%v_4 %v_5[7.0,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_6 ref[5.0,4.0,] 
		 2: COPY TYPE_PASS def_%v_7 ref[5.0,4.0,] 
		 3: BRANCH ref[5.0,4.0,] 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: GETFIELD %self->ref def_%v_8 %self[2.0,] 
		 1: COPY TYPE_PASS def_ref %v_8[9.0,] 
		 2: COPY TYPE_PASS def_%v_7 %v_8[9.0,] 
BB 10
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->on_top_of_branch? def_%v_9 %self[2.0,] project[7.1,3.0,2.5,] ref[9.1,5.0,4.0,] 	 SYMBOL:	 ARGS:project,ref,
		 2: BRANCH %v_9[10.1,] 
BB 11
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_10 
		 1: 
		 2: %self->can_collaborate_with_project? def_%v_11 %self[2.0,] project[7.1,3.0,2.5,] 	 SYMBOL:	 ARGS:project,
		 3: RETURN %v_11[11.2,] %self[11.2,2.0,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 14
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tree_edit_branch instanceMethod = true
BB 1
	outgoing: 13 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_project 
		 6: project[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->project def_%v_3 %self[2.0,] 
		 1: COPY TYPE_PASS def_project %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: RECEIVECONSTARG def_ref 
		 1: ref[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: GETFIELD %self->ref def_%v_4 %self[2.0,] 
		 1: COPY TYPE_PASS def_ref %v_4[5.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->can_edit_tree? def_%v_5 %self[2.0,] project[3.1,2.5,] ref[5.1,4.0,] 	 SYMBOL:	 ARGS:project,ref,
		 2: BRANCH %v_5[6.1,] 
BB 7
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
		 1: 
		 2: %self->can_push_branch? def_%v_7 %self[2.0,] project[3.1,2.5,] ref[5.1,4.0,] 	 SYMBOL:	 ARGS:project,ref,
		 3: BRANCH %v_7[7.2,] 
BB 8
	outgoing: 13 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 10
	outgoing: 13 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_8 ref[5.1,4.0,] 
		 2: RETURN ref[5.1,4.0,] %self[2.0,] 
BB 11
	outgoing: 13 
	datadep: 
	instructions:
		 0: 
		 1: %self->tree_edit_project def_%v_9 %self[2.0,] project[3.1,2.5,] 	 SYMBOL:	 ARGS:project,
		 2: COPY TYPE_PASS def_project %v_9[11.1,] 
		 3: 
		 4: %v_9->repository def_%v_10 %v_9[11.1,] 	 SYMBOL:	 ARGS:
		 5: COPY TYPE_StringLiteral "patch" def_%v_11 
		 6: %v_10->next_branch def_%v_12 %v_10[11.4,] %v_11[11.5,] 	 SYMBOL:	 ARGS:%v_11,
		 7: RETURN %v_12[11.6,] %self[11.1,2.0,] 
BB 13
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tree_edit_project instanceMethod = true
BB 1
	outgoing: 13 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_project 
		 6: project[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->project def_%v_3 %self[2.0,] 
		 1: COPY TYPE_PASS def_project %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->current_user def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %self->can? def_%v_5 %self[4.1,2.0,] %v_4[4.1,] project[3.1,2.5,] 	 SYMBOL:push_code,	 ARGS:%v_4,Symbol,project,
		 3: BRANCH %v_5[4.2,] 
BB 5
	outgoing: 13 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_6 project[3.1,2.5,] 
		 2: RETURN project[3.1,2.5,] %self[2.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->current_user def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_7[6.1,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: %self->current_user def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_8->already_forked? def_%v_9 %v_8[7.0,] project[3.1,2.5,] 	 SYMBOL:	 ARGS:project,
		 2: COPY TYPE_PASS def_%v_7 %v_9[7.1,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: BRANCH %v_7[7.2,6.1,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: %self->current_user def_%v_10 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_10->fork_of def_%v_11 %v_10[9.1,] project[3.1,2.5,] 	 SYMBOL:	 ARGS:project,
		 3: 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_11 
BB 11
	outgoing: 13 
	datadep: 
	instructions:
		 0: RETURN %v_11[10.0,9.2,] %self[2.0,] 
BB 13
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = edit_in_new_fork_notice_now instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "You're not allowed to make changes to this project directly." def_%v_3 
		 7: COPY TYPE_StringLiteral " A fork of this project is being created that you can make changes in, so you can submit a merge request." def_%v_4 
		 8: %v_3->+ def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = edit_in_new_fork_notice instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "You're not allowed to make changes to this project directly." def_%v_3 
		 7: COPY TYPE_StringLiteral " A fork of this project has been created that you can make changes in, so you can submit a merge request." def_%v_4 
		 8: %v_3->+ def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = commit_in_fork_help instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "A new branch will be created in your fork and a new merge request will be started." def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tree_breadcrumbs instanceMethod = true
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_tree 
		 6: RECEIVECONSTARG def_max_links 
		 7: max_links[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Fixnum def_max_links 
BB 4
	outgoing: 5 9 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->path def_%v_3 %self[2.0,] 
		 2: %v_3->present? def_%v_4 %v_3[4.1,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_4[4.2,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "" def_%v_5 
		 2: COPY TYPE_PASS def_part_path %v_5[5.1,] 
		 3: 
		 4: GETFIELD %self->path def_%v_6 %self[2.0,] 
		 5: COPY TYPE_StringLiteral "/" def_%v_7 
		 6: %v_6->split def_%v_8 %v_6[5.4,] %v_7[5.5,] 	 SYMBOL:	 ARGS:%v_7,
		 7: COPY TYPE_PASS def_parts %v_8[5.6,] 
		 8: 
		 9: %v_8->count def_%v_9 %v_8[5.6,] 	 SYMBOL:	 ARGS:
		 10: %v_9->> def_%v_10 %v_9[5.9,] max_links[3.0,2.6,] 	 SYMBOL:	 ARGS:max_links,
		 11: BRANCH %v_10[5.10,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral ".." def_%v_12 
		 1: COPY TYPE_Array def_%v_13 %v_12[6.0,] 
		 2: def_%v_11 %v_0[2.1,] %v_13[6.1,] 
		 3: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_11 
BB 8
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: parts->each def_%v_14 parts[5.7,] %self[2.0,] 	 SYMBOL:	 ARGS:parts,
CLOSURE BEGIN: part_path[5.2,] part[] parts[5.7,] max_links[3.0,2.6,] %self[2.0,] 
BB 1
	outgoing: 17 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_part 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 15 
	datadep: 
	instructions:
		 0: 
		 1: part_path->empty? def_%cl_1_3 part_path[] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_4 
		 1: 
BB 5
	outgoing: 6 15 
	datadep: 
	instructions:
		 0: (File) def_%cl_1_5 
		 1: %cl_1_5->join def_%cl_1_6 %cl_1_5[5.0,] part_path[] part[2.2,] 	 SYMBOL:	 ARGS:part_path,part,
		 2: COPY TYPE_PASS def_part_path %cl_1_6[5.1,] 
		 3: COPY TYPE_PASS def_%cl_1_4 %cl_1_6[5.1,] 
BB 6
	outgoing: 7 8 15 
	datadep: 
	instructions:
		 0: 
		 1: part_path->empty? def_%cl_1_7 part_path[5.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_7[6.1,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_part_path part[2.2,] 
		 1: COPY TYPE_PASS def_%cl_1_8 part[2.2,] 
		 2: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_8 
BB 9
	outgoing: 10 11 15 
	datadep: 
	instructions:
		 0: 
		 1: parts->count def_%cl_1_9 parts[] 	 SYMBOL:	 ARGS:
		 2: %cl_1_9->> def_%cl_1_10 %cl_1_9[9.1,] max_links[] 	 SYMBOL:	 ARGS:max_links,
		 3: BRANCH %cl_1_10[9.2,] 
BB 10
	outgoing: 11 15 
	datadep: 
	instructions:
		 0: parts->last def_%cl_1_11 parts[] 	 SYMBOL:	 ARGS:Fixnum,
		 1: %cl_1_11->include? def_%cl_1_12 %cl_1_11[10.0,] part[2.2,] 	 SYMBOL:	 ARGS:part,
		 2: %cl_1_12->! def_%cl_1_13 %cl_1_12[10.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_PASS def_%cl_1_10 %cl_1_13[10.2,] 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_10[10.3,9.2,] 
BB 12
	outgoing: 15 17 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] 
BB 13
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_14 
BB 14
	outgoing: 15 17 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->ref def_%cl_1_16 %self[2.0,] 
		 2: %self->tree_join def_%cl_1_17 %self[2.0,] %cl_1_16[14.1,] part_path[7.0,5.2,] 	 SYMBOL:	 ARGS:%cl_1_16,part_path,
		 3: COPY TYPE_Array def_%cl_1_18 part[2.2,] %cl_1_17[14.2,] 
		 4: def_%cl_1_15 %cl_1_0[2.1,] %cl_1_18[14.3,] 
		 5: RETURN %cl_1_15[14.4,] %self[14.2,2.0,] 
BB 15
	outgoing: 17 
	datadep: 
	instructions:
		 0: def_%cl_1_19 
		 1: def_%cl_1_20 %cl_1_19[15.0,] 
		 2: RETURN %cl_1_20[15.1,] %self[2.0,] 
BB 17
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: part_path[5.2,7.0,] 
		 2: RETURN %v_14[8.1,] %self[2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = up_dir_path instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (File) def_%v_3 
		 7: GETFIELD %self->path def_%v_4 %self[2.0,] 
		 8: COPY TYPE_StringLiteral ".." def_%v_5 
		 9: %v_3->join def_%v_6 %v_3[2.6,] %v_4[2.7,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_4,%v_5,
		 10: COPY TYPE_PASS def_file %v_6[2.9,] 
		 11: 
		 12: GETFIELD %self->ref def_%v_7 %self[2.0,] 
		 13: %self->tree_join def_%v_8 %self[2.0,] %v_7[2.12,] %v_6[2.9,] 	 SYMBOL:	 ARGS:%v_7,file,
		 14: RETURN %v_8[2.13,] %self[2.0,2.13,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = flatten_tree instanceMethod = true
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_tree 
		 6: 
		 7: (Gitlab) def_%v_3 
		 8: (inherit Git) def_%v_4 %v_3[2.7,] 
		 9: %v_4[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.7,] 	 SYMBOL:Git,	 ARGS:Symbol,
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: (inherit Tree) def_%v_5 %v_4[3.0,2.8,] 
		 1: %v_5[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %v_4->const_missing def_%v_5 %v_4[3.0,2.8,] 	 SYMBOL:Tree,	 ARGS:Symbol,
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: GETFIELD %self->repository def_%v_6 %self[2.0,] 
		 1: GETFIELD %self->commit def_%v_7 %self[2.0,] 
		 2: %v_7->id def_%v_8 %v_7[6.1,] 	 SYMBOL:	 ARGS:
		 3: tree->path def_%v_9 tree[2.5,] 	 SYMBOL:	 ARGS:
		 4: %v_5->where def_%v_10 %v_5[5.0,4.0,] %v_6[6.0,] %v_8[6.2,] %v_9[6.3,] 	 SYMBOL:	 ARGS:%v_6,%v_8,%v_9,
		 5: COPY TYPE_PASS def_subtree %v_10[6.4,] 
		 6: 
		 7: %v_10->count def_%v_11 %v_10[6.4,] 	 SYMBOL:	 ARGS:
		 8: %v_11->== def_%v_12 %v_11[6.7,] 	 SYMBOL:	 ARGS:Fixnum,
		 9: BRANCH %v_12[6.8,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: subtree->first def_%v_13 subtree[6.5,] 	 SYMBOL:	 ARGS:
		 1: %v_13->dir? def_%v_14 %v_13[7.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_12 %v_14[7.1,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: BRANCH %v_12[7.2,6.8,] 
BB 9
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: tree->name def_%v_15 tree[2.5,] 	 SYMBOL:	 ARGS:
		 2: subtree->first def_%v_16 subtree[6.5,] 	 SYMBOL:	 ARGS:
		 3: %self->flatten_tree def_%v_17 %self[2.0,] %v_16[9.2,] 	 SYMBOL:	 ARGS:%v_16,
		 4: %self->tree_join def_%v_18 %self[9.3,2.0,] %v_15[9.1,] %v_17[9.3,] 	 SYMBOL:	 ARGS:%v_15,%v_17,
		 5: RETURN %v_18[9.4,] %self[9.3,9.4,2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: tree->name def_%v_20 tree[2.5,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_20[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

