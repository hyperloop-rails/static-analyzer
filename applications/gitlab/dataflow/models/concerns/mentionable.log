SET IRMethod, name = attr_mentionable instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_attr 
		 6: RECEIVECONSTARG def_options 
		 7: options[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: attr->to_s def_%v_4 attr[2.5,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_attr %v_4[4.1,] 
		 3: 
		 4: %self->mentionable_attrs def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 5: COPY TYPE_Array def_%v_6 attr[4.1,4.2,] options[3.1,2.6,] 
		 6: %v_5-><< def_%v_7 %v_5[4.4,] %v_6[4.5,] 	 SYMBOL:	 ARGS:%v_6,
		 7: RETURN %v_7[4.6,] %self[4.4,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = mentionable_attrs instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->mentionable_attrs def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_6 
		 1: ATTRASSIGN %self->mentionable_attrs %v_6[5.0,] 
		 2: RETURN %v_6[5.0,] %self[5.1,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = gfm_reference instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_from_project 
		 6: from_project[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_from_project 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->class def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_3->to_s def_%v_4 %v_3[4.1,] 	 SYMBOL:	 ARGS:
		 3: %v_4->underscore def_%v_5 %v_4[4.2,] 	 SYMBOL:	 ARGS:
		 4: %v_5->humanize def_%v_6 %v_5[4.3,] 	 SYMBOL:	 ARGS:
		 5: %v_6->downcase def_%v_7 %v_6[4.4,] 	 SYMBOL:	 ARGS:
		 6: COPY TYPE_PASS def_friendly_name %v_7[4.5,] 
		 7: 
		 8: COPY TYPE_StringLiteral " " def_%v_8 
		 9: %self->to_reference def_%v_9 %self[4.1,2.0,] from_project[3.0,2.5,] 	 SYMBOL:	 ARGS:from_project,
		 10: BUILDSTRING def_%v_10 friendly_name[4.6,] %v_8[4.8,] %v_9[4.9,] 
		 11: RETURN %v_10[4.10,] %self[4.1,4.9,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = local_reference instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = all_references instanceMethod = true
BB 1
	outgoing: 17 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 15 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_current_user 
		 6: current_user[2.5,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_current_user 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: RECEIVECONSTARG def_text 
		 1: text[5.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_text 
BB 7
	outgoing: 8 9 15 
	datadep: 
	instructions:
		 0: 
		 1: (Gitlab) def_%v_3 
		 2: (inherit ReferenceExtractor) def_%v_4 %v_3[7.1,] 
		 3: %v_4[7.2,] 
BB 8
	outgoing: 9 15 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[7.1,] 	 SYMBOL:ReferenceExtractor,	 ARGS:Symbol,
BB 9
	outgoing: 10 11 15 
	datadep: 
	instructions:
		 0: %self->project def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_6 current_user[4.0,2.5,] 
		 2: BRANCH current_user[4.0,2.5,] 
BB 10
	outgoing: 11 15 
	datadep: 
	instructions:
		 0: %self->author def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_6 %v_7[10.0,] 
BB 11
	outgoing: 12 13 15 
	datadep: 
	instructions:
		 0: %self->author def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_4->new def_%v_9 %v_4[8.0,7.2,] %v_5[9.0,] %v_6[10.1,9.1,] %v_8[11.0,] 	 SYMBOL:	 ARGS:%v_5,%v_6,%v_8,
		 2: COPY TYPE_PASS def_ext %v_9[11.1,] 
		 3: 
		 4: BRANCH text[6.0,5.0,] 
BB 12
	outgoing: 14 15 
	datadep: 
	instructions:
		 0: 
		 1: ext->analyze def_%v_10 ext[11.2,] text[6.0,5.0,] 	 SYMBOL:	 ARGS:text,
		 2: 
BB 13
	outgoing: 14 15 
	datadep: 
	instructions:
		 0: 
		 1: %self->class def_%v_11 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_11->mentionable_attrs def_%v_12 %v_11[13.1,] 	 SYMBOL:	 ARGS:
		 3: %v_12->each def_%v_13 %v_12[13.2,] %self[13.1,2.0,] 	 SYMBOL:	 ARGS:%v_12,
CLOSURE BEGIN: %self[13.1,2.0,] attr[] options[] context[] ext[11.2,] text[6.0,5.0,] 
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_attr 
		 3: RECEIVEARG def_options 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->send def_%cl_1_3 %self[2.0,] attr[2.2,] 	 SYMBOL:	 ARGS:attr,
		 2: COPY TYPE_PASS def_text %cl_1_3[3.1,] 
		 3: 
		 4: options->dup def_%cl_1_4 options[2.3,] 	 SYMBOL:	 ARGS:
		 5: COPY TYPE_PASS def_context %cl_1_4[3.4,] 
		 6: 
		 7: %cl_1_4->delete def_%cl_1_5 %cl_1_4[3.4,] 	 SYMBOL:cache,	 ARGS:Symbol,
		 8: BRANCH %cl_1_5[3.7,] 
BB 4
	outgoing: 5 9 
	datadep: 
	instructions:
		 0: %self->persisted? def_%cl_1_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%cl_1_5 %cl_1_6[4.0,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_5[4.1,3.7,] 
BB 6
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%cl_1_7 %self[2.0,] attr[2.2,] 
		 1: ATTRASSIGN context->[] %cl_1_7[6.0,] 
		 2: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_7 
BB 8
	outgoing: 9 11 
	datadep: 
	instructions:
		 0: 
		 1: ext->analyze def_%cl_1_8 ext[] text[3.2,] context[6.1,3.5,] 	 SYMBOL:	 ARGS:text,context,
		 2: RETURN %cl_1_8[8.1,] %self[2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[9.0,] 
		 2: RETURN %cl_1_10[9.1,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: options[2.3,] context[6.1,3.5,] text[3.2,] 
		 4: COPY TYPE_PASS def_%v_10 %v_13[13.3,] 
BB 14
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
		 1: RETURN ext[11.2,] %self[2.0,] 
BB 15
	outgoing: 17 
	datadep: 
	instructions:
		 0: def_%v_14 
		 1: def_%v_15 %v_14[15.0,] 
		 2: RETURN %v_15[15.1,] %self[2.0,] 
BB 17
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = mentioned_users instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_current_user 
		 6: current_user[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_current_user 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->all_references def_%v_3 %self[2.0,] current_user[3.0,2.5,] 	 SYMBOL:	 ARGS:current_user,
		 2: %v_3->users def_%v_4 %v_3[4.1,] 	 SYMBOL:	 ARGS:
		 3: RETURN %v_4[4.2,] %self[4.1,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = referenced_mentionables instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_current_user 
		 6: current_user[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->author def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_current_user %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: RECEIVECONSTARG def_text 
		 1: text[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_text 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->all_references def_%v_4 %self[2.0,] current_user[3.1,2.5,] text[5.0,4.0,] 	 SYMBOL:	 ARGS:current_user,text,
		 2: COPY TYPE_PASS def_refs %v_4[6.1,] 
		 3: 
		 4: %v_4->issues def_%v_5 %v_4[6.1,] 	 SYMBOL:	 ARGS:
		 5: refs->merge_requests def_%v_6 refs[6.2,] 	 SYMBOL:	 ARGS:
		 6: %v_5->+ def_%v_7 %v_5[6.4,] %v_6[6.5,] 	 SYMBOL:	 ARGS:%v_6,
		 7: refs->commits def_%v_8 refs[6.2,6.5,] 	 SYMBOL:	 ARGS:
		 8: %v_7->+ def_%v_9 %v_7[6.6,] %v_8[6.7,] 	 SYMBOL:	 ARGS:%v_8,
		 9: COPY TYPE_PASS def_refs %v_9[6.8,] 
		 10: 
		 11: %v_9->reject def_%v_10 %v_9[6.8,] %self[6.1,2.0,] 	 SYMBOL:	 ARGS:%v_9,
CLOSURE BEGIN: %self[6.1,2.0,] ref[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_ref 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->local_reference def_%cl_1_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: ref->== def_%cl_1_4 ref[2.2,] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: RETURN %cl_1_4[3.2,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 12: RETURN %v_10[6.11,] %self[6.1,2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = create_cross_references! instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_author 
		 6: author[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->author def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_author %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: RECEIVECONSTARG def_without 
		 1: without[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_4 
		 1: COPY TYPE_PASS def_without %v_4[5.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: RECEIVECONSTARG def_text 
		 1: text[6.0,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_text 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->referenced_mentionables def_%v_5 %self[2.0,] author[3.1,2.5,] text[7.0,6.0,] 	 SYMBOL:	 ARGS:author,text,
		 2: COPY TYPE_PASS def_refs %v_5[8.1,] 
		 3: 
		 4: %v_5->reject! def_%v_6 %v_5[8.1,] %self[8.1,2.0,] 	 SYMBOL:	 ARGS:%v_5,
CLOSURE BEGIN: without[5.1,4.0,] ref[] %self[8.1,2.0,] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_ref 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: without->include? def_%cl_1_3 without[] ref[2.2,] 	 SYMBOL:	 ARGS:ref,
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: %self->cross_reference_exists? def_%cl_1_4 %self[2.0,] ref[2.2,] 	 SYMBOL:	 ARGS:ref,
		 1: RETURN %cl_1_4[4.0,] %self[4.0,2.0,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[6.0,] 
		 2: RETURN %cl_1_6[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 5: 
		 6: refs->each def_%v_7 refs[8.2,] %self[8.1,2.0,] 	 SYMBOL:	 ARGS:refs,
CLOSURE BEGIN: %self[8.1,2.0,] ref[8.4,] author[3.1,2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_ref 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (SystemNoteService) def_%cl_2_3 
		 2: %self->local_reference def_%cl_2_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %cl_2_3->cross_reference def_%cl_2_5 %cl_2_3[3.1,] ref[2.2,] %cl_2_4[3.2,] author[] 	 SYMBOL:	 ARGS:ref,%cl_2_4,author,
		 4: RETURN %cl_2_5[3.3,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_6 
		 1: def_%cl_2_7 %cl_2_6[4.0,] 
		 2: RETURN %cl_2_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_7[8.6,] %self[8.1,2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = create_new_cross_references! instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_author 
		 6: author[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->author def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_author %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->detect_mentionable_changes def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_changes %v_4[4.1,] 
		 3: 
		 4: %v_4->empty? def_%v_5 %v_4[4.1,] 	 SYMBOL:	 ARGS:
		 5: BRANCH %v_5[4.4,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
		 1: 
		 2: changes->collect def_%v_7 changes[4.2,] %self[2.0,] 	 SYMBOL:	 ARGS:changes,
CLOSURE BEGIN: vals[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def__ 
		 3: RECEIVEARG def_vals 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: vals->first def_%cl_1_3 vals[2.3,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: vals[2.3,] 
		 3: COPY TYPE_StringLiteral " " def_%v_8 
		 4: %v_7->join def_%v_9 %v_7[6.2,] %v_8[6.3,] 	 SYMBOL:	 ARGS:%v_8,
		 5: COPY TYPE_PASS def_original_text %v_9[6.4,] 
		 6: 
		 7: %self->referenced_mentionables def_%v_10 %self[2.0,] author[3.1,2.5,] %v_9[6.4,] 	 SYMBOL:	 ARGS:author,original_text,
		 8: COPY TYPE_PASS def_preexisting %v_10[6.7,] 
		 9: 
		 10: %self->create_cross_references! def_%v_11 %self[6.7,2.0,] author[3.1,2.5,] %v_10[6.7,] 	 SYMBOL:	 ARGS:author,preexisting,
		 11: RETURN %v_11[6.10,] %self[6.7,6.10,2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = detect_mentionable_changes instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->changes def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->present? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->changes def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->previous_changes def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_5 %v_6[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %v_5->dup def_%v_7 %v_5[4.1,3.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_source %v_7[5.0,] 
		 2: 
		 3: %self->class def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 4: %v_8->mentionable_attrs def_%v_9 %v_8[5.3,] 	 SYMBOL:	 ARGS:
		 5: %v_9->map def_%v_10 %v_9[5.4,] %self[5.3,2.0,] 	 SYMBOL:	 ARGS:%v_9,
CLOSURE BEGIN: attr[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_attr 
		 3: RECEIVEARG def_options 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
		 6: 
		 7: RETURN attr[2.2,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: options[2.3,] 
		 6: COPY TYPE_PASS def_mentionable %v_10[5.5,] 
		 7: 
		 8: source->select def_%v_11 source[5.1,] %self[5.3,2.0,] 	 SYMBOL:	 ARGS:source,
CLOSURE BEGIN: mentionable[5.6,] key[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_key 
		 3: RECEIVEARG def_val 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: mentionable->include? def_%cl_2_3 mentionable[] key[2.2,] 	 SYMBOL:	 ARGS:key,
		 2: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: val[2.3,] 
		 9: RETURN %v_11[5.8,] %self[5.3,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = cross_reference_exists? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_target 
		 6: 
		 7: (SystemNoteService) def_%v_3 
		 8: %self->local_reference def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 9: %v_3->cross_reference_exists? def_%v_5 %v_3[2.7,] target[2.5,] %v_4[2.8,] 	 SYMBOL:	 ARGS:target,%v_4,
		 10: RETURN %v_5[2.9,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

