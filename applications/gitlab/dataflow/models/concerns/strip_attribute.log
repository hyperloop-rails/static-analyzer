SET IRMethod, name = strip_attributes instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_attrs 
		 6: 
		 7: %self->strip_attrs def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->concat def_%v_4 %v_3[2.7,] attrs[2.5,] 	 SYMBOL:	 ARGS:attrs,
		 9: RETURN %v_4[2.8,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = strip_attrs instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->strip_attrs def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_6 
		 1: ATTRASSIGN %self->strip_attrs %v_6[5.0,] 
		 2: RETURN %v_6[5.0,] %self[5.1,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = strip_attributes instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->class def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->strip_attrs def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->each def_%v_5 %v_4[2.7,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: %self[2.0,2.6,] attr[] 
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_attr 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->[] def_%cl_1_3 %self[2.0,] attr[2.2,] 	 SYMBOL:	 ARGS:attr,
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 5 9 
	datadep: 
	instructions:
		 0: %self->[] def_%cl_1_4 %self[2.0,] attr[2.2,] 	 SYMBOL:	 ARGS:attr,
		 1: %cl_1_4->respond_to? def_%cl_1_5 %cl_1_4[4.0,] 	 SYMBOL:strip!,	 ARGS:Symbol,
		 2: COPY TYPE_PASS def_%cl_1_3 %cl_1_5[4.1,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_3[4.2,3.1,] 
BB 6
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: %self->[] def_%cl_1_6 %self[2.0,] attr[2.2,] 	 SYMBOL:	 ARGS:attr,
		 1: %cl_1_6->strip! def_%cl_1_7 %cl_1_6[6.0,] 	 SYMBOL:	 ARGS:
		 2: 
BB 7
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 8
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %cl_1_7[6.1,] %self[2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[9.0,] 
		 2: RETURN %cl_1_9[9.1,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

