SET IRMethod, name = to_reference instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def__from_project 
		 6: _from_project[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def__from_project 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "" def_%v_3 
		 2: RETURN %v_3[4.1,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reference_link_text instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_from_project 
		 6: from_project[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_from_project 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->to_reference def_%v_3 %self[2.0,] from_project[3.0,2.5,] 	 SYMBOL:	 ARGS:from_project,
		 2: RETURN %v_3[4.1,] %self[4.1,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reference_prefix instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "" def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reference_pattern instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (NotImplementedError) def_%v_3 
		 7: COPY TYPE_StringLiteral " does not implement " def_%v_4 
		 8: %self->__method__ def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 9: BUILDSTRING def_%v_6 %self[2.0,2.8,] %v_4[2.7,] %v_5[2.8,] 
		 10: %self->raise def_%v_7 %self[2.0,2.8,] %v_3[2.6,] %v_6[2.9,] 	 SYMBOL:	 ARGS:%v_3,%v_6,
		 11: RETURN %v_7[2.10,] %self[2.0,2.8,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = link_reference_pattern instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_route 
		 6: RECEIVEARG def_pattern 
		 7: 
		 8: COPY TYPE_StringLiteral "" def_%v_3 
		 9: COPY TYPE_StringLiteral "
        (?<url>
          " def_%v_4 
		 10: (Regexp) def_%v_5 
		 11: (Gitlab) def_%v_6 
		 12: %v_6->config def_%v_7 %v_6[2.11,] 	 SYMBOL:	 ARGS:
		 13: %v_7->gitlab def_%v_8 %v_7[2.12,] 	 SYMBOL:	 ARGS:
		 14: %v_8->url def_%v_9 %v_8[2.13,] 	 SYMBOL:	 ARGS:
		 15: %v_5->escape def_%v_10 %v_5[2.10,] %v_9[2.14,] 	 SYMBOL:	 ARGS:%v_9,
		 16: COPY TYPE_StringLiteral "
          \/" def_%v_11 
		 17: 
		 18: (Project) def_%v_12 
		 19: %v_12->reference_pattern def_%v_13 %v_12[2.18,] 	 SYMBOL:	 ARGS:
		 20: COPY TYPE_StringLiteral "
          \/" def_%v_14 
		 21: 
		 22: (Regexp) def_%v_15 
		 23: %v_15->escape def_%v_16 %v_15[2.22,] route[2.5,] 	 SYMBOL:	 ARGS:route,
		 24: COPY TYPE_StringLiteral "
          \/" def_%v_17 
		 25: 
		 26: COPY TYPE_StringLiteral "
          (?<path>
            (\/[a-z0-9_=-]+)*
          )?
          (?<query>
            \?[a-z0-9_=-]+
            (&[a-z0-9_=-]+)*
          )?
          (?<anchor>\#[a-z0-9_-]+)?
        )
      " def_%v_18 
		 27: def_%v_19 %v_3[2.8,] %v_4[2.9,] %v_10[2.15,] %v_11[2.16,] %v_13[2.19,] %v_14[2.20,] %v_16[2.23,] %v_17[2.24,] pattern[2.6,] %v_18[2.26,] 
		 28: RETURN %v_19[2.27,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = cross_project_reference? instanceMethod = true
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_from_project 
		 6: 
		 7: (Project) def_%v_3 
		 8: %self->is_a? def_%v_4 %self[2.0,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->!= def_%v_5 %self[2.0,] from_project[2.5,] 	 SYMBOL:	 ARGS:from_project,
		 2: RETURN %v_5[3.1,] %self[3.1,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_6 from_project[2.5,] 
		 2: BRANCH from_project[2.5,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->project def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_6 %v_7[5.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: BRANCH %v_6[5.1,4.1,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: %self->project def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_8->!= def_%v_9 %v_8[7.0,] from_project[2.5,] 	 SYMBOL:	 ARGS:from_project,
		 2: COPY TYPE_PASS def_%v_6 %v_9[7.1,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: RETURN %v_6[7.2,5.1,4.1,] %self[2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:

