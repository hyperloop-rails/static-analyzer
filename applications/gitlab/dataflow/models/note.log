SET IRMethod, name = awards instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-is_award- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = nonawards instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-is_award- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = for_commit_id instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "Commit" def_%v_3 
		 7: %self->commit_id def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: HASH-noteable_type-commit_id- def_%v_5 %v_3[2.6,] %v_4[2.7,] 
		 9: %self->where def_%v_6 %self[2.0,2.7,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_5,
		 10: RETURN %v_6[2.9,] %self[2.0,2.7,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = system instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-system- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = user instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-system- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = common instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "" def_%v_3 
		 7: COPY TYPE_Array def_%v_4 %v_3[2.6,] 
		 8: HASH-noteable_type- def_%v_5 %v_4[2.7,] 
		 9: %self->where def_%v_6 %self[2.0,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_5,
		 10: RETURN %v_6[2.9,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = fresh instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-created_at-id- def_%v_3 
		 7: %self->order def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = inc_author_project instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->includes def_%v_3 %self[2.0,] 	 SYMBOL:project,author,	 ARGS:Symbol,Symbol,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = inc_author instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->includes def_%v_3 %self[2.0,] 	 SYMBOL:author,	 ARGS:Symbol,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = legacy_diff_notes instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "LegacyDiffNote" def_%v_3 
		 7: HASH-type- def_%v_4 %v_3[2.6,] 
		 8: %self->where def_%v_5 %self[2.0,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = non_diff_notes instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "Note" def_%v_3 
		 7: COPY TYPE_Array def_%v_4 %v_3[2.6,] 
		 8: HASH-type- def_%v_5 %v_4[2.7,] 
		 9: %self->where def_%v_6 %self[2.0,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_5,
		 10: RETURN %v_6[2.9,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = with_associations instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 
		 7: HASH-group- def_%v_4 %v_3[2.6,] 
		 8: COPY TYPE_Array def_%v_5 %v_4[2.7,] 
		 9: HASH-project- def_%v_6 %v_5[2.8,] 
		 10: %self->includes def_%v_7 %self[2.0,] %v_6[2.9,] 	 SYMBOL:author,noteable,updated_by,	 ARGS:Symbol,Symbol,Symbol,%v_6,
		 11: RETURN %v_7[2.10,] %self[2.0,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = awards instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-is_award- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = nonawards instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-is_award- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = for_commit_id instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "Commit" def_%v_3 
		 7: %self->commit_id def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: HASH-noteable_type-commit_id- def_%v_5 %v_3[2.6,] %v_4[2.7,] 
		 9: %self->where def_%v_6 %self[2.0,2.7,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_5,
		 10: RETURN %v_6[2.9,] %self[2.0,2.7,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = system instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-system- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = user instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-system- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = common instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "" def_%v_3 
		 7: COPY TYPE_Array def_%v_4 %v_3[2.6,] 
		 8: HASH-noteable_type- def_%v_5 %v_4[2.7,] 
		 9: %self->where def_%v_6 %self[2.0,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_5,
		 10: RETURN %v_6[2.9,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = fresh instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-created_at-id- def_%v_3 
		 7: %self->order def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = inc_author_project instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->includes def_%v_3 %self[2.0,] 	 SYMBOL:project,author,	 ARGS:Symbol,Symbol,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = inc_author instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->includes def_%v_3 %self[2.0,] 	 SYMBOL:author,	 ARGS:Symbol,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = legacy_diff_notes instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "LegacyDiffNote" def_%v_3 
		 7: HASH-type- def_%v_4 %v_3[2.6,] 
		 8: %self->where def_%v_5 %self[2.0,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = non_diff_notes instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "Note" def_%v_3 
		 7: COPY TYPE_Array def_%v_4 %v_3[2.6,] 
		 8: HASH-type- def_%v_5 %v_4[2.7,] 
		 9: %self->where def_%v_6 %self[2.0,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_5,
		 10: RETURN %v_6[2.9,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = with_associations instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 
		 7: HASH-group- def_%v_4 %v_3[2.6,] 
		 8: COPY TYPE_Array def_%v_5 %v_4[2.7,] 
		 9: HASH-project- def_%v_6 %v_5[2.8,] 
		 10: %self->includes def_%v_7 %self[2.0,] %v_6[2.9,] 	 SYMBOL:author,noteable,updated_by,	 ARGS:Symbol,Symbol,Symbol,%v_6,
		 11: RETURN %v_7[2.10,] %self[2.0,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = model_name instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (ActiveModel) def_%v_3 
		 7: (inherit Name) def_%v_4 %v_3[2.6,] 
		 8: %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.6,] 	 SYMBOL:Name,	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "note" def_%v_5 
		 1: %v_4->new def_%v_6 %v_4[3.0,2.7,] %self[2.0,] %v_5[4.0,] 	 SYMBOL:	 ARGS:%self,Nil,%v_5,
		 2: RETURN %v_6[4.1,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = build_discussion_id instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_noteable_type 
		 6: RECEIVEARG def_noteable_id 
		 7: 
		 8: noteable_type->try def_%v_3 noteable_type[2.5,] 	 SYMBOL:underscore,	 ARGS:Symbol,
		 9: COPY TYPE_Array def_%v_4 %v_3[2.8,] noteable_id[2.6,] 
		 10: COPY TYPE_StringLiteral "-" def_%v_5 
		 11: %v_4->join def_%v_6 %v_4[2.9,] %v_5[2.10,] 	 SYMBOL:	 ARGS:%v_5,
		 12: RETURN %v_6[2.11,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = discussions instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->all def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->group_by def_%v_4 %v_3[2.6,] 	 SYMBOL:discussion_id,	 ARGS:
		 8: %v_4->values def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = grouped_diff_notes instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->legacy_diff_notes def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->select def_%v_4 %v_3[2.6,] 	 SYMBOL:active?,	 ARGS:
		 8: %v_4->sort_by def_%v_5 %v_4[2.7,] 	 SYMBOL:created_at,	 ARGS:
		 9: %v_5->group_by def_%v_6 %v_5[2.8,] 	 SYMBOL:line_code,	 ARGS:
		 10: RETURN %v_6[2.9,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = search instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_query 
		 6: 
		 7: %self->arel_table def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_PASS def_table %v_3[2.7,] 
		 9: 
		 10: COPY TYPE_StringLiteral "%" def_%v_4 
		 11: COPY TYPE_StringLiteral "%" def_%v_5 
		 12: BUILDSTRING def_%v_6 %v_4[2.10,] query[2.5,] %v_5[2.11,] 
		 13: COPY TYPE_PASS def_pattern %v_6[2.12,] 
		 14: 
		 15: %v_3->[] def_%v_7 %v_3[2.7,] 	 SYMBOL:note,	 ARGS:Symbol,
		 16: %v_7->matches def_%v_8 %v_7[2.15,] pattern[2.13,] 	 SYMBOL:	 ARGS:pattern,
		 17: %self->where def_%v_9 %self[2.0,2.7,] %v_8[2.16,] 	 SYMBOL:	 ARGS:%v_8,
		 18: RETURN %v_9[2.17,] %self[2.0,2.7,2.17,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = grouped_awards instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH- def_%v_3 
		 7: COPY TYPE_PASS def_notes %v_3[2.6,] 
		 8: 
		 9: %self->awards def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 10: %v_4->select def_%v_5 %v_4[2.9,] 	 SYMBOL:note,	 ARGS:Symbol,
		 11: %v_5->distinct def_%v_6 %v_5[2.10,] 	 SYMBOL:	 ARGS:
		 12: %v_6->map def_%v_7 %v_6[2.11,] %self[2.0,2.9,] 	 SYMBOL:	 ARGS:%v_6,
CLOSURE BEGIN: note[] %self[2.0,2.9,] notes[2.7,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_note 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: note->note def_%cl_1_3 note[2.2,] 	 SYMBOL:	 ARGS:
		 2: note->note def_%cl_1_4 note[3.1,2.2,] 	 SYMBOL:	 ARGS:
		 3: HASH-note- def_%cl_1_5 %cl_1_4[3.2,] 
		 4: %self->where def_%cl_1_6 %self[2.0,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 5: ATTRASSIGN notes->[] %cl_1_3[3.1,] %cl_1_6[3.4,] 
		 6: RETURN %cl_1_6[3.4,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 13: 
		 14: COPY TYPE_StringLiteral "thumbsup" def_%v_9 
		 15: notes->[] def_%v_8 notes[2.7,] %v_9[2.14,] 	 SYMBOL:	 ARGS:%v_9,
		 16: BRANCH %v_8[2.15,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: (Note) def_%v_10 
		 1: %v_10->none def_%v_11 %v_10[3.0,] 	 SYMBOL:	 ARGS:
		 2: notes->[]= def_%v_8 notes[2.7,] %v_9[2.14,] %v_11[3.1,] 	 SYMBOL:	 ARGS:%v_9,%v_11,
		 3: COPY TYPE_PASS def_%v_8 %v_11[3.1,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "thumbsdown" def_%v_13 
		 2: notes->[] def_%v_12 notes[3.2,2.7,] %v_13[4.1,] 	 SYMBOL:	 ARGS:%v_13,
		 3: BRANCH %v_12[4.2,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: (Note) def_%v_14 
		 1: %v_14->none def_%v_15 %v_14[5.0,] 	 SYMBOL:	 ARGS:
		 2: notes->[]= def_%v_12 notes[3.2,2.7,] %v_13[4.1,] %v_15[5.1,] 	 SYMBOL:	 ARGS:%v_13,%v_15,
		 3: COPY TYPE_PASS def_%v_12 %v_15[5.1,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: RETURN notes[5.2,3.2,2.7,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = cross_reference? instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->system def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: (SystemNoteService) def_%v_4 
		 1: %self->note def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_4->cross_reference? def_%v_6 %v_4[3.0,] %v_5[3.1,] 	 SYMBOL:	 ARGS:%v_5,
		 3: RETURN %v_6[3.2,] %self[3.1,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.6,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = diff_note? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = legacy_diff_note? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = active? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = discussion_id instanceMethod = true
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->discussion_id def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 11 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->for_merge_request? def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_6[5.1,] 
BB 6
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->id def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_Array def_%v_8 %v_7[6.1,] 
		 3: COPY TYPE_StringLiteral "-" def_%v_9 
		 4: %v_8->join def_%v_10 %v_8[6.2,] %v_9[6.3,] 	 SYMBOL:	 ARGS:%v_9,
		 5: 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->class def_%v_11 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %self->noteable_type def_%v_12 %self[7.1,2.0,] 	 SYMBOL:	 ARGS:
		 3: %self->noteable_id def_%v_13 %self[7.1,7.2,2.0,] 	 SYMBOL:	 ARGS:
		 4: BRANCH %v_13[7.3,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: %self->commit_id def_%v_14 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_13 %v_14[8.0,] 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: %v_11->build_discussion_id def_%v_15 %v_11[7.1,] %v_12[7.2,] %v_13[8.1,7.3,] 	 SYMBOL:	 ARGS:%v_12,%v_13,
		 1: COPY TYPE_PASS def_%v_10 %v_15[9.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: ATTRASSIGN %self->discussion_id %v_10[9.1,6.4,] 
		 1: RETURN %v_10[9.1,6.4,] %self[10.0,2.0,] 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = max_attachment_size instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->current_application_settings def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->max_attachment_size def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->megabytes def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_5->to_i def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: RETURN %v_6[2.9,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = hook_attrs instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->attributes def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = for_commit? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->noteable_type def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "Commit" def_%v_4 
		 8: %v_3->== def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = for_issue? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->noteable_type def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "Issue" def_%v_4 
		 8: %v_3->== def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = for_merge_request? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->noteable_type def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "MergeRequest" def_%v_4 
		 8: %v_3->== def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = for_snippet? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->noteable_type def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "Snippet" def_%v_4 
		 8: %v_3->== def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = noteable instanceMethod = true
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: GLOBALVAR $! def_%v_3 
BB 4
	outgoing: 5 6 9 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: %self->for_commit? def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_6[4.2,] 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->project def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %self->commit_id def_%v_8 %self[5.1,2.0,] 	 SYMBOL:	 ARGS:
		 3: %v_7->commit def_%v_9 %v_7[5.1,] %v_8[5.2,] 	 SYMBOL:	 ARGS:%v_8,
		 4: 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->super def_%v_10 %current_module[2.3,] %v_0[2.1,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_9 %v_10[6.1,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_5 %v_9[6.2,5.3,] 
		 1: 
		 2: %v_3[2.5,] 
BB 8
	outgoing: 14 
	datadep: 
	instructions:
		 0: 
BB 9
	outgoing: 10 11 13 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_11 
		 2: def_%v_12 %v_11[9.1,] 
		 3: BRANCH %v_12[9.2,] 
BB 10
	outgoing: 13 15 
	datadep: 
	instructions:
		 0: %v_11[9.1,] 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Nil def_%v_5 
		 2: 
		 3: %v_3[2.5,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: def_%v_13 
		 1: def_%v_14 %v_13[13.0,] %v_3[2.5,] 
		 2: %v_13[13.0,] 
BB 14
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %v_5[7.0,11.1,] %self[2.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = noteable_type= instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_noteable_type 
		 6: 
		 7: noteable_type->to_s def_%v_3 noteable_type[2.5,] 	 SYMBOL:	 ARGS:
		 8: %v_3->classify def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_4->constantize def_%v_5 %v_4[2.8,] 	 SYMBOL:	 ARGS:
		 10: %v_5->base_class def_%v_6 %v_5[2.9,] 	 SYMBOL:	 ARGS:
		 11: %v_6->to_s def_%v_7 %v_6[2.10,] 	 SYMBOL:	 ARGS:
		 12: %self->super def_%v_8 %current_module[2.3,] %v_7[2.11,] %v_0[2.1,] 	 SYMBOL:	 ARGS:%v_7,
		 13: RETURN %v_8[2.12,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reset_events_cache instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Event) def_%v_3 
		 7: %v_3->reset_event_cache_for def_%v_4 %v_3[2.6,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = downvote? instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->is_award def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->note def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_StringLiteral "thumbsdown" def_%v_5 
		 2: %v_4->== def_%v_6 %v_4[3.0,] %v_5[3.1,] 	 SYMBOL:	 ARGS:%v_5,
		 3: RETURN %v_6[3.2,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.6,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = upvote? instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->is_award def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->note def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_StringLiteral "thumbsup" def_%v_5 
		 2: %v_4->== def_%v_6 %v_4[3.0,] %v_5[3.1,] 	 SYMBOL:	 ARGS:%v_5,
		 3: RETURN %v_6[3.2,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.6,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = editable? instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->system? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->! def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->is_award def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_5->! def_%v_6 %v_5[3.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_6[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_4[2.7,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = cross_reference_not_visible_for? instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: 
		 7: %self->cross_reference? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->referenced_mentionables def_%v_4 %self[2.0,] user[2.5,] 	 SYMBOL:	 ARGS:user,
		 1: %v_4->empty? def_%v_5 %v_4[3.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_5[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.7,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_award! instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->awards_supported? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->contains_emoji_only? def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_3 %v_4[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.6,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: ATTRASSIGN %self->is_award 
		 3: 
		 4: %self->award_emoji_name def_%v_6 %self[5.2,2.0,] 	 SYMBOL:	 ARGS:
		 5: ATTRASSIGN %self->note %v_6[5.4,] 
		 6: RETURN %v_6[5.4,] %self[5.2,5.4,5.5,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = clear_blank_line_code! instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->line_code def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->blank? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: ATTRASSIGN %self->line_code 
		 1: COPY TYPE_Nil def_%v_5 
		 2: RETURN %self[3.0,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = awards_supported? instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->for_issue? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->for_merge_request? def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_3 %v_4[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.6,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: %self->diff_note? def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_5->! def_%v_6 %v_5[5.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_6[5.1,] %self[5.0,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_3[3.1,2.6,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = contains_emoji_only? instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->note def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "" def_%v_4 
		 8: COPY TYPE_StringLiteral "\A" def_%v_5 
		 9: (Banzai) def_%v_6 
		 10: (inherit Filter) def_%v_7 %v_6[2.9,] 
		 11: %v_7[2.10,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_6->const_missing def_%v_7 %v_6[2.9,] 	 SYMBOL:Filter,	 ARGS:Symbol,
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: (inherit EmojiFilter) def_%v_8 %v_7[3.0,2.10,] 
		 1: %v_8[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %v_7->const_missing def_%v_8 %v_7[3.0,2.10,] 	 SYMBOL:EmojiFilter,	 ARGS:Symbol,
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %v_8->emoji_pattern def_%v_9 %v_8[5.0,4.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_StringLiteral "\s?\Z" def_%v_10 
		 2: def_%v_11 %v_4[2.7,] %v_5[2.8,] %v_9[6.0,] %v_10[6.1,] 
		 3: %v_3->=~ def_%v_12 %v_3[2.6,] %v_11[6.2,] 	 SYMBOL:	 ARGS:%v_11,
		 4: RETURN %v_12[6.3,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = award_emoji_name instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->note def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: (Banzai) def_%v_4 
		 8: (inherit Filter) def_%v_5 %v_4[2.7,] 
		 9: %v_5[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_4->const_missing def_%v_5 %v_4[2.7,] 	 SYMBOL:Filter,	 ARGS:Symbol,
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: (inherit EmojiFilter) def_%v_6 %v_5[3.0,2.8,] 
		 1: %v_6[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %v_5->const_missing def_%v_6 %v_5[3.0,2.8,] 	 SYMBOL:EmojiFilter,	 ARGS:Symbol,
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %v_6->emoji_pattern def_%v_7 %v_6[5.0,4.0,] 	 SYMBOL:	 ARGS:
		 1: %v_3->match def_%v_8 %v_3[2.6,] %v_7[6.0,] 	 SYMBOL:	 ARGS:%v_7,
		 2: %v_8->[] def_%v_9 %v_8[6.1,] 	 SYMBOL:	 ARGS:Fixnum,
		 3: COPY TYPE_PASS def_original_name %v_9[6.2,] 
		 4: 
		 5: (AwardEmoji) def_%v_10 
		 6: %v_10->normilize_emoji_name def_%v_11 %v_10[6.5,] %v_9[6.2,] 	 SYMBOL:	 ARGS:original_name,
		 7: RETURN %v_11[6.6,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

