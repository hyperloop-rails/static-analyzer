SET IRMethod, name = cared instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->user def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: HASH-assignee_id- def_%v_4 %v_3[2.6,] 
		 8: %self->where def_%v_5 %self[2.0,2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = open_for instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->opened def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %self->user def_%v_4 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_3->assigned_to def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = in_projects instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->project_ids def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: HASH-project_id- def_%v_4 %v_3[2.6,] 
		 8: %self->where def_%v_5 %self[2.0,2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = without_due_date instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-due_date- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = due_before instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "issues.due_date < ?" def_%v_3 
		 7: %self->date def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %self->where def_%v_5 %self[2.0,2.7,] %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_3,%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.7,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = due_between instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "issues.due_date >= ?" def_%v_3 
		 7: %self->from_date def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %self->where def_%v_5 %self[2.0,2.7,] %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_3,%v_4,
		 9: COPY TYPE_StringLiteral "issues.due_date <= ?" def_%v_6 
		 10: %self->to_date def_%v_7 %self[2.0,2.7,2.8,] 	 SYMBOL:	 ARGS:
		 11: %v_5->where def_%v_8 %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] 	 SYMBOL:	 ARGS:%v_6,%v_7,
		 12: RETURN %v_8[2.11,] %self[2.0,2.7,2.8,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = order_due_date_asc instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "issues.due_date IS NULL, issues.due_date ASC" def_%v_3 
		 7: %self->reorder def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = order_due_date_desc instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "issues.due_date IS NULL, issues.due_date DESC" def_%v_3 
		 7: %self->reorder def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = cared instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->user def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: HASH-assignee_id- def_%v_4 %v_3[2.6,] 
		 8: %self->where def_%v_5 %self[2.0,2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = open_for instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->opened def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %self->user def_%v_4 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_3->assigned_to def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = in_projects instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->project_ids def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: HASH-project_id- def_%v_4 %v_3[2.6,] 
		 8: %self->where def_%v_5 %self[2.0,2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = without_due_date instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-due_date- def_%v_3 
		 7: %self->where def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = due_before instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "issues.due_date < ?" def_%v_3 
		 7: %self->date def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %self->where def_%v_5 %self[2.0,2.7,] %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_3,%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.7,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = due_between instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "issues.due_date >= ?" def_%v_3 
		 7: %self->from_date def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %self->where def_%v_5 %self[2.0,2.7,] %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_3,%v_4,
		 9: COPY TYPE_StringLiteral "issues.due_date <= ?" def_%v_6 
		 10: %self->to_date def_%v_7 %self[2.0,2.7,2.8,] 	 SYMBOL:	 ARGS:
		 11: %v_5->where def_%v_8 %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] 	 SYMBOL:	 ARGS:%v_6,%v_7,
		 12: RETURN %v_8[2.11,] %self[2.0,2.7,2.8,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = order_due_date_asc instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "issues.due_date IS NULL, issues.due_date ASC" def_%v_3 
		 7: %self->reorder def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = order_due_date_desc instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "issues.due_date IS NULL, issues.due_date DESC" def_%v_3 
		 7: %self->reorder def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = hook_attrs instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->attributes def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = visible_to_user instanceMethod = false
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: 
		 7: user->blank? def_%v_3 user[2.5,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 9 
	datadep: 
	instructions:
		 0: HASH-confidential- def_%v_4 
		 1: %self->where def_%v_5 %self[2.0,] %v_4[3.0,] 	 SYMBOL:	 ARGS:%v_4,
		 2: RETURN %v_5[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
		 1: 
		 2: user->admin? def_%v_7 user[2.5,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_7[4.2,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: %self->all def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: RETURN %v_8[6.0,] %self[6.0,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_9 
		 1: 
		 2: COPY TYPE_StringLiteral "issues.confidential = false OR (issues.confidential = true AND (issues.author_id = :user_id OR issues.assignee_id = :user_id OR issues.project_id IN(:project_ids)))" def_%v_10 
		 3: user->id def_%v_11 user[2.5,] 	 SYMBOL:	 ARGS:
		 4: user->authorized_projects def_%v_12 user[7.3,2.5,] 	 SYMBOL:	 ARGS:
		 5: %v_12->select def_%v_13 %v_12[7.4,] 	 SYMBOL:id,	 ARGS:Symbol,
		 6: HASH-user_id-project_ids- def_%v_14 %v_11[7.3,] %v_13[7.5,] 
		 7: %self->where def_%v_15 %self[2.0,] %v_10[7.2,] %v_14[7.6,] 	 SYMBOL:	 ARGS:%v_10,%v_14,
		 8: RETURN %v_15[7.7,] %self[7.7,2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reference_prefix instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "#" def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reference_pattern instanceMethod = false
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->reference_pattern def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "" def_%v_6 
		 1: COPY TYPE_StringLiteral "
      (" def_%v_7 
		 2: 
		 3: (Project) def_%v_8 
		 4: %v_8->reference_pattern def_%v_9 %v_8[5.3,] 	 SYMBOL:	 ARGS:
		 5: COPY TYPE_StringLiteral ")?
      " def_%v_10 
		 6: 
		 7: (Regexp) def_%v_11 
		 8: %self->reference_prefix def_%v_12 %self[2.0,] 	 SYMBOL:	 ARGS:
		 9: %v_11->escape def_%v_13 %v_11[5.7,] %v_12[5.8,] 	 SYMBOL:	 ARGS:%v_12,
		 10: COPY TYPE_StringLiteral "(?<issue>\d+)
    " def_%v_14 
		 11: def_%v_15 %v_6[5.0,] %v_7[5.1,] %v_9[5.4,] %v_10[5.5,] %v_13[5.9,] %v_14[5.10,] 
		 12: ATTRASSIGN %self->reference_pattern %v_15[5.11,] 
		 13: RETURN %v_15[5.11,] %self[5.8,5.12,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = link_reference_pattern instanceMethod = false
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->link_reference_pattern def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "issues" def_%v_6 
		 1: COPY TYPE_Regexp def_%v_7 
		 2: %self->super def_%v_8 %current_module[2.3,] %v_6[5.0,] %v_0[2.1,] 	 SYMBOL:	 ARGS:%v_6,%v_7,
		 3: ATTRASSIGN %self->link_reference_pattern %v_8[5.2,] 
		 4: RETURN %v_8[5.2,] %self[5.3,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = sort instanceMethod = false
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_method 
		 6: 
		 7: method->to_s def_%v_3 method[2.5,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_StringLiteral "due_date_asc" def_%v_6 
		 9: def_%v_5 %v_6[2.8,] %v_3[2.7,] 
		 10: BRANCH %v_5[2.9,] 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "due_date_desc" def_%v_8 
		 1: def_%v_7 %v_8[3.0,] %v_3[2.7,] 
		 2: BRANCH %v_7[3.1,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->super def_%v_11 %current_module[2.3,] method[2.5,] %v_0[2.1,] 	 SYMBOL:	 ARGS:method,
		 2: COPY TYPE_PASS def_%v_4 %v_11[4.1,] 
		 3: RETURN %v_11[4.1,] %self[2.0,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->order_due_date_asc def_%v_9 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_4 %v_9[5.1,] 
		 3: RETURN %v_9[5.1,] %self[5.1,2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->order_due_date_desc def_%v_10 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_4 %v_10[6.1,] 
		 3: RETURN %v_10[6.1,] %self[6.1,2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_reference instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_from_project 
		 6: from_project[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_from_project 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->class def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_3->reference_prefix def_%v_4 %v_3[4.1,] 	 SYMBOL:	 ARGS:
		 3: %self->iid def_%v_5 %self[4.1,2.0,] 	 SYMBOL:	 ARGS:
		 4: BUILDSTRING def_%v_6 %v_4[4.2,] %v_5[4.3,] 
		 5: COPY TYPE_PASS def_reference %v_6[4.4,] 
		 6: 
		 7: %self->cross_project_reference? def_%v_7 %self[4.1,4.3,2.0,] from_project[3.0,2.5,] 	 SYMBOL:	 ARGS:from_project,
		 8: BRANCH %v_7[4.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->project def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_8->to_reference def_%v_9 %v_8[5.1,] 	 SYMBOL:	 ARGS:
		 3: %v_9->+ def_%v_10 %v_9[5.2,] reference[4.5,] 	 SYMBOL:	 ARGS:reference,
		 4: COPY TYPE_PASS def_reference %v_10[5.3,] 
		 5: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_10 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: RETURN reference[5.4,4.5,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = referenced_merge_requests instanceMethod = true
BB 1
	outgoing: 13 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_current_user 
		 6: current_user[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_current_user 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_4 %self[2.0,] 
		 2: COPY TYPE_PASS def_%v_3 %v_4[4.1,] 
		 3: %v_4[4.1,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: GETFIELD %self->referenced_merge_requests def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[5.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: BRANCH %v_3[5.1,4.2,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: HASH- def_%v_6 
		 1: ATTRASSIGN %self->referenced_merge_requests %v_6[7.0,] 
		 2: COPY TYPE_PASS def_%v_5 %v_6[7.0,] 
BB 8
	outgoing: 9 12 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->referenced_merge_requests def_%v_7 %self[7.1,2.0,] 
		 2: %v_7->[] def_%v_8 %v_7[8.1,] current_user[3.0,2.5,] 	 SYMBOL:	 ARGS:current_user,
		 3: BRANCH %v_8[8.2,] 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: 
		 1: (Gitlab) def_%v_9 
		 2: (inherit ReferenceExtractor) def_%v_10 %v_9[9.1,] 
		 3: %v_10[9.2,] 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: %v_9->const_missing def_%v_10 %v_9[9.1,] 	 SYMBOL:ReferenceExtractor,	 ARGS:Symbol,
BB 11
	outgoing: 13 
	datadep: 
	instructions:
		 0: %v_10->lazily def_%v_11 %v_10[10.0,9.2,] %self[7.1,2.0,] 	 SYMBOL:	 ARGS:%v_10,
CLOSURE BEGIN: %self[7.1,2.0,] note[] current_user[3.0,2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%cl_1_3 %self[2.0,] 
		 2: %self->notes def_%cl_1_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 
		 4: %cl_1_5->flat_map def_%cl_1_6 %cl_1_5[3.3,] %self[3.2,2.0,] 	 SYMBOL:	 ARGS:%cl_1_5,
CLOSURE BEGIN: note[] current_user[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_note 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: note->all_references def_%cl_2_3 note[2.2,] current_user[] 	 SYMBOL:	 ARGS:current_user,
		 2: %cl_2_3->merge_requests def_%cl_2_4 %cl_2_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: RETURN %cl_2_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 5: RETURN %cl_1_6[3.4,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 1: %v_11->sort_by def_%v_12 %v_11[11.0,] 	 SYMBOL:iid,	 ARGS:
		 2: %v_12->uniq def_%v_13 %v_12[11.1,] 	 SYMBOL:	 ARGS:
		 3: %v_7->[]= def_%v_8 %v_7[8.1,] current_user[3.0,2.5,] %v_13[11.2,] 	 SYMBOL:	 ARGS:current_user,%v_13,
		 4: RETURN %v_13[11.2,] %self[7.1,2.0,] 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: RETURN %v_8[8.2,] %self[7.1,2.0,] 
BB 13
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = related_branches instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_current_user 
		 6: 
		 7: %self->project def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->repository def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_4->branch_names def_%v_5 %v_4[2.8,] 	 SYMBOL:	 ARGS:
		 10: %v_5->select def_%v_6 %v_5[2.9,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:%v_5,
CLOSURE BEGIN: %self[2.0,2.7,] branch[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_branch 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "" def_%cl_1_3 
		 2: COPY TYPE_StringLiteral "\A" def_%cl_1_4 
		 3: %self->iid def_%cl_1_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_StringLiteral "-(?!\d+-stable)" def_%cl_1_6 
		 5: def_%cl_1_7 %cl_1_3[3.1,] %cl_1_4[3.2,] %cl_1_5[3.3,] %cl_1_6[3.4,] 
		 6: branch->=~ def_%cl_1_8 branch[2.2,] %cl_1_7[3.5,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 7: RETURN %cl_1_8[3.6,] %self[3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[4.0,] 
		 2: RETURN %cl_1_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: COPY TYPE_PASS def_branches_with_iid %v_6[2.10,] 
		 12: 
		 13: %self->referenced_merge_requests def_%v_7 %self[2.0,2.7,] current_user[2.5,] 	 SYMBOL:	 ARGS:current_user,
		 14: %v_7->map def_%v_8 %v_7[2.13,] 	 SYMBOL:source_branch,	 ARGS:
		 15: COPY TYPE_PASS def_branches_with_merge_request %v_8[2.14,] 
		 16: 
		 17: branches_with_iid->- def_%v_9 branches_with_iid[2.11,] %v_8[2.14,] 	 SYMBOL:	 ARGS:branches_with_merge_request,
		 18: RETURN %v_9[2.17,] %self[2.0,2.7,2.13,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reset_events_cache instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Event) def_%v_3 
		 7: %v_3->reset_event_cache_for def_%v_4 %v_3[2.6,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = source_project instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->project def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = closed_by_merge_requests instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_current_user 
		 6: current_user[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_current_user 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->open? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_3[4.1,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: %self->notes def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %v_6->system def_%v_7 %v_6[5.2,] 	 SYMBOL:	 ARGS:
		 4: %v_7->flat_map def_%v_8 %v_7[5.3,] %self[5.2,2.0,] 	 SYMBOL:	 ARGS:%v_7,
CLOSURE BEGIN: note[] current_user[3.0,2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_note 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: note->all_references def_%cl_1_3 note[2.2,] current_user[] 	 SYMBOL:	 ARGS:current_user,
		 2: %cl_1_3->merge_requests def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 5: %v_8->uniq def_%v_9 %v_8[5.4,] 	 SYMBOL:	 ARGS:
		 6: %v_9->select def_%v_10 %v_9[5.5,] %self[5.2,2.0,] 	 SYMBOL:	 ARGS:%v_9,
CLOSURE BEGIN: mr[] %self[5.2,2.0,] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_mr 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: mr->open? def_%cl_2_3 mr[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_2_3[3.1,] 
BB 4
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: mr->closes_issue? def_%cl_2_4 mr[2.2,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
		 1: RETURN %cl_2_4[4.0,] %self[2.0,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[6.0,] 
		 2: RETURN %cl_2_6[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_10[5.6,] %self[5.2,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_5 
		 1: RETURN %v_5[6.0,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = moved? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->moved_to def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->nil? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->! def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = can_move? instanceMethod = true
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: RECEIVECONSTARG def_to_project 
		 7: to_project[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_to_project 
BB 4
	outgoing: 5 9 
	datadep: 
	instructions:
		 0: 
		 1: BRANCH to_project[3.0,2.6,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: user->can? def_%v_3 user[2.5,] to_project[3.0,2.6,] 	 SYMBOL:admin_issue,	 ARGS:Symbol,to_project,
		 2: BRANCH %v_3[5.1,] 
BB 6
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
BB 7
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
BB 10
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->moved? def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_5->! def_%v_6 %v_5[10.1,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_6[10.2,] 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: %self->persisted? def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_6 %v_7[11.0,] 
BB 12
	outgoing: 13 14 
	datadep: 
	instructions:
		 0: BRANCH %v_6[11.1,10.2,] 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: %self->project def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: user->can? def_%v_9 user[2.5,] %v_8[13.0,] 	 SYMBOL:admin_issue,	 ARGS:Symbol,%v_8,
		 2: RETURN %v_9[13.1,] %self[13.0,2.0,] 
BB 14
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %v_6[11.1,10.2,] %self[2.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_branch_name instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->confidential? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->iid def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "-confidential-issue" def_%v_5 
		 3: BUILDSTRING def_%v_6 %v_4[3.1,] %v_5[3.2,] 
		 4: RETURN %v_6[3.3,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->iid def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "-" def_%v_8 
		 3: %self->title def_%v_9 %self[4.1,2.0,] 	 SYMBOL:	 ARGS:
		 4: %v_9->parameterize def_%v_10 %v_9[4.3,] 	 SYMBOL:	 ARGS:
		 5: BUILDSTRING def_%v_11 %v_7[4.1,] %v_8[4.2,] %v_10[4.4,] 
		 6: RETURN %v_11[4.5,] %self[4.1,4.3,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = can_be_worked_on? instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_current_user 
		 6: 
		 7: %self->closed? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->! def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: 
		 1: %self->project def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_5->forked? def_%v_6 %v_5[3.1,] 	 SYMBOL:	 ARGS:
		 3: %v_6->! def_%v_7 %v_6[3.2,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_PASS def_%v_4 %v_7[3.3,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_4[3.4,2.8,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->related_branches def_%v_8 %self[2.0,] current_user[2.5,] 	 SYMBOL:	 ARGS:current_user,
		 1: %v_8->empty? def_%v_9 %v_8[5.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_4 %v_9[5.1,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: BRANCH %v_4[5.2,3.4,2.8,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: %self->closed_by_merge_requests def_%v_10 %self[2.0,] current_user[2.5,] 	 SYMBOL:	 ARGS:current_user,
		 1: %v_10->empty? def_%v_11 %v_10[7.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_11[7.1,] %self[7.0,2.0,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %v_4[5.2,3.4,2.8,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = overdue? instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->due_date def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->try def_%v_4 %v_3[2.6,] 	 SYMBOL:past?,	 ARGS:Symbol,
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_4[2.7,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

