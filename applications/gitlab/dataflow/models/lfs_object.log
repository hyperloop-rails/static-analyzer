SET IRMethod, name = storage_project instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_project 
		 6: 
		 7: COPY TYPE_PASS def_%v_3 project[2.5,] 
		 8: BRANCH project[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: project->forked? def_%v_4 project[2.5,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_3 %v_4[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: project->forked_from_project def_%v_5 project[2.5,] 	 SYMBOL:	 ARGS:
		 2: %self->storage_project def_%v_6 %self[2.0,] %v_5[5.1,] 	 SYMBOL:	 ARGS:%v_5,
		 3: RETURN %v_6[5.2,] %self[5.2,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: RETURN project[2.5,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = project_allowed_access? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_project 
		 6: 
		 7: %self->projects def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %self->storage_project def_%v_4 %self[2.0,2.7,] project[2.5,] 	 SYMBOL:	 ARGS:project,
		 9: %v_4->id def_%v_5 %v_4[2.8,] 	 SYMBOL:	 ARGS:
		 10: %v_3->exists? def_%v_6 %v_3[2.7,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_5,
		 11: RETURN %v_6[2.10,] %self[2.0,2.7,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

