SET IRMethod, name = build_discussion_id instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_noteable_type 
		 6: RECEIVEARG def_noteable_id 
		 7: RECEIVEARG def_line_code 
		 8: RECEIVECONSTARG def_active 
		 9: active[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Boolean def_active 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->super def_%v_3 %current_module[2.3,] noteable_type[2.5,] noteable_id[2.6,] %v_0[2.1,] 	 SYMBOL:	 ARGS:noteable_type,noteable_id,
		 2: COPY TYPE_Array def_%v_4 %v_3[4.1,] line_code[2.7,] active[3.0,2.8,] 
		 3: COPY TYPE_StringLiteral "-" def_%v_5 
		 4: %v_4->join def_%v_6 %v_4[4.2,] %v_5[4.3,] 	 SYMBOL:	 ARGS:%v_5,
		 5: RETURN %v_6[4.4,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = diff_note? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = legacy_diff_note? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = discussion_id instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->discussion_id def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 8 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: %self->class def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %self->noteable_type def_%v_7 %self[5.0,2.0,] 	 SYMBOL:	 ARGS:
		 2: %self->noteable_id def_%v_8 %self[5.0,5.1,2.0,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_8[5.2,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %self->commit_id def_%v_9 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_8 %v_9[6.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: %self->line_code def_%v_10 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %self->active? def_%v_11 %self[7.0,2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_6->build_discussion_id def_%v_12 %v_6[5.0,] %v_7[5.1,] %v_8[6.1,5.2,] %v_10[7.0,] %v_11[7.1,] 	 SYMBOL:	 ARGS:%v_7,%v_8,%v_10,%v_11,
		 3: ATTRASSIGN %self->discussion_id %v_12[7.2,] 
		 4: RETURN %v_12[7.2,] %self[7.0,7.1,7.3,2.0,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = diff_file_hash instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->line_code def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->line_code def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_StringLiteral "_" def_%v_5 
		 2: %v_4->split def_%v_6 %v_4[3.0,] %v_5[3.1,] 	 SYMBOL:	 ARGS:%v_5,
		 3: %v_6->[] def_%v_7 %v_6[3.2,] 	 SYMBOL:	 ARGS:Fixnum,
		 4: RETURN %v_7[3.3,] %self[3.0,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = diff_old_line instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->line_code def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->line_code def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_StringLiteral "_" def_%v_5 
		 2: %v_4->split def_%v_6 %v_4[3.0,] %v_5[3.1,] 	 SYMBOL:	 ARGS:%v_5,
		 3: %v_6->[] def_%v_7 %v_6[3.2,] 	 SYMBOL:	 ARGS:Fixnum,
		 4: %v_7->to_i def_%v_8 %v_7[3.3,] 	 SYMBOL:	 ARGS:
		 5: RETURN %v_8[3.4,] %self[3.0,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = diff_new_line instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->line_code def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->line_code def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_StringLiteral "_" def_%v_5 
		 2: %v_4->split def_%v_6 %v_4[3.0,] %v_5[3.1,] 	 SYMBOL:	 ARGS:%v_5,
		 3: %v_6->[] def_%v_7 %v_6[3.2,] 	 SYMBOL:	 ARGS:Fixnum,
		 4: %v_7->to_i def_%v_8 %v_7[3.3,] 	 SYMBOL:	 ARGS:
		 5: RETURN %v_8[3.4,] %self[3.0,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = diff instanceMethod = true
BB 1
	outgoing: 14 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 12 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->st_diff def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->respond_to? def_%v_4 %v_3[2.6,] 	 SYMBOL:map,	 ARGS:Symbol,
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: def_%v_6 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_5 %v_6[3.0,] 
		 2: %v_6[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: GETFIELD %self->diff def_%v_7 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_5 %v_7[4.0,] 
BB 5
	outgoing: 6 11 
	datadep: 
	instructions:
		 0: BRANCH %v_5[4.1,3.1,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: (Gitlab) def_%v_8 
		 1: (inherit Git) def_%v_9 %v_8[6.0,] 
		 2: %v_9[6.1,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: %v_8->const_missing def_%v_9 %v_8[6.0,] 	 SYMBOL:Git,	 ARGS:Symbol,
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: (inherit Diff) def_%v_10 %v_9[7.0,6.1,] 
		 1: %v_10[8.0,] 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: %v_9->const_missing def_%v_10 %v_9[7.0,6.1,] 	 SYMBOL:Diff,	 ARGS:Symbol,
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: %self->st_diff def_%v_11 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_10->new def_%v_12 %v_10[9.0,8.0,] %v_11[10.0,] 	 SYMBOL:	 ARGS:%v_11,
		 2: ATTRASSIGN %self->diff %v_12[10.1,] 
		 3: COPY TYPE_PASS def_%v_7 %v_12[10.1,] 
BB 11
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN %v_7[10.3,4.0,] %self[10.2,2.0,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 14
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = diff_file_path instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->diff def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->new_path def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->presence def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->diff def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_6->old_path def_%v_7 %v_6[3.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_7[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_5[2.8,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = diff_lines instanceMethod = true
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->diff_lines def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 10 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: (Gitlab) def_%v_6 
		 1: (inherit Diff) def_%v_7 %v_6[5.0,] 
		 2: %v_7[5.1,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %v_6->const_missing def_%v_7 %v_6[5.0,] 	 SYMBOL:Diff,	 ARGS:Symbol,
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: (inherit Parser) def_%v_8 %v_7[6.0,5.1,] 
		 1: %v_8[7.0,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: %v_7->const_missing def_%v_8 %v_7[6.0,5.1,] 	 SYMBOL:Parser,	 ARGS:Symbol,
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: %v_8->new def_%v_9 %v_8[8.0,7.0,] 	 SYMBOL:	 ARGS:
		 1: %self->diff def_%v_10 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_10->diff def_%v_11 %v_10[9.1,] 	 SYMBOL:	 ARGS:
		 3: %v_11->each_line def_%v_12 %v_11[9.2,] 	 SYMBOL:	 ARGS:
		 4: %v_9->parse def_%v_13 %v_9[9.0,] %v_12[9.3,] 	 SYMBOL:	 ARGS:%v_12,
		 5: ATTRASSIGN %self->diff_lines %v_13[9.4,] 
		 6: RETURN %v_13[9.4,] %self[9.1,9.5,2.0,] 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = diff_line instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->diff_line def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: %self->diff_lines def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_6->find def_%v_7 %v_6[5.0,] %self[5.0,2.0,] 	 SYMBOL:	 ARGS:%v_6,
CLOSURE BEGIN: %self[5.0,2.0,] line[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_line 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->generate_line_code def_%cl_1_3 %self[2.0,] line[2.2,] 	 SYMBOL:	 ARGS:line,
		 2: %self->line_code def_%cl_1_4 %self[3.1,2.0,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_3->== def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: RETURN %cl_1_5[3.3,] %self[3.1,3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: ATTRASSIGN %self->diff_line %v_7[5.1,] 
		 3: RETURN %v_7[5.1,] %self[5.0,5.2,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = diff_line_text instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->diff_line def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->try def_%v_4 %v_3[2.6,] 	 SYMBOL:text,	 ARGS:Symbol,
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = diff_line_type instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->diff_line def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->try def_%v_4 %v_3[2.6,] 	 SYMBOL:type,	 ARGS:Symbol,
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = highlighted_diff_lines instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Gitlab) def_%v_3 
		 7: (inherit Diff) def_%v_4 %v_3[2.6,] 
		 8: %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.6,] 	 SYMBOL:Diff,	 ARGS:Symbol,
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: (inherit Highlight) def_%v_5 %v_4[3.0,2.7,] 
		 1: %v_5[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %v_4->const_missing def_%v_5 %v_4[3.0,2.7,] 	 SYMBOL:Highlight,	 ARGS:Symbol,
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %self->diff_lines def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_5->new def_%v_7 %v_5[5.0,4.0,] %v_6[6.0,] 	 SYMBOL:	 ARGS:%v_6,
		 2: %v_7->highlight def_%v_8 %v_7[6.1,] 	 SYMBOL:	 ARGS:
		 3: RETURN %v_8[6.2,] %self[6.0,2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = truncated_diff_lines instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Fixnum def_max_number_of_lines 
		 7: 
		 8: COPY TYPE_Nil def_prev_match_line 
		 9: 
		 10: COPY TYPE_Array def_%v_3 
		 11: COPY TYPE_PASS def_prev_lines %v_3[2.10,] 
		 12: 
		 13: %self->highlighted_diff_lines def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
BB 3
	outgoing: 5 4 
	datadep: 
	instructions:
		 0: %v_4->each def_%v_5 %v_4[2.13,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: line[] prev_lines[2.11,] %self[2.0,] max_number_of_lines[2.6,] 
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_line 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 13 
	datadep: 
	instructions:
		 0: 
		 1: line->type def_%cl_1_3 line[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "match" def_%cl_1_4 
		 3: %cl_1_3->== def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: BRANCH %cl_1_5[3.3,] 
BB 4
	outgoing: 13 15 
	datadep: 
	instructions:
		 0: 
		 1: prev_lines->clear def_%cl_1_6 prev_lines[] 	 SYMBOL:	 ARGS:
		 2: 
		 3: COPY TYPE_PASS def_prev_match_line line[2.2,] 
		 4: COPY TYPE_PASS def_%cl_1_7 line[2.2,] 
		 5: RETURN line[2.2,] %self[2.0,] 
BB 5
	outgoing: 6 7 13 
	datadep: 
	instructions:
		 0: 
		 1: prev_lines-><< def_%cl_1_8 prev_lines[] line[2.2,] 	 SYMBOL:	 ARGS:line,
		 2: 
		 3: %self->generate_line_code def_%cl_1_9 %self[2.0,] line[2.2,] 	 SYMBOL:	 ARGS:line,
		 4: %self->line_code def_%cl_1_10 %self[5.3,2.0,] 	 SYMBOL:	 ARGS:
		 5: %cl_1_9->== def_%cl_1_11 %cl_1_9[5.3,] %cl_1_10[5.4,] 	 SYMBOL:	 ARGS:%cl_1_10,
		 6: BRANCH %cl_1_11[5.5,] 
BB 6
	outgoing: 15 
	datadep: 
	instructions:
		 0: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_12 
BB 8
	outgoing: 9 10 13 
	datadep: 
	instructions:
		 0: 
		 1: prev_lines->length def_%cl_1_13 prev_lines[] 	 SYMBOL:	 ARGS:
		 2: %cl_1_13->>= def_%cl_1_14 %cl_1_13[8.1,] max_number_of_lines[] 	 SYMBOL:	 ARGS:max_number_of_lines,
		 3: BRANCH %cl_1_14[8.2,] 
BB 9
	outgoing: 11 13 
	datadep: 
	instructions:
		 0: prev_lines->shift def_%cl_1_15 prev_lines[] 	 SYMBOL:	 ARGS:
		 1: 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_15 
BB 11
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %cl_1_15[10.0,9.0,] %self[2.0,] 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: def_%cl_1_16 
		 1: def_%cl_1_17 %cl_1_16[13.0,] 
		 2: RETURN %cl_1_17[13.1,] %self[2.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: prev_match_line[4.3,] 
		 1: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: def_%v_6 
		 1: def_%v_5 %v_6[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: RETURN prev_lines[2.11,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = active? instanceMethod = true
BB 1
	outgoing: 22 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_3 %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 22 
	datadep: 
	instructions:
		 0: GETFIELD %self->active def_%v_4 %self[2.0,] 
		 1: RETURN %v_4[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: %self->for_commit? def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_6[4.2,] 
BB 6
	outgoing: 22 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 7
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_7 
		 1: 
		 2: %self->diff def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_8[7.2,] 
BB 9
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_9 
		 1: 
		 2: %self->noteable def_%v_10 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_10[9.2,] 
BB 10
	outgoing: 22 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 12
	outgoing: 15 20 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_11 
		 1: 
		 2: %self->find_noteable_diff def_%v_12 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_PASS def_noteable_diff %v_12[12.2,] 
		 4: 
		 5: BRANCH %v_12[12.2,] 
BB 13
	outgoing: 22 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 15
	outgoing: 16 17 
	datadep: 
	instructions:
		 0: 
		 1: (Gitlab) def_%v_13 
		 2: (inherit Diff) def_%v_14 %v_13[15.1,] 
		 3: %v_14[15.2,] 
BB 16
	outgoing: 17 
	datadep: 
	instructions:
		 0: %v_13->const_missing def_%v_14 %v_13[15.1,] 	 SYMBOL:Diff,	 ARGS:Symbol,
BB 17
	outgoing: 18 19 
	datadep: 
	instructions:
		 0: (inherit Parser) def_%v_15 %v_14[16.0,15.2,] 
		 1: %v_15[17.0,] 
BB 18
	outgoing: 19 
	datadep: 
	instructions:
		 0: %v_14->const_missing def_%v_15 %v_14[16.0,15.2,] 	 SYMBOL:Parser,	 ARGS:Symbol,
BB 19
	outgoing: 21 
	datadep: 
	instructions:
		 0: %v_15->new def_%v_16 %v_15[18.0,17.0,] 	 SYMBOL:	 ARGS:
		 1: noteable_diff->diff def_%v_17 noteable_diff[12.3,] 	 SYMBOL:	 ARGS:
		 2: %v_17->each_line def_%v_18 %v_17[19.1,] 	 SYMBOL:	 ARGS:
		 3: %v_16->parse def_%v_19 %v_16[19.0,] %v_18[19.2,] 	 SYMBOL:	 ARGS:%v_18,
		 4: COPY TYPE_PASS def_parsed_lines %v_19[19.3,] 
		 5: 
		 6: %v_19->any? def_%v_20 %v_19[19.3,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_19,
CLOSURE BEGIN: line_obj[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_line_obj 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: line_obj->text def_%cl_1_3 line_obj[2.2,] 	 SYMBOL:	 ARGS:
		 2: %self->diff_line_text def_%cl_1_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_3->== def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: RETURN %cl_1_5[3.3,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: ATTRASSIGN %self->active %v_20[19.6,] 
		 8: 
BB 20
	outgoing: 21 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->active 
		 2: COPY TYPE_Boolean def_%v_20 
BB 21
	outgoing: 22 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->active def_%v_21 %self[20.1,19.7,2.0,] 
		 2: RETURN %v_21[21.1,] %self[20.1,19.7,2.0,] 
BB 22
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find_diff instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->noteable def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: def_%v_5 %self[2.0,] 
		 3: BRANCH %v_5[3.2,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: GETFIELD %self->diff def_%v_6 %self[2.0,] 
		 1: RETURN %v_6[6.0,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_7 
		 1: 
		 2: %self->noteable def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: (Commit) def_%v_9 
		 4: %v_9->max_diff_options def_%v_10 %v_9[7.3,] 	 SYMBOL:	 ARGS:
		 5: %v_8->diffs def_%v_11 %v_8[7.2,] %v_10[7.4,] 	 SYMBOL:	 ARGS:%v_10,
		 6: %v_11->find def_%v_12 %v_11[7.5,] %self[7.2,2.0,] 	 SYMBOL:	 ARGS:%v_11,
CLOSURE BEGIN: d[] %self[7.2,2.0,] 
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_d 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 7 8 
	datadep: 
	instructions:
		 0: 
		 1: d->new_path def_%cl_1_3 d[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 5 6 8 
	datadep: 
	instructions:
		 0: (Digest) def_%cl_1_4 
		 1: (inherit SHA1) def_%cl_1_5 %cl_1_4[4.0,] 
		 2: %cl_1_5[4.1,] 
BB 5
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: %cl_1_4->const_missing def_%cl_1_5 %cl_1_4[4.0,] 	 SYMBOL:SHA1,	 ARGS:Symbol,
BB 6
	outgoing: 8 10 
	datadep: 
	instructions:
		 0: d->new_path def_%cl_1_6 d[2.2,] 	 SYMBOL:	 ARGS:
		 1: %cl_1_5->hexdigest def_%cl_1_7 %cl_1_5[5.0,4.1,] %cl_1_6[6.0,] 	 SYMBOL:	 ARGS:%cl_1_6,
		 2: %self->diff_file_hash def_%cl_1_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_7->== def_%cl_1_9 %cl_1_7[6.1,] %cl_1_8[6.2,] 	 SYMBOL:	 ARGS:%cl_1_8,
		 4: RETURN %cl_1_9[6.3,] %self[6.2,2.0,] 
BB 7
	outgoing: 10 
	datadep: 
	instructions:
		 0: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: def_%cl_1_10 
		 1: def_%cl_1_11 %cl_1_10[8.0,] 
		 2: RETURN %cl_1_11[8.1,] %self[2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: ATTRASSIGN %self->diff %v_12[7.6,] 
		 8: RETURN %v_12[7.6,] %self[7.2,7.7,2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_diff instanceMethod = true
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->for_merge_request? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->diff_for_line_code def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_diff %v_5[4.0,] 
		 2: COPY TYPE_PASS def_%v_4 %v_5[4.0,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_6 diff[4.1,] 
		 2: COPY TYPE_PASS def_%v_7 diff[4.1,] 
		 3: BRANCH diff[4.1,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %self->find_diff def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_diff %v_8[6.0,] 
		 2: COPY TYPE_PASS def_%v_7 %v_8[6.0,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: BRANCH diff[6.1,4.1,] 
BB 8
	outgoing: 11 
	datadep: 
	instructions:
		 0: diff->to_hash def_%v_9 diff[6.1,4.1,] 	 SYMBOL:	 ARGS:
		 1: ATTRASSIGN %self->st_diff %v_9[8.0,] 
		 2: RETURN %v_9[8.0,] %self[8.1,2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = diff_for_line_code instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->noteable_type def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %self->line_code def_%v_4 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 8: HASH-noteable_type-line_code- def_%v_5 %v_3[2.6,] %v_4[2.7,] 
		 9: COPY TYPE_PASS def_attributes %v_5[2.8,] 
		 10: 
		 11: %self->for_commit? def_%v_6 %self[2.0,2.6,2.7,] 	 SYMBOL:	 ARGS:
		 12: BRANCH %v_6[2.11,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->commit_id def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: ATTRASSIGN attributes->[] %v_7[3.1,] 
		 3: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->noteable_id def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: ATTRASSIGN attributes->[] %v_8[4.1,] 
		 3: COPY TYPE_PASS def_%v_7 %v_8[4.1,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->class def_%v_9 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_9->where def_%v_10 %v_9[5.1,] attributes[4.2,3.2,2.9,] 	 SYMBOL:	 ARGS:attributes,
		 3: %v_10->last def_%v_11 %v_10[5.2,] 	 SYMBOL:	 ARGS:
		 4: %v_11->try def_%v_12 %v_11[5.3,] 	 SYMBOL:diff,	 ARGS:Symbol,
		 5: RETURN %v_12[5.4,] %self[5.1,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = generate_line_code instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_line 
		 6: 
		 7: (Gitlab) def_%v_3 
		 8: (inherit Diff) def_%v_4 %v_3[2.7,] 
		 9: %v_4[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.7,] 	 SYMBOL:Diff,	 ARGS:Symbol,
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: (inherit LineCode) def_%v_5 %v_4[3.0,2.8,] 
		 1: %v_5[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %v_4->const_missing def_%v_5 %v_4[3.0,2.8,] 	 SYMBOL:LineCode,	 ARGS:Symbol,
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %self->diff_file_path def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: line->new_pos def_%v_7 line[2.5,] 	 SYMBOL:	 ARGS:
		 2: line->old_pos def_%v_8 line[6.1,2.5,] 	 SYMBOL:	 ARGS:
		 3: %v_5->generate def_%v_9 %v_5[5.0,4.0,] %v_6[6.0,] %v_7[6.1,] %v_8[6.2,] 	 SYMBOL:	 ARGS:%v_6,%v_7,%v_8,
		 4: RETURN %v_9[6.3,] %self[6.0,2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find_noteable_diff instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->noteable def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: (Commit) def_%v_4 
		 8: %v_4->max_diff_options def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_3->diffs def_%v_6 %v_3[2.6,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_5,
		 10: COPY TYPE_PASS def_diffs %v_6[2.9,] 
		 11: 
		 12: %v_6->find def_%v_7 %v_6[2.9,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_6,
CLOSURE BEGIN: d[] %self[2.0,2.6,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_d 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: d->new_path def_%cl_1_3 d[2.2,] 	 SYMBOL:	 ARGS:
		 2: %self->diff def_%cl_1_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->new_path def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %cl_1_3->== def_%cl_1_6 %cl_1_3[3.1,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 5: RETURN %cl_1_6[3.4,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 13: RETURN %v_7[2.12,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

