SET IRMethod, name = cleanup_email instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->email def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->downcase def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->strip def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: ATTRASSIGN %self->email %v_5[2.8,] 
		 10: RETURN %v_5[2.8,] %self[2.0,2.6,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = unique_email instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (User) def_%v_3 
		 7: %self->email def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: HASH-email- def_%v_5 %v_4[2.7,] 
		 9: %v_3->exists? def_%v_6 %v_3[2.6,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_5,
		 10: BRANCH %v_6[2.9,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->errors def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_StringLiteral "has already been taken" def_%v_8 
		 2: %v_7->add def_%v_9 %v_7[3.0,] %v_8[3.1,] 	 SYMBOL:email,	 ARGS:Symbol,%v_8,
		 3: RETURN %v_9[3.2,] %self[3.0,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

