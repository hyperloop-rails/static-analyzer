SET IRMethod, name = find_or_create_with_like_by_name instanceMethod = false
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: 
		 7: COPY TYPE_StringLiteral "name LIKE ?" def_%v_3 
		 8: %self->where def_%v_4 %self[2.0,] %v_3[2.7,] name[2.5,] 	 SYMBOL:	 ARGS:%v_3,name,
		 9: %v_4->first def_%v_5 %v_4[2.8,] 	 SYMBOL:	 ARGS:
		 10: BRANCH %v_5[2.9,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: HASH-name- def_%v_6 name[2.5,] 
		 1: %self->create def_%v_7 %self[2.0,] %v_6[3.0,] 	 SYMBOL:	 ARGS:%v_6,
		 2: RETURN %v_7[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_5[2.9,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = == instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_object 
		 6: 
		 7: %self->super def_%v_3 object[2.5,] %v_0[2.1,] 	 SYMBOL:	 ARGS:object,
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: (Tag) def_%v_4 
		 1: object->is_a? def_%v_5 object[2.5,] %v_4[3.0,] 	 SYMBOL:	 ARGS:%v_4,
		 2: BRANCH %v_5[3.1,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->name def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: object->name def_%v_7 object[2.5,] 	 SYMBOL:	 ARGS:
		 2: %v_6->== def_%v_8 %v_6[4.0,] %v_7[4.1,] 	 SYMBOL:	 ARGS:%v_7,
		 3: COPY TYPE_PASS def_%v_5 %v_8[4.2,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[4.3,3.1,] %self[2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.7,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_s instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = count instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->read_attribute def_%v_3 %self[2.0,] 	 SYMBOL:count,	 ARGS:Symbol,
		 7: %v_3->to_i def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = filter_name instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_tag_name 
		 6: 
		 7: COPY TYPE_StringLiteral "&" def_%v_3 
		 8: COPY TYPE_StringLiteral "and" def_%v_4 
		 9: tag_name->gsub! def_%v_5 tag_name[2.5,] %v_3[2.7,] %v_4[2.8,] 	 SYMBOL:	 ARGS:%v_3,%v_4,
		 10: 
		 11: COPY TYPE_Regexp def_%v_6 
		 12: COPY TYPE_StringLiteral "" def_%v_7 
		 13: tag_name->gsub! def_%v_8 tag_name[2.5,2.9,] %v_7[2.12,] 	 SYMBOL:	 ARGS:%v_6,%v_7,
		 14: 
		 15: RETURN tag_name[2.5,2.9,2.13,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

