SET IRMethod, name = interpolate_with_deprecated_syntax instanceMethod = true
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_locale 
		 6: RECEIVEARG def_string 
		 7: RECEIVECONSTARG def_values 
		 8: values[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_values %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: (String) def_%v_4 
		 2: string->is_a? def_%v_5 string[2.6,] %v_4[4.1,] 	 SYMBOL:	 ARGS:%v_4,
		 3: BRANCH %v_5[4.2,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: values->empty? def_%v_6 values[3.1,2.7,] 	 SYMBOL:	 ARGS:
		 1: %v_6->! def_%v_7 %v_6[5.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_5 %v_7[5.1,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: BRANCH %v_5[5.2,4.2,] 
BB 7
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_8 
		 1: 
		 2: COPY TYPE_Regexp def_%v_9 
		 3: string->gsub def_%v_10 string[2.6,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_9,string,
CLOSURE BEGIN: s[] instead[] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_s 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: (DEPRECATED_INTERPOLATORS) def_%cl_1_3 
		 2: %cl_1_3->[] def_%cl_1_4 %cl_1_3[3.1,] s[2.2,] 	 SYMBOL:	 ARGS:s,
		 3: COPY TYPE_PASS def_instead %cl_1_4[3.2,] 
		 4: 
		 5: (ActiveSupport) def_%cl_1_5 
		 6: (inherit Deprecation) def_%cl_1_6 %cl_1_5[3.5,] 
		 7: %cl_1_6[3.6,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: %cl_1_5->const_missing def_%cl_1_6 %cl_1_5[3.5,] 	 SYMBOL:Deprecation,	 ARGS:Symbol,
BB 5
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "using " def_%cl_1_7 
		 1: COPY TYPE_StringLiteral " in messages is deprecated; use " def_%cl_1_8 
		 2: COPY TYPE_StringLiteral " instead." def_%cl_1_9 
		 3: BUILDSTRING def_%cl_1_10 %cl_1_7[5.0,] s[2.2,] %cl_1_8[5.1,] instead[3.3,] %cl_1_9[5.2,] 
		 4: %cl_1_6->warn def_%cl_1_11 %cl_1_6[4.0,3.6,] %cl_1_10[5.3,] 	 SYMBOL:	 ARGS:%cl_1_10,
		 5: 
		 6: RETURN instead[3.3,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_12 
		 1: def_%cl_1_13 %cl_1_12[6.0,] 
		 2: RETURN %cl_1_13[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: instead[3.3,] 
		 4: COPY TYPE_PASS def_string %v_10[7.3,] 
		 5: 
		 6: %self->interpolate_without_deprecated_syntax def_%v_11 %self[2.0,] locale[2.5,] %v_10[7.3,] values[3.1,2.7,] 	 SYMBOL:	 ARGS:locale,string,values,
		 7: RETURN %v_11[7.6,] %self[7.6,2.0,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: RETURN string[2.6,] %self[2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:

