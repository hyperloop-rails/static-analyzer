SET IRMethod, name = search instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_args 
		 6: 
		 7: def_%v_3 args[2.5,] 
		 8: %self->new def_%v_4 %self[2.0,] %v_3[2.7,] 	 SYMBOL:	 ARGS:Splat,
		 9: %v_4->all def_%v_5 %v_4[2.8,] 	 SYMBOL:	 ARGS:
		 10: RETURN %v_5[2.9,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = score? instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = all instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->current_events def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %self->past_events def_%v_4 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_3->+ def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = current_events instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->search def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->current def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->scope def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_5->to_a def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: RETURN %v_6[2.9,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = past_events instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->skip_old def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_4 
		 1: RETURN %v_4[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->search def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_5->past def_%v_6 %v_5[4.0,] 	 SYMBOL:	 ARGS:
		 2: %v_6->scope def_%v_7 %v_6[4.1,] 	 SYMBOL:	 ARGS:
		 3: %v_7->to_a def_%v_8 %v_7[4.2,] 	 SYMBOL:	 ARGS:
		 4: RETURN %v_8[4.3,] %self[4.0,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = search instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->base def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->keywords def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->order def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_5->limit def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: RETURN %v_6[2.9,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = skip_old instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->opts def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->[] def_%v_4 %v_3[2.6,] 	 SYMBOL:skip_old,	 ARGS:Symbol,
		 8: %v_4->== def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:Boolean,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = base instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Event) def_%v_3 
		 7: %v_3->column_names def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->map def_%v_5 %v_4[2.7,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: name[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_name 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "events." def_%cl_1_3 
		 2: BUILDSTRING def_%cl_1_4 %cl_1_3[3.1,] name[2.2,] 
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: COPY TYPE_PASS def_column_names %v_5[2.8,] 
		 10: 
		 11: COPY TYPE_StringLiteral "venues.id" def_%v_6 
		 12: %v_5-><< def_%v_7 %v_5[2.8,] %v_6[2.11,] 	 SYMBOL:	 ARGS:%v_6,
		 13: 
		 14: (Event) def_%v_8 
		 15: %v_8->all def_%v_9 %v_8[2.14,] 	 SYMBOL:	 ARGS:
		 16: %v_9->group def_%v_10 %v_9[2.15,] column_names[2.9,] 	 SYMBOL:	 ARGS:column_names,
		 17: COPY TYPE_StringLiteral "LEFT OUTER JOIN taggings on taggings.taggable_id = events.id AND taggings.taggable_type LIKE '%Event'" def_%v_11 
		 18: %v_10->joins def_%v_12 %v_10[2.16,] %v_11[2.17,] 	 SYMBOL:	 ARGS:%v_11,
		 19: COPY TYPE_StringLiteral "LEFT OUTER JOIN tags ON tags.id = taggings.tag_id" def_%v_13 
		 20: %v_12->joins def_%v_14 %v_12[2.18,] %v_13[2.19,] 	 SYMBOL:	 ARGS:%v_13,
		 21: %v_14->includes def_%v_15 %v_14[2.20,] 	 SYMBOL:venue,	 ARGS:Symbol,
		 22: %v_15->references def_%v_16 %v_15[2.21,] 	 SYMBOL:venues,tags,	 ARGS:Symbol,Symbol,
		 23: ATTRASSIGN %self->scope %v_16[2.22,] 
		 24: 
		 25: RETURN %self[2.0,2.23,] %self[2.0,2.23,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = keywords instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->scope def_%v_3 %self[2.0,] 
		 7: COPY TYPE_StringLiteral "LOWER(events.title) LIKE ?" def_%v_4 
		 8: COPY TYPE_StringLiteral "%" def_%v_5 
		 9: %self->query def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 10: %v_6->downcase def_%v_7 %v_6[2.9,] 	 SYMBOL:	 ARGS:
		 11: COPY TYPE_StringLiteral "%" def_%v_8 
		 12: BUILDSTRING def_%v_9 %v_5[2.8,] %v_7[2.10,] %v_8[2.11,] 
		 13: %v_3->where def_%v_10 %v_3[2.6,] %v_4[2.7,] %v_9[2.12,] 	 SYMBOL:	 ARGS:%v_4,%v_9,
		 14: COPY TYPE_StringLiteral "LOWER(events.description) LIKE ?" def_%v_11 
		 15: COPY TYPE_StringLiteral "%" def_%v_12 
		 16: 
		 17: %self->query def_%v_13 %self[2.0,2.9,] 	 SYMBOL:	 ARGS:
		 18: %v_13->downcase def_%v_14 %v_13[2.17,] 	 SYMBOL:	 ARGS:
		 19: COPY TYPE_StringLiteral "%" def_%v_15 
		 20: BUILDSTRING def_%v_16 %v_12[2.15,] %v_14[2.18,] %v_15[2.19,] 
		 21: %v_10->where def_%v_17 %v_10[2.13,] %v_11[2.14,] %v_16[2.20,] 	 SYMBOL:	 ARGS:%v_11,%v_16,
		 22: COPY TYPE_PASS def_query_conditions %v_17[2.21,] 
		 23: 
		 24: %self->query def_%v_18 %self[2.0,2.9,2.17,] 	 SYMBOL:	 ARGS:
		 25: %v_18->split def_%v_19 %v_18[2.24,] 	 SYMBOL:	 ARGS:
		 26: %v_19->inject def_%v_20 %v_19[2.25,] query_conditions[2.22,] %self[2.0,2.9,2.17,2.24,] 	 SYMBOL:	 ARGS:query_conditions,%v_19,
CLOSURE BEGIN: keyword[] query_conditions[2.22,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_query_conditions 
		 3: RECEIVEARG def_keyword 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "%" def_%cl_1_3 
		 2: keyword->downcase def_%cl_1_4 keyword[2.3,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_StringLiteral "%" def_%cl_1_5 
		 4: BUILDSTRING def_%cl_1_6 %cl_1_3[3.1,] %cl_1_4[3.2,] %cl_1_5[3.3,] 
		 5: COPY TYPE_PASS def_like %cl_1_6[3.4,] 
		 6: 
		 7: COPY TYPE_StringLiteral "LOWER(events.url) LIKE ?" def_%cl_1_7 
		 8: COPY TYPE_Array def_%cl_1_8 %cl_1_7[3.7,] %cl_1_6[3.4,] 
		 9: query_conditions->where def_%cl_1_9 query_conditions[2.2,] %cl_1_8[3.8,] 	 SYMBOL:	 ARGS:%cl_1_8,
		 10: COPY TYPE_StringLiteral "LOWER(tags.name) = ?" def_%cl_1_10 
		 11: COPY TYPE_Array def_%cl_1_11 %cl_1_10[3.10,] keyword[3.2,2.3,] 
		 12: %cl_1_9->where def_%cl_1_12 %cl_1_9[3.9,] %cl_1_11[3.11,] 	 SYMBOL:	 ARGS:%cl_1_11,
		 13: RETURN %cl_1_12[3.12,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_13 
		 1: def_%cl_1_14 %cl_1_13[4.0,] 
		 2: RETURN %cl_1_14[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: like[3.5,] keyword[2.3,] 
		 27: COPY TYPE_PASS def_query_conditions %v_20[2.26,] 
		 28: 
		 29: GETFIELD %self->scope def_%v_21 %self[2.0,2.9,2.17,2.24,] 
		 30: %v_20->where_values def_%v_22 %v_20[2.26,] 	 SYMBOL:	 ARGS:
		 31: COPY TYPE_StringLiteral " OR " def_%v_23 
		 32: %v_22->join def_%v_24 %v_22[2.30,] %v_23[2.31,] 	 SYMBOL:	 ARGS:%v_23,
		 33: %v_21->where def_%v_25 %v_21[2.29,] %v_24[2.32,] 	 SYMBOL:	 ARGS:%v_24,
		 34: ATTRASSIGN %self->scope %v_25[2.33,] 
		 35: 
		 36: RETURN %self[2.0,2.9,2.17,2.24,2.34,] %self[2.0,2.9,2.17,2.24,2.34,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = order instanceMethod = true
BB 1
	outgoing: 13 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->opts def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->[] def_%v_4 %v_3[2.6,] 	 SYMBOL:order,	 ARGS:Symbol,
		 8: %v_4->try def_%v_5 %v_4[2.7,] 	 SYMBOL:to_sym,	 ARGS:Symbol,
		 9: def_%v_7 %v_5[2.8,] 
		 10: BRANCH %v_7[2.9,] 
BB 3
	outgoing: 4 8 
	datadep: 
	instructions:
		 0: def_%v_8 %v_5[2.8,] 
		 1: BRANCH %v_8[3.0,] 
BB 4
	outgoing: 5 9 
	datadep: 
	instructions:
		 0: def_%v_9 %v_5[2.8,] 
		 1: BRANCH %v_9[4.0,] 
BB 5
	outgoing: 6 10 
	datadep: 
	instructions:
		 0: def_%v_10 %v_5[2.8,] 
		 1: BRANCH %v_10[5.0,] 
BB 6
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "events.start_time DESC" def_%v_15 
		 2: COPY TYPE_PASS def_%v_6 %v_15[6.1,] 
		 3: 
BB 7
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "LOWER(events.title) ASC" def_%v_11 
		 2: COPY TYPE_PASS def_%v_6 %v_11[7.1,] 
		 3: 
BB 8
	outgoing: 12 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "LOWER(events.title) ASC" def_%v_12 
		 1: COPY TYPE_PASS def_%v_6 %v_12[8.0,] 
		 2: 
BB 9
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "LOWER(venues.title) ASC" def_%v_13 
		 2: COPY TYPE_PASS def_%v_6 %v_13[9.1,] 
		 3: 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "LOWER(venues.title) ASC" def_%v_14 
		 1: COPY TYPE_PASS def_%v_6 %v_14[10.0,] 
		 2: 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_order %v_6[7.2,8.1,9.2,10.1,6.2,] 
		 1: 
		 2: GETFIELD %self->scope def_%v_16 %self[2.0,] 
		 3: %v_16->order def_%v_17 %v_16[12.2,] %v_6[7.2,8.1,9.2,10.1,6.2,] 	 SYMBOL:	 ARGS:order,
		 4: ATTRASSIGN %self->scope %v_17[12.3,] 
		 5: 
		 6: RETURN %self[12.4,2.0,] %self[12.4,2.0,] 
BB 13
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = limit instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->opts def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->fetch def_%v_4 %v_3[2.6,] 	 SYMBOL:limit,	 ARGS:Symbol,Fixnum,
		 8: COPY TYPE_PASS def_limit %v_4[2.7,] 
		 9: 
		 10: GETFIELD %self->scope def_%v_5 %self[2.0,2.6,] 
		 11: %v_5->limit def_%v_6 %v_5[2.10,] %v_4[2.7,] 	 SYMBOL:	 ARGS:limit,
		 12: ATTRASSIGN %self->scope %v_6[2.11,] 
		 13: 
		 14: RETURN %self[2.0,2.6,2.12,] %self[2.0,2.6,2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = current instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->scope def_%v_3 %self[2.0,] 
		 7: COPY TYPE_StringLiteral "events.start_time >= ?" def_%v_4 
		 8: (Date) def_%v_5 
		 9: %v_5->yesterday def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: %v_6->to_time def_%v_7 %v_6[2.9,] 	 SYMBOL:	 ARGS:
		 11: %v_3->where def_%v_8 %v_3[2.6,] %v_4[2.7,] %v_7[2.10,] 	 SYMBOL:	 ARGS:%v_4,%v_7,
		 12: ATTRASSIGN %self->scope %v_8[2.11,] 
		 13: 
		 14: RETURN %self[2.0,2.12,] %self[2.0,2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = past instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->scope def_%v_3 %self[2.0,] 
		 7: COPY TYPE_StringLiteral "events.start_time < ?" def_%v_4 
		 8: (Date) def_%v_5 
		 9: %v_5->yesterday def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: %v_6->to_time def_%v_7 %v_6[2.9,] 	 SYMBOL:	 ARGS:
		 11: %v_3->where def_%v_8 %v_3[2.6,] %v_4[2.7,] %v_7[2.10,] 	 SYMBOL:	 ARGS:%v_4,%v_7,
		 12: ATTRASSIGN %self->scope %v_8[2.11,] 
		 13: 
		 14: RETURN %self[2.0,2.12,] %self[2.0,2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

