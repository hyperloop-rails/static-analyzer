SET IRMethod, name = after_date instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: date[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "start_time >= ?" def_%cl_1_3 
		 2: COPY TYPE_Array def_%cl_1_4 %cl_1_3[3.1,] date[2.2,] 
		 3: %self->where def_%cl_1_5 %self[2.0,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: %cl_1_5->order def_%cl_1_6 %cl_1_5[3.3,] 	 SYMBOL:start_time,	 ARGS:Symbol,
		 5: RETURN %cl_1_6[3.4,] %self[3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = on_or_after_date instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: date[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: date->beginning_of_day def_%cl_1_3 date[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_time %cl_1_3[3.1,] 
		 3: 
		 4: COPY TYPE_StringLiteral "(events.start_time >= :time) OR (events.end_time IS NOT NULL AND events.end_time > :time)" def_%cl_1_4 
		 5: HASH-time- def_%cl_1_5 %cl_1_3[3.1,] 
		 6: %self->where def_%cl_1_6 %self[2.0,] %cl_1_4[3.4,] %cl_1_5[3.5,] 	 SYMBOL:	 ARGS:%cl_1_4,%cl_1_5,
		 7: %cl_1_6->order def_%cl_1_7 %cl_1_6[3.6,] 	 SYMBOL:start_time,	 ARGS:Symbol,
		 8: RETURN %cl_1_7[3.7,] %self[3.6,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[4.0,] 
		 2: RETURN %cl_1_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: time[3.2,] 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = before_date instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: date[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: date->beginning_of_day def_%cl_1_3 date[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_time %cl_1_3[3.1,] 
		 3: 
		 4: COPY TYPE_StringLiteral "start_time < :time" def_%cl_1_4 
		 5: HASH-time- def_%cl_1_5 %cl_1_3[3.1,] 
		 6: %self->where def_%cl_1_6 %self[2.0,] %cl_1_4[3.4,] %cl_1_5[3.5,] 	 SYMBOL:	 ARGS:%cl_1_4,%cl_1_5,
		 7: HASH-start_time- def_%cl_1_7 
		 8: %cl_1_6->order def_%cl_1_8 %cl_1_6[3.6,] %cl_1_7[3.7,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 9: RETURN %cl_1_8[3.8,] %self[3.6,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[4.0,] 
		 2: RETURN %cl_1_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: time[3.2,] 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = future instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (Time) def_%cl_1_3 
		 2: %cl_1_3->zone def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->today def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %self->on_or_after_date def_%cl_1_6 %self[2.0,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 5: RETURN %cl_1_6[3.4,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = past instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (Time) def_%cl_1_3 
		 2: %cl_1_3->zone def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->today def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %self->before_date def_%cl_1_6 %self[2.0,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 5: RETURN %cl_1_6[3.4,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = within_dates instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: start_date[] end_date[] %self[2.0,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_start_date 
		 3: RECEIVEARG def_end_date 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: start_date->== def_%cl_1_3 start_date[2.2,] end_date[2.3,] 	 SYMBOL:	 ARGS:end_date,
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: CONSTANT def_%cl_1_4 	 SYMBOL:	 ARGS:
		 2: end_date->+ def_%cl_1_5 end_date[2.3,] %cl_1_4[4.1,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 3: COPY TYPE_PASS def_end_date %cl_1_5[4.2,] 
		 4: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_5 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->on_or_after_date def_%cl_1_6 %self[2.0,] start_date[2.2,] 	 SYMBOL:	 ARGS:start_date,
		 2: %cl_1_6->before_date def_%cl_1_7 %cl_1_6[6.1,] end_date[4.3,2.3,] 	 SYMBOL:	 ARGS:end_date,
		 3: RETURN %cl_1_7[6.2,] %self[6.1,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[7.0,] 
		 2: RETURN %cl_1_9[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: end_date[4.3,2.3,] 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ordered_by_ui_field instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: ui_field[] %self[2.0,] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_ui_field 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "name" def_%cl_1_5 
		 2: def_%cl_1_4 %cl_1_5[3.1,] ui_field[2.2,] 
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 5 7 10 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "venue" def_%cl_1_7 
		 1: def_%cl_1_6 %cl_1_7[4.0,] ui_field[2.2,] 
		 2: BRANCH %cl_1_6[4.1,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
BB 6
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "lower(events.title)" def_%cl_1_8 
		 2: %self->order def_%cl_1_9 %self[2.0,] %cl_1_8[6.1,] 	 SYMBOL:	 ARGS:%cl_1_8,
		 3: COPY TYPE_PASS def_%cl_1_3 %cl_1_9[6.2,] 
		 4: 
BB 7
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->includes def_%cl_1_10 %self[2.0,] 	 SYMBOL:venue,	 ARGS:Symbol,
		 2: COPY TYPE_StringLiteral "lower(venues.title)" def_%cl_1_11 
		 3: %cl_1_10->order def_%cl_1_12 %cl_1_10[7.1,] %cl_1_11[7.2,] 	 SYMBOL:	 ARGS:%cl_1_11,
		 4: %cl_1_12->references def_%cl_1_13 %cl_1_12[7.3,] 	 SYMBOL:venues,	 ARGS:Symbol,
		 5: COPY TYPE_PASS def_%cl_1_3 %cl_1_13[7.4,] 
		 6: 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->all def_%cl_1_14 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%cl_1_3 %cl_1_14[8.1,] 
		 3: 
BB 9
	outgoing: 10 12 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_scope %cl_1_3[6.3,7.5,8.2,] 
		 1: 
		 2: COPY TYPE_StringLiteral "start_time" def_%cl_1_15 
		 3: %cl_1_3->order def_%cl_1_16 %cl_1_3[6.3,7.5,8.2,] %cl_1_15[9.2,] 	 SYMBOL:	 ARGS:%cl_1_15,
		 4: RETURN %cl_1_16[9.3,] %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_1_17 
		 1: def_%cl_1_18 %cl_1_17[10.0,] 
		 2: RETURN %cl_1_18[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: scope[9.0,] 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = after_date instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: date[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "start_time >= ?" def_%cl_1_3 
		 2: COPY TYPE_Array def_%cl_1_4 %cl_1_3[3.1,] date[2.2,] 
		 3: %self->where def_%cl_1_5 %self[2.0,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: %cl_1_5->order def_%cl_1_6 %cl_1_5[3.3,] 	 SYMBOL:start_time,	 ARGS:Symbol,
		 5: RETURN %cl_1_6[3.4,] %self[3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = on_or_after_date instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: date[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: date->beginning_of_day def_%cl_1_3 date[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_time %cl_1_3[3.1,] 
		 3: 
		 4: COPY TYPE_StringLiteral "(events.start_time >= :time) OR (events.end_time IS NOT NULL AND events.end_time > :time)" def_%cl_1_4 
		 5: HASH-time- def_%cl_1_5 %cl_1_3[3.1,] 
		 6: %self->where def_%cl_1_6 %self[2.0,] %cl_1_4[3.4,] %cl_1_5[3.5,] 	 SYMBOL:	 ARGS:%cl_1_4,%cl_1_5,
		 7: %cl_1_6->order def_%cl_1_7 %cl_1_6[3.6,] 	 SYMBOL:start_time,	 ARGS:Symbol,
		 8: RETURN %cl_1_7[3.7,] %self[3.6,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[4.0,] 
		 2: RETURN %cl_1_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: time[3.2,] 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = before_date instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: date[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: date->beginning_of_day def_%cl_1_3 date[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_time %cl_1_3[3.1,] 
		 3: 
		 4: COPY TYPE_StringLiteral "start_time < :time" def_%cl_1_4 
		 5: HASH-time- def_%cl_1_5 %cl_1_3[3.1,] 
		 6: %self->where def_%cl_1_6 %self[2.0,] %cl_1_4[3.4,] %cl_1_5[3.5,] 	 SYMBOL:	 ARGS:%cl_1_4,%cl_1_5,
		 7: HASH-start_time- def_%cl_1_7 
		 8: %cl_1_6->order def_%cl_1_8 %cl_1_6[3.6,] %cl_1_7[3.7,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 9: RETURN %cl_1_8[3.8,] %self[3.6,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[4.0,] 
		 2: RETURN %cl_1_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: time[3.2,] 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = future instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (Time) def_%cl_1_3 
		 2: %cl_1_3->zone def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->today def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %self->on_or_after_date def_%cl_1_6 %self[2.0,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 5: RETURN %cl_1_6[3.4,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = past instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (Time) def_%cl_1_3 
		 2: %cl_1_3->zone def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->today def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %self->before_date def_%cl_1_6 %self[2.0,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 5: RETURN %cl_1_6[3.4,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = within_dates instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: start_date[] end_date[] %self[2.0,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_start_date 
		 3: RECEIVEARG def_end_date 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: start_date->== def_%cl_1_3 start_date[2.2,] end_date[2.3,] 	 SYMBOL:	 ARGS:end_date,
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: CONSTANT def_%cl_1_4 	 SYMBOL:	 ARGS:
		 2: end_date->+ def_%cl_1_5 end_date[2.3,] %cl_1_4[4.1,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 3: COPY TYPE_PASS def_end_date %cl_1_5[4.2,] 
		 4: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_5 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->on_or_after_date def_%cl_1_6 %self[2.0,] start_date[2.2,] 	 SYMBOL:	 ARGS:start_date,
		 2: %cl_1_6->before_date def_%cl_1_7 %cl_1_6[6.1,] end_date[4.3,2.3,] 	 SYMBOL:	 ARGS:end_date,
		 3: RETURN %cl_1_7[6.2,] %self[6.1,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[7.0,] 
		 2: RETURN %cl_1_9[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: end_date[4.3,2.3,] 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ordered_by_ui_field instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: ui_field[] %self[2.0,] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_ui_field 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "name" def_%cl_1_5 
		 2: def_%cl_1_4 %cl_1_5[3.1,] ui_field[2.2,] 
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 5 7 10 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "venue" def_%cl_1_7 
		 1: def_%cl_1_6 %cl_1_7[4.0,] ui_field[2.2,] 
		 2: BRANCH %cl_1_6[4.1,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
BB 6
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "lower(events.title)" def_%cl_1_8 
		 2: %self->order def_%cl_1_9 %self[2.0,] %cl_1_8[6.1,] 	 SYMBOL:	 ARGS:%cl_1_8,
		 3: COPY TYPE_PASS def_%cl_1_3 %cl_1_9[6.2,] 
		 4: 
BB 7
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->includes def_%cl_1_10 %self[2.0,] 	 SYMBOL:venue,	 ARGS:Symbol,
		 2: COPY TYPE_StringLiteral "lower(venues.title)" def_%cl_1_11 
		 3: %cl_1_10->order def_%cl_1_12 %cl_1_10[7.1,] %cl_1_11[7.2,] 	 SYMBOL:	 ARGS:%cl_1_11,
		 4: %cl_1_12->references def_%cl_1_13 %cl_1_12[7.3,] 	 SYMBOL:venues,	 ARGS:Symbol,
		 5: COPY TYPE_PASS def_%cl_1_3 %cl_1_13[7.4,] 
		 6: 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->all def_%cl_1_14 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%cl_1_3 %cl_1_14[8.1,] 
		 3: 
BB 9
	outgoing: 10 12 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_scope %cl_1_3[6.3,7.5,8.2,] 
		 1: 
		 2: COPY TYPE_StringLiteral "start_time" def_%cl_1_15 
		 3: %cl_1_3->order def_%cl_1_16 %cl_1_3[6.3,7.5,8.2,] %cl_1_15[9.2,] 	 SYMBOL:	 ARGS:%cl_1_15,
		 4: RETURN %cl_1_16[9.3,] %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_1_17 
		 1: def_%cl_1_18 %cl_1_17[10.0,] 
		 2: RETURN %cl_1_18[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: scope[9.0,] 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = after_date instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: date[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "start_time >= ?" def_%cl_1_3 
		 2: COPY TYPE_Array def_%cl_1_4 %cl_1_3[3.1,] date[2.2,] 
		 3: %self->where def_%cl_1_5 %self[2.0,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: %cl_1_5->order def_%cl_1_6 %cl_1_5[3.3,] 	 SYMBOL:start_time,	 ARGS:Symbol,
		 5: RETURN %cl_1_6[3.4,] %self[3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = on_or_after_date instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: date[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: date->beginning_of_day def_%cl_1_3 date[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_time %cl_1_3[3.1,] 
		 3: 
		 4: COPY TYPE_StringLiteral "(events.start_time >= :time) OR (events.end_time IS NOT NULL AND events.end_time > :time)" def_%cl_1_4 
		 5: HASH-time- def_%cl_1_5 %cl_1_3[3.1,] 
		 6: %self->where def_%cl_1_6 %self[2.0,] %cl_1_4[3.4,] %cl_1_5[3.5,] 	 SYMBOL:	 ARGS:%cl_1_4,%cl_1_5,
		 7: %cl_1_6->order def_%cl_1_7 %cl_1_6[3.6,] 	 SYMBOL:start_time,	 ARGS:Symbol,
		 8: RETURN %cl_1_7[3.7,] %self[3.6,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[4.0,] 
		 2: RETURN %cl_1_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: time[3.2,] 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = before_date instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: date[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: date->beginning_of_day def_%cl_1_3 date[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_time %cl_1_3[3.1,] 
		 3: 
		 4: COPY TYPE_StringLiteral "start_time < :time" def_%cl_1_4 
		 5: HASH-time- def_%cl_1_5 %cl_1_3[3.1,] 
		 6: %self->where def_%cl_1_6 %self[2.0,] %cl_1_4[3.4,] %cl_1_5[3.5,] 	 SYMBOL:	 ARGS:%cl_1_4,%cl_1_5,
		 7: HASH-start_time- def_%cl_1_7 
		 8: %cl_1_6->order def_%cl_1_8 %cl_1_6[3.6,] %cl_1_7[3.7,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 9: RETURN %cl_1_8[3.8,] %self[3.6,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[4.0,] 
		 2: RETURN %cl_1_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: time[3.2,] 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = future instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (Time) def_%cl_1_3 
		 2: %cl_1_3->zone def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->today def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %self->on_or_after_date def_%cl_1_6 %self[2.0,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 5: RETURN %cl_1_6[3.4,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = past instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (Time) def_%cl_1_3 
		 2: %cl_1_3->zone def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->today def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %self->before_date def_%cl_1_6 %self[2.0,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 5: RETURN %cl_1_6[3.4,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = within_dates instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: start_date[] end_date[] %self[2.0,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_start_date 
		 3: RECEIVEARG def_end_date 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: start_date->== def_%cl_1_3 start_date[2.2,] end_date[2.3,] 	 SYMBOL:	 ARGS:end_date,
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: CONSTANT def_%cl_1_4 	 SYMBOL:	 ARGS:
		 2: end_date->+ def_%cl_1_5 end_date[2.3,] %cl_1_4[4.1,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 3: COPY TYPE_PASS def_end_date %cl_1_5[4.2,] 
		 4: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_5 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->on_or_after_date def_%cl_1_6 %self[2.0,] start_date[2.2,] 	 SYMBOL:	 ARGS:start_date,
		 2: %cl_1_6->before_date def_%cl_1_7 %cl_1_6[6.1,] end_date[4.3,2.3,] 	 SYMBOL:	 ARGS:end_date,
		 3: RETURN %cl_1_7[6.2,] %self[6.1,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[7.0,] 
		 2: RETURN %cl_1_9[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: end_date[4.3,2.3,] 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ordered_by_ui_field instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: ui_field[] %self[2.0,] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_ui_field 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "name" def_%cl_1_5 
		 2: def_%cl_1_4 %cl_1_5[3.1,] ui_field[2.2,] 
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 5 7 10 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "venue" def_%cl_1_7 
		 1: def_%cl_1_6 %cl_1_7[4.0,] ui_field[2.2,] 
		 2: BRANCH %cl_1_6[4.1,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
BB 6
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "lower(events.title)" def_%cl_1_8 
		 2: %self->order def_%cl_1_9 %self[2.0,] %cl_1_8[6.1,] 	 SYMBOL:	 ARGS:%cl_1_8,
		 3: COPY TYPE_PASS def_%cl_1_3 %cl_1_9[6.2,] 
		 4: 
BB 7
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->includes def_%cl_1_10 %self[2.0,] 	 SYMBOL:venue,	 ARGS:Symbol,
		 2: COPY TYPE_StringLiteral "lower(venues.title)" def_%cl_1_11 
		 3: %cl_1_10->order def_%cl_1_12 %cl_1_10[7.1,] %cl_1_11[7.2,] 	 SYMBOL:	 ARGS:%cl_1_11,
		 4: %cl_1_12->references def_%cl_1_13 %cl_1_12[7.3,] 	 SYMBOL:venues,	 ARGS:Symbol,
		 5: COPY TYPE_PASS def_%cl_1_3 %cl_1_13[7.4,] 
		 6: 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->all def_%cl_1_14 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%cl_1_3 %cl_1_14[8.1,] 
		 3: 
BB 9
	outgoing: 10 12 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_scope %cl_1_3[6.3,7.5,8.2,] 
		 1: 
		 2: COPY TYPE_StringLiteral "start_time" def_%cl_1_15 
		 3: %cl_1_3->order def_%cl_1_16 %cl_1_3[6.3,7.5,8.2,] %cl_1_15[9.2,] 	 SYMBOL:	 ARGS:%cl_1_15,
		 4: RETURN %cl_1_16[9.3,] %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_1_17 
		 1: def_%cl_1_18 %cl_1_17[10.0,] 
		 2: RETURN %cl_1_18[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: scope[9.0,] 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tag_list instanceMethod = true
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->tag_list def_%v_3 %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 11 
	datadep: 
	instructions:
		 0: GETFIELD %self->tag_list def_%v_4 %self[2.0,] 
		 1: RETURN %v_4[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: %self->class def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %v_6->caching_tag_list? def_%v_7 %v_6[4.2,] 	 SYMBOL:	 ARGS:
		 4: BRANCH %v_7[4.3,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %self->class def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_8->cached_tag_list_column_name def_%v_9 %v_8[6.0,] 	 SYMBOL:	 ARGS:
		 2: %self->send def_%v_10 %self[6.0,2.0,] %v_9[6.1,] 	 SYMBOL:	 ARGS:%v_9,
		 3: COPY TYPE_PASS def_cached_value %v_10[6.2,] 
		 4: COPY TYPE_PASS def_%v_11 %v_10[6.2,] 
		 5: %v_10->nil? def_%v_12 %v_10[6.2,] 	 SYMBOL:	 ARGS:
		 6: COPY TYPE_PASS def_%v_13 %v_12[6.5,] 
		 7: %v_12->! def_%v_14 %v_12[6.5,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_PASS def_%v_7 %v_14[6.7,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: BRANCH %v_7[6.8,4.3,] 
BB 8
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: (TagList) def_%v_15 
		 2: %v_15->from def_%v_16 %v_15[8.1,] cached_value[6.3,] 	 SYMBOL:	 ARGS:cached_value,
		 3: ATTRASSIGN %self->tag_list %v_16[8.2,] 
		 4: RETURN %v_16[8.2,] %self[8.3,2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: (TagList) def_%v_17 
		 2: %self->tags def_%v_19 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %v_19->map def_%v_20 %v_19[9.2,] 	 SYMBOL:name,	 ARGS:
		 4: def_%v_18 %v_20[9.3,] 
		 5: %v_17->new def_%v_21 %v_17[9.1,] %v_18[9.4,] 	 SYMBOL:	 ARGS:Splat,
		 6: ATTRASSIGN %self->tag_list %v_21[9.5,] 
		 7: RETURN %v_21[9.5,] %self[9.2,9.6,2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tag_list= instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_value 
		 6: 
		 7: (TagList) def_%v_3 
		 8: %v_3->from def_%v_4 %v_3[2.7,] value[2.5,] 	 SYMBOL:	 ARGS:value,
		 9: ATTRASSIGN %self->tag_list %v_4[2.8,] 
		 10: RETURN %v_4[2.8,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = save_cached_tag_list instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->class def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->caching_tag_list? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->class def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_5->cached_tag_list_column_name def_%v_6 %v_5[3.1,] 	 SYMBOL:	 ARGS:
		 3: %self->tag_list def_%v_7 %self[3.1,2.0,] 	 SYMBOL:	 ARGS:
		 4: %v_7->to_s def_%v_8 %v_7[3.3,] 	 SYMBOL:	 ARGS:
		 5: ATTRASSIGN %self->[] %v_6[3.2,] %v_8[3.4,] 
		 6: RETURN %v_8[3.4,] %self[3.1,3.3,3.5,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = save_tags instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->tag_list def_%v_3 %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: GETFIELD %self->tag_list def_%v_5 %self[2.0,] 
		 3: %self->tags def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 4: %v_6->map def_%v_7 %v_6[3.3,] 	 SYMBOL:name,	 ARGS:
		 5: %v_5->- def_%v_8 %v_5[3.2,] %v_7[3.4,] 	 SYMBOL:	 ARGS:%v_7,
		 6: COPY TYPE_PASS def_new_tag_names %v_8[3.5,] 
		 7: 
		 8: %self->taggings def_%v_9 %self[3.3,2.0,] 	 SYMBOL:	 ARGS:
		 9: %v_9->reject def_%v_10 %v_9[3.8,] %self[3.3,3.8,2.0,] 	 SYMBOL:	 ARGS:%v_9,
CLOSURE BEGIN: %self[3.3,3.8,2.0,] tagging[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_tagging 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->tag_list def_%cl_1_3 %self[2.0,] 
		 2: tagging->tag def_%cl_1_4 tagging[2.2,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->name def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %cl_1_3->include? def_%cl_1_6 %cl_1_3[3.1,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 5: RETURN %cl_1_6[3.4,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: COPY TYPE_PASS def_old_taggings %v_10[3.9,] 
		 11: 
		 12: %self->class def_%v_11 %self[3.3,3.8,2.0,] 	 SYMBOL:	 ARGS:
		 13: %v_11->transaction def_%v_12 %v_11[3.12,] %self[3.3,3.8,3.12,2.0,] 	 SYMBOL:	 ARGS:%v_11,
CLOSURE BEGIN: old_taggings[3.10,] %self[3.3,3.8,3.12,2.0,] tag[] new_tag_names[3.6,] new_tag_name[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: old_taggings->each def_%cl_2_3 old_taggings[] %self[2.0,] 	 SYMBOL:	 ARGS:old_taggings,
CLOSURE BEGIN: %self[2.0,] tag[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_tag 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->taggings def_%cl_3_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_3_3->destroy def_%cl_3_4 %cl_3_3[3.1,] tag[2.2,] 	 SYMBOL:	 ARGS:tag,
		 3: RETURN %cl_3_4[3.2,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_5 
		 1: def_%cl_3_6 %cl_3_5[4.0,] 
		 2: RETURN %cl_3_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: 
		 3: new_tag_names->each def_%cl_2_4 new_tag_names[] %self[2.0,] 	 SYMBOL:	 ARGS:new_tag_names,
CLOSURE BEGIN: %self[2.0,] new_tag_name[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_4_0 
		 2: RECEIVEARG def_new_tag_name 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->tags def_%cl_4_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: (Tag) def_%cl_4_4 
		 3: %cl_4_4->find_or_create_with_like_by_name def_%cl_4_5 %cl_4_4[3.2,] new_tag_name[2.2,] 	 SYMBOL:	 ARGS:new_tag_name,
		 4: %cl_4_3-><< def_%cl_4_6 %cl_4_3[3.1,] %cl_4_5[3.3,] 	 SYMBOL:	 ARGS:%cl_4_5,
		 5: RETURN %cl_4_6[3.4,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_4_7 
		 1: def_%cl_4_8 %cl_4_7[4.0,] 
		 2: RETURN %cl_4_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 4: RETURN %cl_2_4[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 14: 
		 15: RETURN %self[3.3,3.8,3.12,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tag_counts instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_options 
		 6: options[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->class def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %self->class def_%v_5 %self[4.1,2.0,] 	 SYMBOL:	 ARGS:
		 3: %self->tag_list def_%v_6 %self[4.1,4.2,2.0,] 	 SYMBOL:	 ARGS:
		 4: %v_5->send def_%v_7 %v_5[4.2,] %v_6[4.3,] 	 SYMBOL:tags_condition,	 ARGS:Symbol,%v_6,
		 5: HASH-conditions- def_%v_8 %v_7[4.4,] 
		 6: %v_8->reverse_merge! def_%v_9 %v_8[4.5,] options[3.1,2.5,] 	 SYMBOL:	 ARGS:options,
		 7: %v_4->tag_counts def_%v_10 %v_4[4.1,] %v_9[4.6,] 	 SYMBOL:	 ARGS:%v_9,
		 8: RETURN %v_10[4.7,] %self[4.1,4.2,4.3,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reload_with_tag_list instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_args 
		 6: 
		 7: ATTRASSIGN %self->tag_list 
		 8: 
		 9: def_%v_3 args[2.5,] 
		 10: %self->reload_without_tag_list def_%v_4 %self[2.0,2.7,] %v_3[2.9,] 	 SYMBOL:	 ARGS:Splat,
		 11: RETURN %v_4[2.10,] %self[2.0,2.7,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = url= instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_value 
		 6: 
		 7: (UrlPrefixer) def_%v_3 
		 8: %v_3->prefix def_%v_4 %v_3[2.7,] value[2.5,] 	 SYMBOL:	 ARGS:value,
		 9: %self->super def_%v_5 %current_module[2.3,] %v_4[2.8,] %v_0[2.1,] 	 SYMBOL:	 ARGS:%v_4,
		 10: RETURN %v_5[2.9,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = start_time= instanceMethod = true
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_value 
		 6: GLOBALVAR $! def_%v_3 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: %self->time_for def_%v_6 %self[2.0,] value[2.5,] 	 SYMBOL:	 ARGS:value,
		 3: %self->super def_%v_7 %current_module[2.3,] %v_6[4.2,] %v_0[2.1,] 	 SYMBOL:	 ARGS:%v_6,
		 4: COPY TYPE_PASS def_%v_5 %v_7[4.3,] 
		 5: %v_3[2.6,] 
BB 5
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
BB 6
	outgoing: 7 8 10 
	datadep: 
	instructions:
		 0: def_%v_8 
		 1: (ArgumentError) def_%v_9 
		 2: def_%v_10 %v_9[6.1,] %v_8[6.0,] 
		 3: BRANCH %v_10[6.2,] 
BB 7
	outgoing: 10 12 
	datadep: 
	instructions:
		 0: %v_8[6.0,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->errors def_%v_11 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "is invalid" def_%v_12 
		 3: %v_11->add def_%v_13 %v_11[8.1,] %v_12[8.2,] 	 SYMBOL:start_time,	 ARGS:Symbol,%v_12,
		 4: 
		 5: %self->super def_%v_14 %current_module[4.3,2.3,] %v_0[2.1,] 	 SYMBOL:	 ARGS:Nil,
		 6: COPY TYPE_PASS def_%v_5 %v_14[8.5,] 
		 7: %v_3[2.6,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%v_15 
		 1: def_%v_16 %v_15[10.0,] %v_3[2.6,] 
		 2: %v_15[10.0,] 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %v_5[4.4,8.6,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = end_time= instanceMethod = true
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_value 
		 6: GLOBALVAR $! def_%v_3 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: %self->time_for def_%v_6 %self[2.0,] value[2.5,] 	 SYMBOL:	 ARGS:value,
		 3: %self->super def_%v_7 %current_module[2.3,] %v_6[4.2,] %v_0[2.1,] 	 SYMBOL:	 ARGS:%v_6,
		 4: COPY TYPE_PASS def_%v_5 %v_7[4.3,] 
		 5: %v_3[2.6,] 
BB 5
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
BB 6
	outgoing: 7 8 10 
	datadep: 
	instructions:
		 0: def_%v_8 
		 1: (ArgumentError) def_%v_9 
		 2: def_%v_10 %v_9[6.1,] %v_8[6.0,] 
		 3: BRANCH %v_10[6.2,] 
BB 7
	outgoing: 10 12 
	datadep: 
	instructions:
		 0: %v_8[6.0,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->errors def_%v_11 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "is invalid" def_%v_12 
		 3: %v_11->add def_%v_13 %v_11[8.1,] %v_12[8.2,] 	 SYMBOL:end_time,	 ARGS:Symbol,%v_12,
		 4: 
		 5: %self->super def_%v_14 %current_module[4.3,2.3,] %v_0[2.1,] 	 SYMBOL:	 ARGS:Nil,
		 6: COPY TYPE_PASS def_%v_5 %v_14[8.5,] 
		 7: %v_3[2.6,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%v_15 
		 1: def_%v_16 %v_15[10.0,] %v_3[2.6,] 
		 2: %v_15[10.0,] 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %v_5[4.4,8.6,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = time_for instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_value 
		 6: 
		 7: (Date) def_%v_3 
		 8: value->kind_of? def_%v_4 value[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: value->to_s def_%v_5 value[2.5,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_value %v_5[3.0,] 
		 2: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: (String) def_%v_6 
		 2: value->kind_of? def_%v_7 value[3.1,2.5,] %v_6[5.1,] 	 SYMBOL:	 ARGS:%v_6,
		 3: BRANCH %v_7[5.2,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: (Time) def_%v_8 
		 1: %v_8->zone def_%v_9 %v_8[6.0,] 	 SYMBOL:	 ARGS:
		 2: %v_9->parse def_%v_10 %v_9[6.1,] value[3.1,2.5,] 	 SYMBOL:	 ARGS:value,
		 3: COPY TYPE_PASS def_value %v_10[6.2,] 
		 4: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_10 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: RETURN value[6.3,3.1,2.5,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = lock_editing! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->update_attribute def_%v_3 %self[2.0,] 	 SYMBOL:locked,	 ARGS:Symbol,Boolean,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = unlock_editing! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->update_attribute def_%v_3 %self[2.0,] 	 SYMBOL:locked,	 ARGS:Symbol,Boolean,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = search_tag instanceMethod = false
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_tag 
		 6: RECEIVECONSTARG def_opts 
		 7: opts[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_opts %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->includes def_%v_4 %self[2.0,] 	 SYMBOL:venue,	 ARGS:Symbol,
		 2: %v_4->tagged_with def_%v_5 %v_4[4.1,] tag[2.5,] 	 SYMBOL:	 ARGS:tag,
		 3: opts->[] def_%v_6 opts[3.1,2.6,] 	 SYMBOL:order,	 ARGS:Symbol,
		 4: %v_5->ordered_by_ui_field def_%v_7 %v_5[4.2,] %v_6[4.3,] 	 SYMBOL:	 ARGS:%v_6,
		 5: RETURN %v_7[4.4,] %self[4.1,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = search instanceMethod = false
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_query 
		 6: RECEIVECONSTARG def_opts 
		 7: opts[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_opts %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: (SearchEngine) def_%v_4 
		 2: %v_4->search def_%v_5 %v_4[4.1,] query[2.5,] opts[3.1,2.6,] 	 SYMBOL:	 ARGS:query,opts,
		 3: RETURN %v_5[4.2,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = current? instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->end_time def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->start_time def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_3 %v_4[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: (Date) def_%v_5 
		 1: %v_5->today def_%v_6 %v_5[4.0,] 	 SYMBOL:	 ARGS:
		 2: %v_6->to_time def_%v_7 %v_6[4.1,] 	 SYMBOL:	 ARGS:
		 3: %v_3->>= def_%v_8 %v_3[3.1,2.6,] %v_7[4.2,] 	 SYMBOL:	 ARGS:%v_7,
		 4: RETURN %v_8[4.3,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = old? instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->end_time def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->start_time def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: CONSTANT def_%v_5 	 SYMBOL:	 ARGS:
		 2: %v_4->+ def_%v_6 %v_4[3.0,] %v_5[3.1,] 	 SYMBOL:	 ARGS:%v_5,
		 3: COPY TYPE_PASS def_%v_3 %v_6[3.2,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: (Time) def_%v_7 
		 1: %v_7->zone def_%v_8 %v_7[4.0,] 	 SYMBOL:	 ARGS:
		 2: %v_8->now def_%v_9 %v_8[4.1,] 	 SYMBOL:	 ARGS:
		 3: %v_9->beginning_of_day def_%v_10 %v_9[4.2,] 	 SYMBOL:	 ARGS:
		 4: %v_3-><= def_%v_11 %v_3[3.3,2.6,] %v_10[4.3,] 	 SYMBOL:	 ARGS:%v_10,
		 5: RETURN %v_11[4.4,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ongoing? instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->end_time def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->start_time def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_3 %v_4[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.6,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: %self->start_time def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %self->end_time def_%v_8 %self[5.2,2.0,] 	 SYMBOL:	 ARGS:
		 4: CONSTANT def_%v_6 %v_7[5.2,] %v_8[5.3,] 
		 5: (Date) def_%v_9 
		 6: %v_9->today def_%v_10 %v_9[5.5,] 	 SYMBOL:	 ARGS:
		 7: %v_10->to_time def_%v_11 %v_10[5.6,] 	 SYMBOL:	 ARGS:
		 8: %v_6->cover? def_%v_12 %v_6[5.4,] %v_11[5.7,] 	 SYMBOL:	 ARGS:%v_11,
		 9: RETURN %v_12[5.8,] %self[5.2,5.3,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = duration instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->end_time def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->start_time def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_3 %v_4[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.6,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: %self->end_time def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %self->start_time def_%v_7 %self[5.2,2.0,] 	 SYMBOL:	 ARGS:
		 4: %v_6->- def_%v_8 %v_6[5.2,] %v_7[5.3,] 	 SYMBOL:	 ARGS:%v_7,
		 5: RETURN %v_8[5.4,] %self[5.2,5.3,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

