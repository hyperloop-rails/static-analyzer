SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: RECEIVEARG def_attributes 
		 7: 
		 8: (DailyRecurrencePattern) def_%v_3 
		 9: %self->super def_%v_4 user[2.5,] attributes[2.6,] %v_3[2.8,] %v_0[2.1,] 	 SYMBOL:	 ARGS:user,attributes,%v_3,
		 10: RETURN %v_4[2.9,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = attributes_to_filter instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "daily_selector" def_%v_3 
		 7: COPY TYPE_StringLiteral "daily_every_x_days" def_%v_4 
		 8: COPY TYPE_Array def_%v_5 %v_3[2.6,] %v_4[2.7,] 
		 9: RETURN %v_5[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = map_attributes instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_mapping 
		 6: 
		 7: GETFIELD %self->selector def_%v_3 %self[2.0,] 
		 8: %self->only_work_days? def_%v_4 %self[2.0,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: mapping->set def_%v_5 mapping[2.5,] %v_4[2.8,] 	 SYMBOL:only_work_days,	 ARGS:Symbol,%v_4,
		 10: 
		 11: mapping->get def_%v_6 mapping[2.5,2.9,] 	 SYMBOL:daily_every_x_days,	 ARGS:Symbol,
		 12: mapping->set def_%v_7 mapping[2.5,2.9,2.11,] %v_6[2.11,] 	 SYMBOL:every_other1,	 ARGS:Symbol,%v_6,
		 13: 
		 14: mapping->except def_%v_8 mapping[2.5,2.9,2.11,2.12,] 	 SYMBOL:daily_every_x_days,	 ARGS:Symbol,
		 15: RETURN %v_8[2.14,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = only_work_days? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_daily_selector 
		 6: 
		 7: COPY TYPE_StringLiteral "daily_every_x_day" def_%v_3 
		 8: COPY TYPE_StringLiteral "daily_every_work_day" def_%v_4 
		 9: HASH- def_%v_5 %v_3[2.7,] %v_4[2.8,] 
		 10: %v_5->[] def_%v_6 %v_5[2.9,] daily_selector[2.5,] 	 SYMBOL:	 ARGS:daily_selector,
		 11: RETURN %v_6[2.10,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = selector_key instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = valid_selector? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_selector 
		 6: 
		 7: COPY TYPE_StringLiteral "daily_every_x_day" def_%v_3 
		 8: COPY TYPE_StringLiteral "daily_every_work_day" def_%v_4 
		 9: COPY TYPE_Array def_%v_5 %v_3[2.7,] %v_4[2.8,] 
		 10: %v_5->include? def_%v_6 %v_5[2.9,] selector[2.5,] 	 SYMBOL:	 ARGS:selector,
		 11: RETURN %v_6[2.10,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

