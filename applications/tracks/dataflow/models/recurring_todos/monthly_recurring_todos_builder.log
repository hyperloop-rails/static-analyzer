SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: RECEIVEARG def_attributes 
		 7: 
		 8: (MonthlyRecurrencePattern) def_%v_3 
		 9: %self->super def_%v_4 user[2.5,] attributes[2.6,] %v_3[2.8,] %v_0[2.1,] 	 SYMBOL:	 ARGS:user,attributes,%v_3,
		 10: RETURN %v_4[2.9,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = attributes_to_filter instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "monthly_selector" def_%v_3 
		 7: COPY TYPE_StringLiteral "monthly_every_x_day" def_%v_4 
		 8: COPY TYPE_StringLiteral "monthly_every_x_month" def_%v_5 
		 9: COPY TYPE_StringLiteral "monthly_every_x_month2" def_%v_6 
		 10: COPY TYPE_StringLiteral "monthly_every_xth_day" def_%v_7 
		 11: COPY TYPE_StringLiteral "monthly_day_of_week" def_%v_8 
		 12: COPY TYPE_Array def_%v_9 %v_3[2.6,] %v_4[2.7,] %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] %v_8[2.11,] 
		 13: RETURN %v_9[2.12,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = map_attributes instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_mapping 
		 6: 
		 7: COPY TYPE_StringLiteral "monthly_every_x_day" def_%v_3 
		 8: %self->map def_%v_4 %self[2.0,] mapping[2.5,] %v_3[2.7,] 	 SYMBOL:every_other1,	 ARGS:mapping,Symbol,%v_3,
		 9: COPY TYPE_PASS def_mapping %v_4[2.8,] 
		 10: 
		 11: COPY TYPE_StringLiteral "monthly_every_xth_day" def_%v_5 
		 12: %self->map def_%v_6 %self[2.0,2.8,] %v_4[2.8,] %v_5[2.11,] 	 SYMBOL:every_other3,	 ARGS:mapping,Symbol,%v_5,
		 13: COPY TYPE_PASS def_mapping %v_6[2.12,] 
		 14: 
		 15: COPY TYPE_StringLiteral "monthly_day_of_week" def_%v_7 
		 16: %self->map def_%v_8 %self[2.0,2.8,2.12,] %v_6[2.12,] %v_7[2.15,] 	 SYMBOL:every_count,	 ARGS:mapping,Symbol,%v_7,
		 17: COPY TYPE_PASS def_mapping %v_8[2.16,] 
		 18: 
		 19: %self->get_recurrence_selector def_%v_9 %self[2.0,2.8,2.12,2.16,] 	 SYMBOL:	 ARGS:
		 20: mapping->set def_%v_10 mapping[2.5,2.9,2.13,2.17,] %v_9[2.19,] 	 SYMBOL:recurrence_selector,	 ARGS:Symbol,%v_9,
		 21: 
		 22: %self->get_every_other2 def_%v_11 %self[2.0,2.8,2.12,2.16,2.19,] 	 SYMBOL:	 ARGS:
		 23: mapping->get def_%v_12 mapping[2.5,2.9,2.13,2.17,2.20,] %v_11[2.22,] 	 SYMBOL:	 ARGS:%v_11,
		 24: mapping->set def_%v_13 mapping[2.5,2.9,2.13,2.17,2.20,2.23,] %v_12[2.23,] 	 SYMBOL:every_other2,	 ARGS:Symbol,%v_12,
		 25: 
		 26: COPY TYPE_StringLiteral "monthly_every_x_month" def_%v_14 
		 27: mapping->except def_%v_15 mapping[2.5,2.9,2.13,2.17,2.20,2.23,2.24,] %v_14[2.26,] 	 SYMBOL:	 ARGS:%v_14,
		 28: COPY TYPE_StringLiteral "monthly_every_x_month2" def_%v_16 
		 29: %v_15->except def_%v_17 %v_15[2.27,] %v_16[2.28,] 	 SYMBOL:	 ARGS:%v_16,
		 30: RETURN %v_17[2.29,] %self[2.0,2.8,2.12,2.16,2.19,2.22,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_recurrence_selector instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->selector def_%v_3 %self[2.0,] 
		 7: COPY TYPE_StringLiteral "monthly_every_x_day" def_%v_4 
		 8: %v_3->== def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Fixnum def_%v_6 
		 1: RETURN %v_6[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_every_other2 instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->get_recurrence_selector def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->== def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:Fixnum,
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "monthly_every_x_month" def_%v_5 
		 1: RETURN %v_5[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "monthly_every_x_month2" def_%v_6 
		 1: RETURN %v_6[4.0,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = selector_key instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = valid_selector? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_selector 
		 6: 
		 7: COPY TYPE_StringLiteral "monthly_every_x_day" def_%v_3 
		 8: COPY TYPE_StringLiteral "monthly_every_xth_day" def_%v_4 
		 9: COPY TYPE_Array def_%v_5 %v_3[2.7,] %v_4[2.8,] 
		 10: %v_5->include? def_%v_6 %v_5[2.9,] selector[2.5,] 	 SYMBOL:	 ARGS:selector,
		 11: RETURN %v_6[2.10,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

