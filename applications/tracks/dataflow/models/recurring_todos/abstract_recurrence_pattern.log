SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: 
		 7: ATTRASSIGN %self->user user[2.5,] 
		 8: RETURN user[2.5,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = start_from instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->get def_%v_3 %self[2.0,] 	 SYMBOL:start_from,	 ARGS:Symbol,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = end_date instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->get def_%v_3 %self[2.0,] 	 SYMBOL:end_date,	 ARGS:Symbol,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ends_on instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->get def_%v_3 %self[2.0,] 	 SYMBOL:ends_on,	 ARGS:Symbol,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = target instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->get def_%v_3 %self[2.0,] 	 SYMBOL:target,	 ARGS:Symbol,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = show_always? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->get def_%v_3 %self[2.0,] 	 SYMBOL:show_always,	 ARGS:Symbol,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = show_from_delta instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->get def_%v_3 %self[2.0,] 	 SYMBOL:show_from_delta,	 ARGS:Symbol,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = number_of_occurrences instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->get def_%v_3 %self[2.0,] 	 SYMBOL:number_of_occurrences,	 ARGS:Symbol,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = recurring_target_as_text instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->target def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "due_date" def_%v_4 
		 8: %v_3->== def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: (I18n) def_%v_6 
		 1: COPY TYPE_StringLiteral "todos.recurrence.pattern.due" def_%v_7 
		 2: %v_6->t def_%v_8 %v_6[3.0,] %v_7[3.1,] 	 SYMBOL:	 ARGS:%v_7,
		 3: RETURN %v_8[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: (I18n) def_%v_9 
		 1: COPY TYPE_StringLiteral "todos.recurrence.pattern.show" def_%v_10 
		 2: %v_9->t def_%v_11 %v_9[4.0,] %v_10[4.1,] 	 SYMBOL:	 ARGS:%v_10,
		 3: RETURN %v_11[4.2,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = recurrence_pattern instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "Should not call AbstractRecurrencePattern.recurrence_pattern directly. Overwrite in subclass" def_%v_3 
		 7: %self->raise def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = xth instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_x 
		 6: 
		 7: (I18n) def_%v_3 
		 8: COPY TYPE_StringLiteral "todos.recurrence.pattern.first" def_%v_4 
		 9: %v_3->t def_%v_5 %v_3[2.7,] %v_4[2.8,] 	 SYMBOL:	 ARGS:%v_4,
		 10: (I18n) def_%v_6 
		 11: COPY TYPE_StringLiteral "todos.recurrence.pattern.second" def_%v_7 
		 12: %v_6->t def_%v_8 %v_6[2.10,] %v_7[2.11,] 	 SYMBOL:	 ARGS:%v_7,
		 13: (I18n) def_%v_9 
		 14: COPY TYPE_StringLiteral "todos.recurrence.pattern.third" def_%v_10 
		 15: %v_9->t def_%v_11 %v_9[2.13,] %v_10[2.14,] 	 SYMBOL:	 ARGS:%v_10,
		 16: (I18n) def_%v_12 
		 17: COPY TYPE_StringLiteral "todos.recurrence.pattern.fourth" def_%v_13 
		 18: %v_12->t def_%v_14 %v_12[2.16,] %v_13[2.17,] 	 SYMBOL:	 ARGS:%v_13,
		 19: (I18n) def_%v_15 
		 20: COPY TYPE_StringLiteral "todos.recurrence.pattern.last" def_%v_16 
		 21: %v_15->t def_%v_17 %v_15[2.19,] %v_16[2.20,] 	 SYMBOL:	 ARGS:%v_16,
		 22: COPY TYPE_Array def_%v_18 %v_5[2.9,] %v_8[2.12,] %v_11[2.15,] %v_14[2.18,] %v_17[2.21,] 
		 23: COPY TYPE_PASS def_xth_day %v_18[2.22,] 
		 24: 
		 25: x->nil? def_%v_19 x[2.5,] 	 SYMBOL:	 ARGS:
		 26: BRANCH %v_19[2.25,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "??" def_%v_20 
		 1: RETURN %v_20[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: x->- def_%v_21 x[2.5,] 	 SYMBOL:	 ARGS:Fixnum,
		 1: xth_day->[] def_%v_22 xth_day[2.23,] %v_21[4.0,] 	 SYMBOL:	 ARGS:%v_21,
		 2: RETURN %v_22[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = day_of_week_as_text instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_day 
		 6: 
		 7: day->nil? def_%v_3 day[2.5,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "??" def_%v_4 
		 1: RETURN %v_4[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: (I18n) def_%v_5 
		 1: COPY TYPE_StringLiteral "todos.recurrence.pattern.day_names" def_%v_6 
		 2: %v_5->t def_%v_7 %v_5[4.0,] %v_6[4.1,] 	 SYMBOL:	 ARGS:%v_6,
		 3: %v_7->[] def_%v_8 %v_7[4.2,] day[2.5,] 	 SYMBOL:	 ARGS:day,
		 4: RETURN %v_8[4.3,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = month_of_year_as_text instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_month 
		 6: 
		 7: month->nil? def_%v_3 month[2.5,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "??" def_%v_4 
		 1: RETURN %v_4[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: (I18n) def_%v_5 
		 1: COPY TYPE_StringLiteral "todos.recurrence.pattern.month_names" def_%v_6 
		 2: %v_5->t def_%v_7 %v_5[4.0,] %v_6[4.1,] 	 SYMBOL:	 ARGS:%v_6,
		 3: %v_7->[] def_%v_8 %v_7[4.2,] month[2.5,] 	 SYMBOL:	 ARGS:month,
		 4: RETURN %v_8[4.3,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = build_recurring_todo instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_attribute_handler 
		 6: 
		 7: GETFIELD %self->user def_%v_3 %self[2.0,] 
		 8: %v_3->recurring_todos def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: attribute_handler->safe_attributes def_%v_5 attribute_handler[2.5,] 	 SYMBOL:	 ARGS:
		 10: %v_4->build def_%v_6 %v_4[2.8,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_5,
		 11: ATTRASSIGN %self->recurring_todo %v_6[2.10,] 
		 12: RETURN %v_6[2.10,] %self[2.0,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_recurring_todo instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_recurring_todo 
		 6: RECEIVEARG def_attribute_handler 
		 7: 
		 8: attribute_handler->safe_attributes def_%v_3 attribute_handler[2.6,] 	 SYMBOL:	 ARGS:
		 9: recurring_todo->assign_attributes def_%v_4 recurring_todo[2.5,] %v_3[2.8,] 	 SYMBOL:	 ARGS:%v_3,
		 10: 
		 11: RETURN recurring_todo[2.5,2.9,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = build_from_recurring_todo instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_recurring_todo 
		 6: 
		 7: ATTRASSIGN %self->recurring_todo recurring_todo[2.5,] 
		 8: 
		 9: (Tracks) def_%v_3 
		 10: (inherit AttributeHandler) def_%v_4 %v_3[2.9,] 
		 11: %v_4[2.10,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.9,] 	 SYMBOL:AttributeHandler,	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: GETFIELD %self->user def_%v_5 %self[2.0,] 
		 1: recurring_todo->attributes def_%v_6 recurring_todo[2.5,] 	 SYMBOL:	 ARGS:
		 2: %v_4->new def_%v_7 %v_4[3.0,2.10,] %v_5[4.0,] %v_6[4.1,] 	 SYMBOL:	 ARGS:%v_5,%v_6,
		 3: ATTRASSIGN %self->attributes %v_7[4.2,] 
		 4: RETURN %v_7[4.2,] %self[4.3,2.0,2.7,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = valid? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->recurring_todo def_%v_3 %self[2.0,] 
		 7: %v_3->valid? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = validate_not_blank instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_object 
		 6: RECEIVEARG def_msg 
		 7: 
		 8: object->blank? def_%v_3 object[2.5,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %v_3[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->errors def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_4->[] def_%v_5 %v_4[3.0,] 	 SYMBOL:base,	 ARGS:Symbol,
		 2: %v_5-><< def_%v_6 %v_5[3.1,] msg[2.6,] 	 SYMBOL:	 ARGS:msg,
		 3: RETURN %v_6[3.2,] %self[3.0,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = validate_not_nil instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_object 
		 6: RECEIVEARG def_msg 
		 7: 
		 8: object->nil? def_%v_3 object[2.5,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %v_3[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->errors def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_4->[] def_%v_5 %v_4[3.0,] 	 SYMBOL:base,	 ARGS:Symbol,
		 2: %v_5-><< def_%v_6 %v_5[3.1,] msg[2.6,] 	 SYMBOL:	 ARGS:msg,
		 3: RETURN %v_6[3.2,] %self[3.0,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = validate instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->starts_and_ends_on_validations def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: 
		 8: %self->set_recurrence_on_validations def_%v_4 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 9: RETURN %v_4[2.8,] %self[2.0,2.6,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = starts_and_ends_on_validations instanceMethod = true
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->start_from def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "The start date needs to be filled in" def_%v_4 
		 8: %self->validate_not_blank def_%v_5 %self[2.0,2.6,] %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_3,%v_4,
		 9: 
		 10: %self->ends_on def_%v_6 %self[2.0,2.6,2.8,] 	 SYMBOL:	 ARGS:
		 11: COPY TYPE_StringLiteral "ends_on_number_of_times" def_%v_9 
		 12: def_%v_8 %v_9[2.11,] %v_6[2.10,] 
		 13: BRANCH %v_8[2.12,] 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "ends_on_end_date" def_%v_11 
		 1: def_%v_10 %v_11[3.0,] %v_6[2.10,] 
		 2: BRANCH %v_10[3.1,] 
BB 4
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->ends_on def_%v_18 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "no_end_date" def_%v_19 
		 3: %v_18->== def_%v_20 %v_18[4.1,] %v_19[4.2,] 	 SYMBOL:	 ARGS:%v_19,
		 4: BRANCH %v_20[4.3,] 
BB 5
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->number_of_occurrences def_%v_12 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "The number of recurrences needs to be filled in for 'Ends on'" def_%v_13 
		 3: %self->validate_not_blank def_%v_14 %self[5.1,2.0,] %v_12[5.1,] %v_13[5.2,] 	 SYMBOL:	 ARGS:%v_12,%v_13,
		 4: COPY TYPE_PASS def_%v_7 %v_14[5.3,] 
		 5: RETURN %v_14[5.3,] %self[5.1,5.3,2.0,] 
BB 6
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->end_date def_%v_15 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "The end date needs to be filled in for 'Ends on'" def_%v_16 
		 3: %self->validate_not_blank def_%v_17 %self[6.1,2.0,] %v_15[6.1,] %v_16[6.2,] 	 SYMBOL:	 ARGS:%v_15,%v_16,
		 4: COPY TYPE_PASS def_%v_7 %v_17[6.3,] 
		 5: RETURN %v_17[6.3,] %self[6.1,6.3,2.0,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_21 
		 1: 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: %self->errors def_%v_22 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_22->[] def_%v_23 %v_22[9.0,] 	 SYMBOL:base,	 ARGS:Symbol,
		 2: COPY TYPE_StringLiteral "The end of the recurrence is not selected" def_%v_24 
		 3: %v_23-><< def_%v_25 %v_23[9.1,] %v_24[9.2,] 	 SYMBOL:	 ARGS:%v_24,
		 4: COPY TYPE_PASS def_%v_21 %v_25[9.3,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_7 %v_21[9.4,8.0,] 
		 1: RETURN %v_7[10.0,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_recurrence_on_validations instanceMethod = true
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->target def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "show_from_date" def_%v_6 
		 8: def_%v_5 %v_6[2.7,] %v_3[2.6,] 
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "due_date" def_%v_8 
		 1: def_%v_7 %v_8[3.0,] %v_3[2.6,] 
		 2: BRANCH %v_7[3.1,] 
BB 4
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->errors def_%v_17 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_17->[] def_%v_18 %v_17[4.1,] 	 SYMBOL:base,	 ARGS:Symbol,
		 3: COPY TYPE_StringLiteral "Unexpected value of recurrence target selector '" def_%v_19 
		 4: %self->target def_%v_20 %self[4.1,2.0,] 	 SYMBOL:	 ARGS:
		 5: COPY TYPE_StringLiteral "'" def_%v_21 
		 6: BUILDSTRING def_%v_22 %v_19[4.3,] %v_20[4.4,] %v_21[4.5,] 
		 7: %v_18-><< def_%v_23 %v_18[4.2,] %v_22[4.6,] 	 SYMBOL:	 ARGS:%v_22,
		 8: COPY TYPE_PASS def_%v_4 %v_23[4.7,] 
		 9: RETURN %v_23[4.7,] %self[4.1,4.4,2.0,] 
BB 5
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->show_always? def_%v_9 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "Please select when to show the action" def_%v_10 
		 3: %self->validate_not_nil def_%v_11 %self[6.1,2.0,] %v_9[6.1,] %v_10[6.2,] 	 SYMBOL:	 ARGS:%v_9,%v_10,
		 4: 
		 5: %self->show_always? def_%v_12 %self[6.1,6.3,2.0,] 	 SYMBOL:	 ARGS:
		 6: BRANCH %v_12[6.5,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_13 
		 1: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: %self->show_from_delta def_%v_14 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_StringLiteral "Please fill in the number of days to show the todo before the due date" def_%v_15 
		 2: %self->validate_not_blank def_%v_16 %self[8.0,2.0,] %v_14[8.0,] %v_15[8.1,] 	 SYMBOL:	 ARGS:%v_14,%v_15,
		 3: COPY TYPE_PASS def_%v_13 %v_16[8.2,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_4 %v_13[8.3,7.0,] 
		 1: 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %v_4[5.0,9.0,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = errors instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->recurring_todo def_%v_3 %self[2.0,] 
		 7: %v_3->errors def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_attribute 
		 6: 
		 7: GETFIELD %self->attributes def_%v_3 %self[2.0,] 
		 8: %v_3->[] def_%v_4 %v_3[2.7,] attribute[2.5,] 	 SYMBOL:	 ARGS:attribute,
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_due_date instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_previous 
		 6: 
		 7: %self->target def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_StringLiteral "due_date" def_%v_6 
		 9: def_%v_5 %v_6[2.8,] %v_3[2.7,] 
		 10: BRANCH %v_5[2.9,] 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "show_from_date" def_%v_8 
		 1: def_%v_7 %v_8[3.0,] %v_3[2.7,] 
		 2: BRANCH %v_7[3.1,] 
BB 4
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->get_next_date def_%v_9 %self[2.0,] previous[2.5,] 	 SYMBOL:	 ARGS:previous,
		 2: %v_9->at_midnight def_%v_10 %v_9[5.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_PASS def_%v_4 %v_10[5.2,] 
		 4: RETURN %v_10[5.2,] %self[5.1,2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Nil def_%v_4 
		 2: RETURN %self[2.0,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %v_4[4.0,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_show_from_date instanceMethod = true
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_previous 
		 6: 
		 7: %self->target def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_StringLiteral "due_date" def_%v_6 
		 9: def_%v_5 %v_6[2.8,] %v_3[2.7,] 
		 10: BRANCH %v_5[2.9,] 
BB 3
	outgoing: 4 9 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "show_from_date" def_%v_8 
		 1: def_%v_7 %v_8[3.0,] %v_3[2.7,] 
		 2: BRANCH %v_7[3.1,] 
BB 4
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->put_in_tickler? def_%v_9 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_9[5.1,] 
BB 6
	outgoing: 12 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_10 
		 1: 
		 2: %self->get_due_date def_%v_11 %self[2.0,] previous[2.5,] 	 SYMBOL:	 ARGS:previous,
		 3: %self->show_from_delta def_%v_12 %self[6.2,2.0,] 	 SYMBOL:	 ARGS:
		 4: %v_12->days def_%v_13 %v_12[6.3,] 	 SYMBOL:	 ARGS:
		 5: %v_11->- def_%v_14 %v_11[6.2,] %v_13[6.4,] 	 SYMBOL:	 ARGS:%v_13,
		 6: COPY TYPE_PASS def_%v_4 %v_14[6.5,] 
		 7: RETURN %v_14[6.5,] %self[6.2,6.3,2.0,] 
BB 7
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->get_next_date def_%v_15 %self[2.0,] previous[2.5,] 	 SYMBOL:	 ARGS:previous,
		 2: %v_15->at_midnight def_%v_16 %v_15[9.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_PASS def_%v_4 %v_16[9.2,] 
		 4: RETURN %v_16[9.2,] %self[9.1,2.0,] 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %v_4[4.0,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = put_in_tickler? instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->show_always? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->show_from_delta def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_4->nil? def_%v_5 %v_4[3.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_3 %v_5[3.1,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_3->! def_%v_6 %v_3[3.2,2.6,] 	 SYMBOL:	 ARGS:
		 1: RETURN %v_6[4.0,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_next_date instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_previous 
		 6: 
		 7: COPY TYPE_StringLiteral "Should not call AbstractRecurrencePattern.get_next_date directly. Override in subclass" def_%v_3 
		 8: %self->raise def_%v_4 %self[2.0,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: RETURN %v_4[2.8,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = continues_recurring? instanceMethod = true
BB 1
	outgoing: 17 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_previous 
		 6: 
		 7: GETFIELD %self->recurring_todo def_%v_3 %self[2.0,] 
		 8: %v_3->number_of_occurrences def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_4->nil? def_%v_5 %v_4[2.8,] 	 SYMBOL:	 ARGS:
		 10: BRANCH %v_5[2.9,] 
BB 3
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
		 1: 
		 2: %self->end_date def_%v_12 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %v_12->nil? def_%v_13 %v_12[3.2,] 	 SYMBOL:	 ARGS:
		 4: BRANCH %v_13[3.3,] 
BB 4
	outgoing: 17 
	datadep: 
	instructions:
		 0: GETFIELD %self->recurring_todo def_%v_7 %self[2.0,] 
		 1: %v_7->occurrences_count def_%v_8 %v_7[4.0,] 	 SYMBOL:	 ARGS:
		 2: GETFIELD %self->recurring_todo def_%v_9 %self[2.0,] 
		 3: %v_9->number_of_occurrences def_%v_10 %v_9[4.2,] 	 SYMBOL:	 ARGS:
		 4: %v_8->< def_%v_11 %v_8[4.1,] %v_10[4.3,] 	 SYMBOL:	 ARGS:%v_10,
		 5: RETURN %v_11[4.4,] %self[2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %self->ends_on def_%v_14 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_StringLiteral "no_end_date" def_%v_15 
		 2: %v_14->== def_%v_16 %v_14[6.0,] %v_15[6.1,] 	 SYMBOL:	 ARGS:%v_15,
		 3: COPY TYPE_PASS def_%v_13 %v_16[6.2,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: BRANCH %v_13[6.3,3.3,] 
BB 8
	outgoing: 17 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 11 13 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_17 
		 1: 
		 2: %self->target def_%v_18 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_StringLiteral "due_date" def_%v_21 
		 4: def_%v_20 %v_21[9.3,] %v_18[9.2,] 
		 5: BRANCH %v_20[9.4,] 
BB 11
	outgoing: 12 14 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "show_from_date" def_%v_23 
		 1: def_%v_22 %v_23[11.0,] %v_18[9.2,] 
		 2: BRANCH %v_22[11.1,] 
BB 12
	outgoing: 16 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_19 
		 1: 
BB 13
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
		 1: %self->get_due_date def_%v_24 %self[2.0,] previous[2.5,] 	 SYMBOL:	 ARGS:previous,
		 2: %self->end_date def_%v_25 %self[13.1,2.0,] 	 SYMBOL:	 ARGS:
		 3: %v_24-><= def_%v_26 %v_24[13.1,] %v_25[13.2,] 	 SYMBOL:	 ARGS:%v_25,
		 4: COPY TYPE_PASS def_%v_19 %v_26[13.3,] 
		 5: RETURN %v_26[13.3,] %self[13.1,13.2,2.0,] 
BB 14
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
		 1: %self->get_show_from_date def_%v_27 %self[2.0,] previous[2.5,] 	 SYMBOL:	 ARGS:previous,
		 2: %self->end_date def_%v_28 %self[14.1,2.0,] 	 SYMBOL:	 ARGS:
		 3: %v_27-><= def_%v_29 %v_27[14.1,] %v_28[14.2,] 	 SYMBOL:	 ARGS:%v_28,
		 4: COPY TYPE_PASS def_%v_19 %v_29[14.3,] 
		 5: RETURN %v_29[14.3,] %self[14.1,14.2,2.0,] 
BB 16
	outgoing: 17 
	datadep: 
	instructions:
		 0: RETURN %v_19[12.0,] %self[2.0,] 
BB 17
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = determine_start instanceMethod = true
BB 1
	outgoing: 16 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_previous 
		 6: RECEIVECONSTARG def_offset 
		 7: offset[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: CONSTANT def_%v_3 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_offset %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->start_from def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_4[4.1,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: (NullTime) def_%v_5 
		 1: %v_5->new def_%v_6 %v_5[5.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_4 %v_6[5.1,] 
BB 6
	outgoing: 7 11 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_start %v_4[5.2,4.1,] 
		 1: 
		 2: BRANCH previous[2.5,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: start->> def_%v_7 start[6.0,] previous[2.5,] 	 SYMBOL:	 ARGS:previous,
		 2: BRANCH %v_7[7.1,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_8 start[6.0,] 
		 1: 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: previous->+ def_%v_9 previous[2.5,] offset[3.1,2.6,] 	 SYMBOL:	 ARGS:offset,
		 1: COPY TYPE_PASS def_%v_8 %v_9[9.0,] 
BB 10
	outgoing: 16 
	datadep: 
	instructions:
		 0: RETURN %v_8[9.1,8.0,] %self[2.0,] 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: 
		 1: (Time) def_%v_10 
		 2: %v_10->zone def_%v_11 %v_10[11.1,] 	 SYMBOL:	 ARGS:
		 3: %v_11->now def_%v_12 %v_11[11.2,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_PASS def_now %v_12[11.3,] 
		 5: 
		 6: start->> def_%v_13 start[6.0,] %v_12[11.3,] 	 SYMBOL:	 ARGS:now,
		 7: BRANCH %v_13[11.6,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_14 start[6.0,] 
		 1: 
BB 13
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_14 now[11.4,] 
BB 14
	outgoing: 16 
	datadep: 
	instructions:
		 0: RETURN %v_14[13.0,12.0,] %self[2.0,] 
BB 16
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_xth_day_of_month instanceMethod = true
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_x 
		 6: RECEIVEARG def_weekday 
		 7: RECEIVEARG def_month 
		 8: RECEIVEARG def_year 
		 9: 
		 10: CONSTANT def_%v_3 
		 11: %v_3->cover? def_%v_4 %v_3[2.10,] weekday[2.6,] 	 SYMBOL:	 ARGS:weekday,
		 12: BRANCH %v_4[2.11,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "Weekday should be between 0 and 6 with 0=sunday. You supplied " def_%v_6 
		 1: BUILDSTRING def_%v_7 %v_6[4.0,] weekday[2.6,] 
		 2: %self->raise def_%v_8 %self[2.0,] %v_7[4.1,] 	 SYMBOL:	 ARGS:%v_7,
		 3: COPY TYPE_PASS def_%v_5 %v_8[4.2,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: CONSTANT def_%v_9 
		 2: %v_9->cover? def_%v_10 %v_9[5.1,] x[2.5,] 	 SYMBOL:	 ARGS:x,
		 3: BRANCH %v_10[5.2,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_11 
		 1: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "x should be 1-4 for first-fourth or 5 for last. You supplied " def_%v_12 
		 1: BUILDSTRING def_%v_13 %v_12[7.0,] x[2.5,] 
		 2: %self->raise def_%v_14 %self[2.0,] %v_13[7.1,] 	 SYMBOL:	 ARGS:%v_13,
		 3: COPY TYPE_PASS def_%v_11 %v_14[7.2,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: x->== def_%v_15 x[2.5,] 	 SYMBOL:	 ARGS:Fixnum,
		 2: BRANCH %v_15[8.1,] 
BB 9
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->find_last_day_x_of_month def_%v_16 %self[2.0,] weekday[2.6,] month[2.7,] year[2.8,] 	 SYMBOL:	 ARGS:weekday,month,year,
		 2: RETURN %v_16[9.1,] %self[9.1,2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->find_xth_day_of_month def_%v_18 %self[2.0,] x[2.5,] weekday[2.6,] month[2.7,] year[2.8,] 	 SYMBOL:	 ARGS:x,weekday,month,year,
		 2: RETURN %v_18[10.1,] %self[10.1,2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find_last_day_x_of_month instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_weekday 
		 6: RECEIVEARG def_month 
		 7: RECEIVEARG def_year 
		 8: 
		 9: (Time) def_%v_3 
		 10: %v_3->zone def_%v_4 %v_3[2.9,] 	 SYMBOL:	 ARGS:
		 11: (Time) def_%v_5 
		 12: %v_5->days_in_month def_%v_6 %v_5[2.11,] month[2.6,] 	 SYMBOL:	 ARGS:month,
		 13: %v_4->local def_%v_7 %v_4[2.10,] year[2.7,] month[2.6,] %v_6[2.12,] 	 SYMBOL:	 ARGS:year,month,%v_6,
		 14: COPY TYPE_PASS def_last_day %v_7[2.13,] 
		 15: 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: last_day->wday def_%v_9 last_day[2.14,4.4,] 	 SYMBOL:	 ARGS:
		 1: %v_9->!= def_%v_10 %v_9[3.0,] weekday[2.5,] 	 SYMBOL:	 ARGS:weekday,
		 2: BRANCH %v_10[3.1,] 
BB 4
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: CONSTANT def_%v_11 	 SYMBOL:	 ARGS:
		 3: last_day->- def_%v_12 last_day[2.14,] %v_11[4.2,] 	 SYMBOL:	 ARGS:%v_11,
		 4: COPY TYPE_PASS def_last_day %v_12[4.3,] 
		 5: 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_8 
		 1: 
		 2: RETURN last_day[2.14,4.4,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find_xth_day_of_month instanceMethod = true
BB 1
	outgoing: 16 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_x 
		 6: RECEIVEARG def_weekday 
		 7: RECEIVEARG def_month 
		 8: RECEIVEARG def_year 
		 9: 
		 10: (Time) def_%v_3 
		 11: %v_3->zone def_%v_4 %v_3[2.10,] 	 SYMBOL:	 ARGS:
		 12: %v_4->local def_%v_5 %v_4[2.11,] year[2.8,] month[2.7,] 	 SYMBOL:	 ARGS:year,month,Fixnum,
		 13: COPY TYPE_PASS def_start %v_5[2.12,] 
		 14: 
		 15: COPY TYPE_PASS def_n x[2.5,] 
		 16: 
BB 3
	outgoing: 4 14 
	datadep: 
	instructions:
		 0: n->> def_%v_7 n[2.15,8.3,] 	 SYMBOL:	 ARGS:Fixnum,
		 1: BRANCH %v_7[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: 
BB 5
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: start->wday def_%v_9 start[6.4,2.13,11.2,] 	 SYMBOL:	 ARGS:
		 1: %v_9->!= def_%v_10 %v_9[5.0,] weekday[2.6,] 	 SYMBOL:	 ARGS:weekday,
		 2: BRANCH %v_10[5.1,] 
BB 6
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: CONSTANT def_%v_11 	 SYMBOL:	 ARGS:
		 3: start->+ def_%v_12 start[2.13,11.2,] %v_11[6.2,] 	 SYMBOL:	 ARGS:%v_11,
		 4: COPY TYPE_PASS def_start %v_12[6.3,] 
		 5: 
BB 8
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_8 
		 1: 
		 2: n->- def_%v_13 n[2.15,] 	 SYMBOL:	 ARGS:Fixnum,
		 3: COPY TYPE_PASS def_n %v_13[8.2,] 
		 4: 
		 5: %v_13->== def_%v_14 %v_13[8.2,] 	 SYMBOL:	 ARGS:Fixnum,
		 6: BRANCH %v_14[8.5,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_15 
		 1: 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: CONSTANT def_%v_16 	 SYMBOL:	 ARGS:
		 1: start->+ def_%v_17 start[6.4,2.13,] %v_16[11.0,] 	 SYMBOL:	 ARGS:%v_16,
		 2: COPY TYPE_PASS def_start %v_17[11.1,] 
		 3: COPY TYPE_PASS def_%v_15 %v_17[11.1,] 
BB 12
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
BB 14
	outgoing: 16 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
		 1: 
		 2: RETURN start[2.13,11.2,6.4,] %self[2.0,] 
BB 16
	outgoing: 
	datadep: 
	instructions:

