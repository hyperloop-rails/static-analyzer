SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: RECEIVEARG def_attributes 
		 7: 
		 8: (YearlyRecurrencePattern) def_%v_3 
		 9: %self->super def_%v_4 user[2.5,] attributes[2.6,] %v_3[2.8,] %v_0[2.1,] 	 SYMBOL:	 ARGS:user,attributes,%v_3,
		 10: RETURN %v_4[2.9,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = attributes_to_filter instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "yearly_selector" def_%v_3 
		 7: COPY TYPE_StringLiteral "yearly_month_of_year" def_%v_4 
		 8: COPY TYPE_StringLiteral "yearly_month_of_year2" def_%v_5 
		 9: COPY TYPE_StringLiteral "yearly_every_x_day" def_%v_6 
		 10: COPY TYPE_StringLiteral "yearly_every_xth_day" def_%v_7 
		 11: COPY TYPE_StringLiteral "yearly_day_of_week" def_%v_8 
		 12: COPY TYPE_Array def_%v_9 %v_3[2.6,] %v_4[2.7,] %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] %v_8[2.11,] 
		 13: RETURN %v_9[2.12,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = map_attributes instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_mapping 
		 6: 
		 7: %self->get_recurrence_selector def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: mapping->set def_%v_4 mapping[2.5,] %v_3[2.7,] 	 SYMBOL:recurrence_selector,	 ARGS:Symbol,%v_3,
		 9: 
		 10: %self->get_every_other2 def_%v_5 %self[2.0,2.7,] 	 SYMBOL:	 ARGS:
		 11: mapping->get def_%v_6 mapping[2.5,2.8,] %v_5[2.10,] 	 SYMBOL:	 ARGS:%v_5,
		 12: mapping->set def_%v_7 mapping[2.5,2.8,2.11,] %v_6[2.11,] 	 SYMBOL:every_other2,	 ARGS:Symbol,%v_6,
		 13: 
		 14: COPY TYPE_StringLiteral "yearly_every_x_day" def_%v_8 
		 15: %self->map def_%v_9 %self[2.0,2.7,2.10,] mapping[2.5,2.8,2.11,2.12,] %v_8[2.14,] 	 SYMBOL:every_other1,	 ARGS:mapping,Symbol,%v_8,
		 16: COPY TYPE_PASS def_mapping %v_9[2.15,] 
		 17: 
		 18: COPY TYPE_StringLiteral "yearly_every_xth_day" def_%v_10 
		 19: %self->map def_%v_11 %self[2.0,2.7,2.10,2.15,] %v_9[2.15,] %v_10[2.18,] 	 SYMBOL:every_other3,	 ARGS:mapping,Symbol,%v_10,
		 20: COPY TYPE_PASS def_mapping %v_11[2.19,] 
		 21: 
		 22: COPY TYPE_StringLiteral "yearly_day_of_week" def_%v_12 
		 23: %self->map def_%v_13 %self[2.0,2.7,2.10,2.15,2.19,] %v_11[2.19,] %v_12[2.22,] 	 SYMBOL:every_count,	 ARGS:mapping,Symbol,%v_12,
		 24: COPY TYPE_PASS def_mapping %v_13[2.23,] 
		 25: 
		 26: %v_13->except def_%v_14 %v_13[2.23,] 	 SYMBOL:yearly_month_of_year,	 ARGS:Symbol,
		 27: %v_14->except def_%v_15 %v_14[2.26,] 	 SYMBOL:yearly_month_of_year2,	 ARGS:Symbol,
		 28: RETURN %v_15[2.27,] %self[2.0,2.7,2.10,2.15,2.19,2.23,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = selector_key instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = valid_selector? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_selector 
		 6: 
		 7: COPY TYPE_StringLiteral "yearly_every_x_day" def_%v_3 
		 8: COPY TYPE_StringLiteral "yearly_every_xth_day" def_%v_4 
		 9: COPY TYPE_Array def_%v_5 %v_3[2.7,] %v_4[2.8,] 
		 10: selector->to_s def_%v_6 selector[2.5,] 	 SYMBOL:	 ARGS:
		 11: %v_5->include? def_%v_7 %v_5[2.9,] %v_6[2.10,] 	 SYMBOL:	 ARGS:%v_6,
		 12: RETURN %v_7[2.11,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_recurrence_selector instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->selector def_%v_3 %self[2.0,] 
		 7: COPY TYPE_StringLiteral "yearly_every_x_day" def_%v_4 
		 8: %v_3->== def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Fixnum def_%v_6 
		 1: RETURN %v_6[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_every_other2 instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH- def_%v_3 
		 7: %self->get_recurrence_selector def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->[] def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

