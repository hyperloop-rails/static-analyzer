SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: 
		 7: %self->super def_%v_3 user[2.5,] %v_0[2.1,] 	 SYMBOL:	 ARGS:user,
		 8: RETURN %v_3[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = every_x_week instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->get def_%v_3 %self[2.0,] 	 SYMBOL:every_other1,	 ARGS:Symbol,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = on_xday instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_n 
		 6: 
		 7: %self->get def_%v_3 %self[2.0,] 	 SYMBOL:every_day,	 ARGS:Symbol,
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->get def_%v_4 %self[2.0,] 	 SYMBOL:every_day,	 ARGS:Symbol,
		 1: %v_4->[] def_%v_5 %v_4[3.0,] n[2.5,] 	 SYMBOL:	 ARGS:n,Fixnum,
		 2: COPY TYPE_StringLiteral " " def_%v_6 
		 3: %v_5->!= def_%v_7 %v_5[3.1,] %v_6[3.2,] 	 SYMBOL:	 ARGS:%v_6,
		 4: RETURN %v_7[3.3,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.7,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = recurrence_pattern instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->every_x_week def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->> def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:Fixnum,
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: (I18n) def_%v_5 
		 2: COPY TYPE_StringLiteral "todos.recurrence.pattern.every_n" def_%v_6 
		 3: %self->every_x_week def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 4: HASH-n- def_%v_8 %v_7[3.3,] 
		 5: %v_5->t def_%v_9 %v_5[3.1,] %v_6[3.2,] %v_8[3.4,] 	 SYMBOL:	 ARGS:%v_6,%v_8,
		 6: COPY TYPE_StringLiteral " " def_%v_10 
		 7: %v_9->+ def_%v_11 %v_9[3.5,] %v_10[3.6,] 	 SYMBOL:	 ARGS:%v_10,
		 8: (I18n) def_%v_12 
		 9: COPY TYPE_StringLiteral "common.weeks" def_%v_13 
		 10: %v_12->t def_%v_14 %v_12[3.8,] %v_13[3.9,] 	 SYMBOL:	 ARGS:%v_13,
		 11: %v_11->+ def_%v_15 %v_11[3.7,] %v_14[3.10,] 	 SYMBOL:	 ARGS:%v_14,
		 12: RETURN %v_15[3.11,] %self[3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: (I18n) def_%v_16 
		 2: COPY TYPE_StringLiteral "todos.recurrence.pattern.weekly" def_%v_17 
		 3: %v_16->t def_%v_18 %v_16[4.1,] %v_17[4.2,] 	 SYMBOL:	 ARGS:%v_17,
		 4: RETURN %v_18[4.3,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = validate instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->super def_%v_3 %v_0[2.1,] 	 SYMBOL:	 ARGS:
		 7: 
		 8: %self->every_x_week def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 9: COPY TYPE_StringLiteral "Every other nth week may not be empty for weekly recurrence setting" def_%v_5 
		 10: %self->validate_not_blank def_%v_6 %self[2.0,2.8,] %v_4[2.8,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_4,%v_5,
		 11: 
		 12: COPY TYPE_StringLiteral "sunday" def_%v_7 
		 13: COPY TYPE_StringLiteral "monday" def_%v_8 
		 14: COPY TYPE_StringLiteral "tuesday" def_%v_9 
		 15: COPY TYPE_StringLiteral "wednesday" def_%v_10 
		 16: COPY TYPE_StringLiteral "thursday" def_%v_11 
		 17: COPY TYPE_StringLiteral "friday" def_%v_12 
		 18: COPY TYPE_StringLiteral "saturday" def_%v_13 
		 19: COPY TYPE_Array def_%v_14 %v_7[2.12,] %v_8[2.13,] %v_9[2.14,] %v_10[2.15,] %v_11[2.16,] %v_12[2.17,] %v_13[2.18,] 
		 20: %v_14->inject def_%v_15 %v_14[2.19,] %self[2.0,2.8,2.10,] 	 SYMBOL:	 ARGS:Boolean,%v_14,
CLOSURE BEGIN: set[] day[] %self[2.0,2.8,2.10,] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_set 
		 3: RECEIVEARG def_day 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
		 6: 
		 7: COPY TYPE_PASS def_%cl_1_3 set[2.2,] 
		 8: BRANCH set[2.2,] 
BB 4
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "on_" def_%cl_1_4 
		 1: BUILDSTRING def_%cl_1_5 %cl_1_4[4.0,] day[2.3,] 
		 2: %self->send def_%cl_1_6 %self[2.0,] %cl_1_5[4.1,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 3: RETURN %cl_1_6[4.2,] %self[4.2,2.0,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %cl_1_3[2.7,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[6.0,] 
		 2: RETURN %cl_1_8[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: day[2.3,] 
		 21: COPY TYPE_PASS def_something_set %v_15[2.20,] 
		 22: 
		 23: BRANCH %v_15[2.20,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_16 
		 1: RETURN %v_16[4.0,] %self[2.0,] 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: %self->errors def_%v_17 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_17->[] def_%v_18 %v_17[5.0,] 	 SYMBOL:base,	 ARGS:Symbol,
		 2: COPY TYPE_StringLiteral "You must specify at least one day on which the todo recurs" def_%v_19 
		 3: %v_18-><< def_%v_20 %v_18[5.1,] %v_19[5.2,] 	 SYMBOL:	 ARGS:%v_19,
		 4: RETURN %v_20[5.3,] %self[5.0,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%v_21 
		 1: def_%v_22 %v_21[7.0,] 
		 2: RETURN %v_22[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_next_date instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_previous 
		 6: 
		 7: %self->determine_start_date def_%v_3 %self[2.0,] previous[2.5,] 	 SYMBOL:	 ARGS:previous,
		 8: COPY TYPE_PASS def_start %v_3[2.7,] 
		 9: 
		 10: %self->find_first_day_in_this_week def_%v_4 %self[2.0,2.7,] %v_3[2.7,] 	 SYMBOL:	 ARGS:start,
		 11: COPY TYPE_PASS def_day %v_4[2.10,] 
		 12: 
		 13: %v_4->== def_%v_5 %v_4[2.10,] 	 SYMBOL:	 ARGS:Fixnum,
		 14: BRANCH %v_5[2.13,] 
BB 3
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
		 1: 
		 2: %self->every_x_week def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %v_7->week def_%v_8 %v_7[3.2,] 	 SYMBOL:	 ARGS:
		 4: start->+ def_%v_9 start[2.8,] %v_8[3.3,] 	 SYMBOL:	 ARGS:%v_8,
		 5: start->wday def_%v_10 start[3.4,2.8,] 	 SYMBOL:	 ARGS:
		 6: %v_10->days def_%v_11 %v_10[3.5,] 	 SYMBOL:	 ARGS:
		 7: %v_9->- def_%v_12 %v_9[3.4,] %v_11[3.6,] 	 SYMBOL:	 ARGS:%v_11,
		 8: COPY TYPE_PASS def_start %v_12[3.7,] 
		 9: 
		 10: %self->find_first_day_in_this_week def_%v_13 %self[3.2,2.0,] %v_12[3.7,] 	 SYMBOL:	 ARGS:start,
		 11: COPY TYPE_PASS def_start %v_13[3.10,] 
		 12: 
		 13: %v_13->== def_%v_14 %v_13[3.10,] 	 SYMBOL:	 ARGS:Fixnum,
		 14: BRANCH %v_14[3.13,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN day[2.11,] %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_15 
		 1: 
		 2: (Exception) def_%v_16 
		 3: %v_16->new def_%v_17 %v_16[6.2,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_StringLiteral "unable to find next weekly date (" def_%v_18 
		 5: %self->every_day def_%v_19 %self[2.0,] 	 SYMBOL:	 ARGS:
		 6: COPY TYPE_StringLiteral ")" def_%v_20 
		 7: BUILDSTRING def_%v_21 %v_18[6.4,] %v_19[6.5,] %v_20[6.6,] 
		 8: %self->raise def_%v_22 %self[6.5,2.0,] %v_17[6.3,] %v_21[6.7,] 	 SYMBOL:	 ARGS:%v_17,%v_21,
		 9: RETURN %v_22[6.8,] %self[6.5,6.8,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN start[3.8,3.11,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = determine_start_date instanceMethod = true
BB 1
	outgoing: 17 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_previous 
		 6: 
		 7: previous->nil? def_%v_3 previous[2.5,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->start_from def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_4[3.1,] 
BB 4
	outgoing: 17 
	datadep: 
	instructions:
		 0: (Time) def_%v_5 
		 1: %v_5->zone def_%v_6 %v_5[4.0,] 	 SYMBOL:	 ARGS:
		 2: %v_6->now def_%v_7 %v_6[4.1,] 	 SYMBOL:	 ARGS:
		 3: RETURN %v_7[4.2,] %self[2.0,] 
BB 5
	outgoing: 17 
	datadep: 
	instructions:
		 0: RETURN %v_4[3.1,] %self[2.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: CONSTANT def_%v_9 	 SYMBOL:	 ARGS:
		 2: previous->+ def_%v_10 previous[2.5,] %v_9[6.1,] 	 SYMBOL:	 ARGS:%v_9,
		 3: COPY TYPE_PASS def_start %v_10[6.2,] 
		 4: 
		 5: %v_10->wday def_%v_11 %v_10[6.2,] 	 SYMBOL:	 ARGS:
		 6: %v_11->== def_%v_12 %v_11[6.5,] 	 SYMBOL:	 ARGS:Fixnum,
		 7: BRANCH %v_12[6.6,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->every_x_week def_%v_13 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_13->- def_%v_14 %v_13[7.1,] 	 SYMBOL:	 ARGS:Fixnum,
		 3: %v_14->week def_%v_15 %v_14[7.2,] 	 SYMBOL:	 ARGS:
		 4: start->+ def_%v_16 start[6.3,] %v_15[7.3,] 	 SYMBOL:	 ARGS:%v_15,
		 5: COPY TYPE_PASS def_start %v_16[7.4,] 
		 6: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_16 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: 
		 1: %self->start_from def_%v_17 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_17->nil? def_%v_18 %v_17[9.1,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_18[9.2,] 
BB 10
	outgoing: 15 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_19 
		 1: 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: 
		 1: %self->start_from def_%v_20 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_20->> def_%v_21 %v_20[11.1,] previous[2.5,] 	 SYMBOL:	 ARGS:previous,
		 3: BRANCH %v_21[11.2,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: %self->start_from def_%v_22 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_start %v_22[12.0,] 
		 2: 
BB 13
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_22 
BB 14
	outgoing: 15 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_19 %v_22[13.0,12.0,] 
BB 15
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
		 1: RETURN start[12.1,7.5,6.3,] %self[2.0,] 
BB 17
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find_first_day_in_this_week instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_start 
		 6: 
		 7: start->wday def_%v_3 start[2.5,] 	 SYMBOL:	 ARGS:
		 8: %v_3->upto def_%v_4 %v_3[2.7,] %self[2.0,] 	 SYMBOL:	 ARGS:Fixnum,%v_3,
CLOSURE BEGIN: %self[2.0,] i[] start[2.5,2.7,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_i 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->on_xday def_%cl_1_3 %self[2.0,] i[2.2,] 	 SYMBOL:	 ARGS:i,
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: start->wday def_%cl_1_4 start[] 	 SYMBOL:	 ARGS:
		 1: i->- def_%cl_1_5 i[2.2,] %cl_1_4[4.0,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 2: %cl_1_5->days def_%cl_1_6 %cl_1_5[4.1,] 	 SYMBOL:	 ARGS:
		 3: start->+ def_%cl_1_7 start[4.0,] %cl_1_6[4.2,] 	 SYMBOL:	 ARGS:%cl_1_6,
		 4: 
		 5: RETURN %cl_1_7[4.3,] %self[2.0,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[7.0,] 
		 2: RETURN %cl_1_10[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: 
		 10: RETURN %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%v_5 
		 1: def_%v_6 %v_5[4.0,] 
		 2: RETURN %v_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

