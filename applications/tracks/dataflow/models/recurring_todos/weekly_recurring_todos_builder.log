SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: RECEIVEARG def_attributes 
		 7: 
		 8: (WeeklyRecurrencePattern) def_%v_3 
		 9: %self->super def_%v_4 user[2.5,] attributes[2.6,] %v_3[2.8,] %v_0[2.1,] 	 SYMBOL:	 ARGS:user,attributes,%v_3,
		 10: RETURN %v_4[2.9,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = attributes_to_filter instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "weekly_selector" def_%v_3 
		 7: COPY TYPE_StringLiteral "weekly_every_x_week" def_%v_4 
		 8: COPY TYPE_Array def_%v_5 %v_3[2.6,] %v_4[2.7,] 
		 9: COPY TYPE_StringLiteral "monday" def_%v_6 
		 10: COPY TYPE_StringLiteral "tuesday" def_%v_7 
		 11: COPY TYPE_StringLiteral "wednesday" def_%v_8 
		 12: COPY TYPE_StringLiteral "thursday" def_%v_9 
		 13: COPY TYPE_StringLiteral "friday" def_%v_10 
		 14: COPY TYPE_StringLiteral "saturday" def_%v_11 
		 15: COPY TYPE_StringLiteral "sunday" def_%v_12 
		 16: COPY TYPE_Array def_%v_13 %v_6[2.9,] %v_7[2.10,] %v_8[2.11,] %v_9[2.12,] %v_10[2.13,] %v_11[2.14,] %v_12[2.15,] 
		 17: %v_13->map def_%v_14 %v_13[2.16,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_13,
CLOSURE BEGIN: day[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_day 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "weekly_return_" def_%cl_1_3 
		 2: BUILDSTRING def_%cl_1_4 %cl_1_3[3.1,] day[2.2,] 
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 18: %v_5->+ def_%v_15 %v_5[2.8,] %v_14[2.17,] 	 SYMBOL:	 ARGS:%v_14,
		 19: RETURN %v_15[2.18,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = map_attributes instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_mapping 
		 6: 
		 7: COPY TYPE_StringLiteral "weekly_every_x_week" def_%v_3 
		 8: %self->map def_%v_4 %self[2.0,] mapping[2.5,] %v_3[2.7,] 	 SYMBOL:every_other1,	 ARGS:mapping,Symbol,%v_3,
		 9: COPY TYPE_PASS def_mapping %v_4[2.8,] 
		 10: 
		 11: HASH-monday-tuesday-wednesday-thursday-friday-saturday-sunday- def_%v_5 
		 12: %v_5->each def_%v_6 %v_5[2.11,] %self[2.0,2.8,] 	 SYMBOL:	 ARGS:%v_5,
CLOSURE BEGIN: day[] %self[2.0,2.8,] mapping[2.5,2.9,] index[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_day 
		 3: RECEIVEARG def_index 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "weekly_return_" def_%cl_1_3 
		 2: BUILDSTRING def_%cl_1_4 %cl_1_3[3.1,] day[2.2,] 
		 3: %self->map_day def_%cl_1_5 %self[2.0,] mapping[] %cl_1_4[3.2,] index[2.3,] 	 SYMBOL:every_day,	 ARGS:mapping,Symbol,%cl_1_4,index,
		 4: COPY TYPE_PASS def_mapping %cl_1_5[3.3,] 
		 5: RETURN %cl_1_5[3.3,] %self[3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: mapping[3.4,] index[2.3,] 
		 13: 
		 14: RETURN mapping[2.5,2.9,2.12,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = map_day instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_mapping 
		 6: RECEIVEARG def_key 
		 7: RECEIVEARG def_source_key 
		 8: RECEIVEARG def_index 
		 9: 
		 10: COPY TYPE_StringLiteral "       " def_%v_3 
		 11: mapping->set_if_nil def_%v_4 mapping[2.5,] key[2.6,] %v_3[2.10,] 	 SYMBOL:	 ARGS:key,%v_3,
		 12: 
		 13: COPY TYPE_StringLiteral " " def_%v_5 
		 14: mapping->set_if_nil def_%v_6 mapping[2.5,2.11,] source_key[2.7,] %v_5[2.13,] 	 SYMBOL:	 ARGS:source_key,%v_5,
		 15: 
		 16: mapping->get def_%v_7 mapping[2.5,2.11,2.14,] key[2.6,] 	 SYMBOL:	 ARGS:key,
		 17: %v_7->[] def_%v_8 %v_7[2.16,] index[2.8,] 	 SYMBOL:	 ARGS:Fixnum,index,
		 18: mapping->get def_%v_9 mapping[2.5,2.11,2.14,2.16,] source_key[2.7,] 	 SYMBOL:	 ARGS:source_key,
		 19: %v_8->+ def_%v_10 %v_8[2.17,] %v_9[2.18,] 	 SYMBOL:	 ARGS:%v_9,
		 20: mapping->get def_%v_11 mapping[2.5,2.11,2.14,2.16,2.18,] key[2.6,] 	 SYMBOL:	 ARGS:key,
		 21: index->+ def_%v_12 index[2.8,] 	 SYMBOL:	 ARGS:Fixnum,
		 22: mapping->get def_%v_13 mapping[2.5,2.11,2.14,2.16,2.18,2.20,] key[2.6,] 	 SYMBOL:	 ARGS:key,
		 23: %v_13->length def_%v_14 %v_13[2.22,] 	 SYMBOL:	 ARGS:
		 24: %v_11->[] def_%v_15 %v_11[2.20,] %v_12[2.21,] %v_14[2.23,] 	 SYMBOL:	 ARGS:%v_12,%v_14,
		 25: %v_10->+ def_%v_16 %v_10[2.19,] %v_15[2.24,] 	 SYMBOL:	 ARGS:%v_15,
		 26: mapping->set def_%v_17 mapping[2.5,2.11,2.14,2.16,2.18,2.20,2.22,] key[2.6,] %v_16[2.25,] 	 SYMBOL:	 ARGS:key,%v_16,
		 27: 
		 28: mapping->except def_%v_18 mapping[2.5,2.11,2.14,2.16,2.18,2.20,2.22,2.26,] source_key[2.7,] 	 SYMBOL:	 ARGS:source_key,
		 29: RETURN %v_18[2.28,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = selector_key instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = valid_selector? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_key 
		 6: 
		 7: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

