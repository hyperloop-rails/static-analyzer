SET IRMethod, name = active instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = active_or_hidden instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = not_completed instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = completed instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = deferred instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = blocked instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = pending instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = deferred_or_blocked instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = not_deferred_or_blocked instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = hidden instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "INNER JOIN contexts c_hidden ON c_hidden.id = todos.context_id" def_%v_3 
		 7: %self->joins def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: COPY TYPE_StringLiteral "todos.state = ? OR (c_hidden.state = ? AND (todos.state = ? OR todos.state = ? OR todos.state = ?))" def_%v_5 
		 9: COPY TYPE_StringLiteral "project_hidden" def_%v_6 
		 10: COPY TYPE_StringLiteral "hidden" def_%v_7 
		 11: COPY TYPE_StringLiteral "active" def_%v_8 
		 12: COPY TYPE_StringLiteral "deferred" def_%v_9 
		 13: COPY TYPE_StringLiteral "pending" def_%v_10 
		 14: %v_4->where def_%v_11 %v_4[2.7,] %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] %v_8[2.11,] %v_9[2.12,] %v_10[2.13,] 	 SYMBOL:	 ARGS:%v_5,%v_6,%v_7,%v_8,%v_9,%v_10,
		 15: RETURN %v_11[2.14,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = not_hidden instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "INNER JOIN contexts c_hidden ON c_hidden.id = todos.context_id" def_%v_3 
		 7: %self->joins def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: COPY TYPE_StringLiteral "NOT(todos.state = ? OR (c_hidden.state = ? AND (todos.state = ? OR todos.state = ? OR todos.state = ?)))" def_%v_5 
		 9: COPY TYPE_StringLiteral "project_hidden" def_%v_6 
		 10: COPY TYPE_StringLiteral "hidden" def_%v_7 
		 11: COPY TYPE_StringLiteral "active" def_%v_8 
		 12: COPY TYPE_StringLiteral "deferred" def_%v_9 
		 13: COPY TYPE_StringLiteral "pending" def_%v_10 
		 14: %v_4->where def_%v_11 %v_4[2.7,] %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] %v_8[2.11,] %v_9[2.12,] %v_10[2.13,] 	 SYMBOL:	 ARGS:%v_5,%v_6,%v_7,%v_8,%v_9,%v_10,
		 15: RETURN %v_11[2.14,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = are_due instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = due_today instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "todos.due <= ?" def_%v_3 
		 7: (Time) def_%v_4 
		 8: %v_4->zone def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_5->now def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: %self->where def_%v_7 %self[2.0,] %v_3[2.6,] %v_6[2.9,] 	 SYMBOL:	 ARGS:%v_3,%v_6,
		 11: RETURN %v_7[2.10,] %self[2.0,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = with_tag instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] tag_id[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_tag_id 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "INNER JOIN taggings ON todos.id = taggings.taggable_id" def_%cl_1_3 
		 2: %self->joins def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: COPY TYPE_StringLiteral "taggings.tag_id = ? AND taggings.taggable_type='Todo'" def_%cl_1_5 
		 4: %cl_1_4->where def_%cl_1_6 %cl_1_4[3.2,] %cl_1_5[3.3,] tag_id[2.2,] 	 SYMBOL:	 ARGS:%cl_1_5,tag_id,
		 5: RETURN %cl_1_6[3.4,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = with_tags instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] tag_ids[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_tag_ids 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "EXISTS(SELECT * from taggings t WHERE t.tag_id IN (?) AND t.taggable_id=todos.id AND t.taggable_type='Todo')" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] tag_ids[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,tag_ids,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = completed_after instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] date[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "todos.completed_at > ?" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] date[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,date,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = completed_before instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] date[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "todos.completed_at < ?" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] date[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,date,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = created_after instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] date[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "todos.created_at > ?" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] date[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,date,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = created_before instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] date[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "todos.created_at < ?" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] date[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,date,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = created_or_completed_after instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] date[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "todos.created_at > ? or todos.completed_at > ?" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] date[2.2,] date[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,date,date,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = active instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = active_or_hidden instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = not_completed instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = completed instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = deferred instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = blocked instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = pending instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = deferred_or_blocked instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = not_deferred_or_blocked instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = hidden instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "INNER JOIN contexts c_hidden ON c_hidden.id = todos.context_id" def_%v_3 
		 7: %self->joins def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: COPY TYPE_StringLiteral "todos.state = ? OR (c_hidden.state = ? AND (todos.state = ? OR todos.state = ? OR todos.state = ?))" def_%v_5 
		 9: COPY TYPE_StringLiteral "project_hidden" def_%v_6 
		 10: COPY TYPE_StringLiteral "hidden" def_%v_7 
		 11: COPY TYPE_StringLiteral "active" def_%v_8 
		 12: COPY TYPE_StringLiteral "deferred" def_%v_9 
		 13: COPY TYPE_StringLiteral "pending" def_%v_10 
		 14: %v_4->where def_%v_11 %v_4[2.7,] %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] %v_8[2.11,] %v_9[2.12,] %v_10[2.13,] 	 SYMBOL:	 ARGS:%v_5,%v_6,%v_7,%v_8,%v_9,%v_10,
		 15: RETURN %v_11[2.14,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = not_hidden instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "INNER JOIN contexts c_hidden ON c_hidden.id = todos.context_id" def_%v_3 
		 7: %self->joins def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: COPY TYPE_StringLiteral "NOT(todos.state = ? OR (c_hidden.state = ? AND (todos.state = ? OR todos.state = ? OR todos.state = ?)))" def_%v_5 
		 9: COPY TYPE_StringLiteral "project_hidden" def_%v_6 
		 10: COPY TYPE_StringLiteral "hidden" def_%v_7 
		 11: COPY TYPE_StringLiteral "active" def_%v_8 
		 12: COPY TYPE_StringLiteral "deferred" def_%v_9 
		 13: COPY TYPE_StringLiteral "pending" def_%v_10 
		 14: %v_4->where def_%v_11 %v_4[2.7,] %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] %v_8[2.11,] %v_9[2.12,] %v_10[2.13,] 	 SYMBOL:	 ARGS:%v_5,%v_6,%v_7,%v_8,%v_9,%v_10,
		 15: RETURN %v_11[2.14,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = are_due instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = due_today instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "todos.due <= ?" def_%v_3 
		 7: (Time) def_%v_4 
		 8: %v_4->zone def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_5->now def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: %self->where def_%v_7 %self[2.0,] %v_3[2.6,] %v_6[2.9,] 	 SYMBOL:	 ARGS:%v_3,%v_6,
		 11: RETURN %v_7[2.10,] %self[2.0,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = with_tag instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] tag_id[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_tag_id 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "INNER JOIN taggings ON todos.id = taggings.taggable_id" def_%cl_1_3 
		 2: %self->joins def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: COPY TYPE_StringLiteral "taggings.tag_id = ? AND taggings.taggable_type='Todo'" def_%cl_1_5 
		 4: %cl_1_4->where def_%cl_1_6 %cl_1_4[3.2,] %cl_1_5[3.3,] tag_id[2.2,] 	 SYMBOL:	 ARGS:%cl_1_5,tag_id,
		 5: RETURN %cl_1_6[3.4,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = with_tags instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] tag_ids[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_tag_ids 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "EXISTS(SELECT * from taggings t WHERE t.tag_id IN (?) AND t.taggable_id=todos.id AND t.taggable_type='Todo')" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] tag_ids[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,tag_ids,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = completed_after instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] date[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "todos.completed_at > ?" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] date[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,date,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = completed_before instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] date[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "todos.completed_at < ?" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] date[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,date,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = created_after instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] date[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "todos.created_at > ?" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] date[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,date,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = created_before instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] date[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "todos.created_at < ?" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] date[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,date,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = created_or_completed_after instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] date[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "todos.created_at > ? or todos.completed_at > ?" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] date[2.2,] date[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,date,date,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = active instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = active_or_hidden instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = not_completed instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = completed instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = deferred instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = blocked instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = pending instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = deferred_or_blocked instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = not_deferred_or_blocked instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = hidden instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "INNER JOIN contexts c_hidden ON c_hidden.id = todos.context_id" def_%v_3 
		 7: %self->joins def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: COPY TYPE_StringLiteral "todos.state = ? OR (c_hidden.state = ? AND (todos.state = ? OR todos.state = ? OR todos.state = ?))" def_%v_5 
		 9: COPY TYPE_StringLiteral "project_hidden" def_%v_6 
		 10: COPY TYPE_StringLiteral "hidden" def_%v_7 
		 11: COPY TYPE_StringLiteral "active" def_%v_8 
		 12: COPY TYPE_StringLiteral "deferred" def_%v_9 
		 13: COPY TYPE_StringLiteral "pending" def_%v_10 
		 14: %v_4->where def_%v_11 %v_4[2.7,] %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] %v_8[2.11,] %v_9[2.12,] %v_10[2.13,] 	 SYMBOL:	 ARGS:%v_5,%v_6,%v_7,%v_8,%v_9,%v_10,
		 15: RETURN %v_11[2.14,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = not_hidden instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "INNER JOIN contexts c_hidden ON c_hidden.id = todos.context_id" def_%v_3 
		 7: %self->joins def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: COPY TYPE_StringLiteral "NOT(todos.state = ? OR (c_hidden.state = ? AND (todos.state = ? OR todos.state = ? OR todos.state = ?)))" def_%v_5 
		 9: COPY TYPE_StringLiteral "project_hidden" def_%v_6 
		 10: COPY TYPE_StringLiteral "hidden" def_%v_7 
		 11: COPY TYPE_StringLiteral "active" def_%v_8 
		 12: COPY TYPE_StringLiteral "deferred" def_%v_9 
		 13: COPY TYPE_StringLiteral "pending" def_%v_10 
		 14: %v_4->where def_%v_11 %v_4[2.7,] %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] %v_8[2.11,] %v_9[2.12,] %v_10[2.13,] 	 SYMBOL:	 ARGS:%v_5,%v_6,%v_7,%v_8,%v_9,%v_10,
		 15: RETURN %v_11[2.14,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = are_due instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = due_today instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "todos.due <= ?" def_%v_3 
		 7: (Time) def_%v_4 
		 8: %v_4->zone def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_5->now def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: %self->where def_%v_7 %self[2.0,] %v_3[2.6,] %v_6[2.9,] 	 SYMBOL:	 ARGS:%v_3,%v_6,
		 11: RETURN %v_7[2.10,] %self[2.0,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = with_tag instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] tag_id[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_tag_id 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "INNER JOIN taggings ON todos.id = taggings.taggable_id" def_%cl_1_3 
		 2: %self->joins def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: COPY TYPE_StringLiteral "taggings.tag_id = ? AND taggings.taggable_type='Todo'" def_%cl_1_5 
		 4: %cl_1_4->where def_%cl_1_6 %cl_1_4[3.2,] %cl_1_5[3.3,] tag_id[2.2,] 	 SYMBOL:	 ARGS:%cl_1_5,tag_id,
		 5: RETURN %cl_1_6[3.4,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = with_tags instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] tag_ids[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_tag_ids 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "EXISTS(SELECT * from taggings t WHERE t.tag_id IN (?) AND t.taggable_id=todos.id AND t.taggable_type='Todo')" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] tag_ids[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,tag_ids,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = completed_after instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] date[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "todos.completed_at > ?" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] date[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,date,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = completed_before instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] date[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "todos.completed_at < ?" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] date[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,date,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = created_after instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] date[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "todos.created_at > ?" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] date[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,date,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = created_before instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] date[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "todos.created_at < ?" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] date[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,date,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = created_or_completed_after instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] date[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_date 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "todos.created_at > ? or todos.completed_at > ?" def_%cl_1_3 
		 2: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] date[2.2,] date[2.2,] 	 SYMBOL:	 ARGS:%cl_1_3,date,date,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = due_after instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_date 
		 6: 
		 7: COPY TYPE_StringLiteral "todos.due > ?" def_%v_3 
		 8: %self->where def_%v_4 %self[2.0,] %v_3[2.7,] date[2.5,] 	 SYMBOL:	 ARGS:%v_3,date,
		 9: RETURN %v_4[2.8,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = due_between instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_start_date 
		 6: RECEIVEARG def_end_date 
		 7: 
		 8: COPY TYPE_StringLiteral "todos.due > ? AND todos.due <= ?" def_%v_3 
		 9: %self->where def_%v_4 %self[2.0,] %v_3[2.8,] start_date[2.5,] end_date[2.6,] 	 SYMBOL:	 ARGS:%v_3,start_date,end_date,
		 10: RETURN %v_4[2.9,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = check_show_from_in_future instanceMethod = true
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 9 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->show_from_changed? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->show_from def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_4->present? def_%v_5 %v_4[3.1,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_5[3.2,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->show_from def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %self->user def_%v_7 %self[4.0,2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_7->date def_%v_8 %v_7[4.1,] 	 SYMBOL:	 ARGS:
		 3: %v_6->< def_%v_9 %v_6[4.0,] %v_8[4.2,] 	 SYMBOL:	 ARGS:%v_8,
		 4: COPY TYPE_PASS def_%v_5 %v_9[4.3,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: BRANCH %v_5[4.4,3.2,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->errors def_%v_10 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "show_from" def_%v_11 
		 3: (I18n) def_%v_12 
		 4: COPY TYPE_StringLiteral "models.todo.error_date_must_be_future" def_%v_13 
		 5: %v_12->t def_%v_14 %v_12[6.3,] %v_13[6.4,] 	 SYMBOL:	 ARGS:%v_13,
		 6: %v_10->add def_%v_15 %v_10[6.1,] %v_11[6.2,] %v_14[6.5,] 	 SYMBOL:	 ARGS:%v_11,%v_14,
		 7: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_15 
BB 8
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %v_15[7.0,6.6,] %self[2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = count_by_group instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_g 
		 6: 
		 7: %self->except def_%v_3 %self[2.0,] 	 SYMBOL:order,	 ARGS:Symbol,
		 8: %v_3->group def_%v_4 %v_3[2.7,] g[2.5,] 	 SYMBOL:	 ARGS:g,
		 9: %v_4->count def_%v_5 %v_4[2.8,] 	 SYMBOL:	 ARGS:
		 10: RETURN %v_5[2.9,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_args 
		 6: 
		 7: def_%v_3 args[2.5,] 
		 8: %self->super def_%v_4 %v_3[2.7,] %v_0[2.1,] 	 SYMBOL:	 ARGS:Splat,
		 9: 
		 10: ATTRASSIGN %self->predecessor_array 
		 11: 
		 12: ATTRASSIGN %self->removed_predecessors 
		 13: RETURN %self[2.0,2.10,2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = no_uncompleted_predecessors_or_deferral? instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->show_from def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->blank? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_PASS def_no_deferral %v_4[2.7,] 
		 9: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: (Time) def_%v_5 
		 1: %v_5->zone def_%v_6 %v_5[3.0,] 	 SYMBOL:	 ARGS:
		 2: %v_6->now def_%v_7 %v_6[3.1,] 	 SYMBOL:	 ARGS:
		 3: %self->show_from def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 4: %v_7->> def_%v_9 %v_7[3.2,] %v_8[3.3,] 	 SYMBOL:	 ARGS:%v_8,
		 5: COPY TYPE_PASS def_%v_4 %v_9[3.4,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_10 no_deferral[2.8,] 
		 2: BRANCH no_deferral[2.8,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: %self->no_uncompleted_predecessors? def_%v_11 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: RETURN %v_11[5.0,] %self[5.0,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %v_10[4.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = no_uncompleted_predecessors? instanceMethod = true
BB 1
	outgoing: 4 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->uncompleted_predecessors? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->! def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 4
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = uncompleted_predecessors? instanceMethod = true
BB 1
	outgoing: 4 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->uncompleted_predecessors def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->empty? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->! def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 4
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = should_be_blocked? instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->uncompleted_predecessors def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->empty? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->state def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_StringLiteral "project_hidden" def_%v_6 
		 2: %v_5->== def_%v_7 %v_5[3.0,] %v_6[3.1,] 	 SYMBOL:	 ARGS:%v_6,
		 3: COPY TYPE_PASS def_%v_4 %v_7[3.2,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: %v_4->! def_%v_8 %v_4[3.3,2.7,] 	 SYMBOL:	 ARGS:
		 1: RETURN %v_8[4.0,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = guard_for_transition_from_deferred_to_pending instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->no_uncompleted_predecessors? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->not_part_of_hidden_container? def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: RETURN %v_4[3.0,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.6,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = not_part_of_hidden_container? instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->project def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->project def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_4->hidden? def_%v_5 %v_4[3.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_3 %v_5[3.1,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.2,2.6,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->context def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_6->hidden? def_%v_7 %v_6[5.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_3 %v_7[5.1,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %v_3->! def_%v_8 %v_3[5.2,3.2,2.6,] 	 SYMBOL:	 ARGS:
		 1: RETURN %v_8[6.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = specification instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->project def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: (NullProject) def_%v_4 
		 8: %v_3->is_a? def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "(none)" def_%v_6 
		 1: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->project def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_7->name def_%v_8 %v_7[4.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_6 %v_8[4.1,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_project_name %v_6[4.2,3.0,] 
		 1: 
		 2: COPY TYPE_StringLiteral "'" def_%v_9 
		 3: %self->description def_%v_10 %self[2.0,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_StringLiteral "' <'" def_%v_11 
		 5: %self->context def_%v_12 %self[5.3,2.0,] 	 SYMBOL:	 ARGS:
		 6: %v_12->title def_%v_13 %v_12[5.5,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "'; '" def_%v_14 
		 8: COPY TYPE_StringLiteral "'>" def_%v_15 
		 9: BUILDSTRING def_%v_16 %v_9[5.2,] %v_10[5.3,] %v_11[5.4,] %v_13[5.6,] %v_14[5.7,] project_name[5.0,] %v_15[5.8,] 
		 10: RETURN %v_16[5.9,] %self[5.3,5.5,2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = save_predecessors instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->predecessor_array def_%v_3 %self[2.0,] 
		 7: %v_3->nil? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: RETURN %v_5[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->predecessors def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_current_array %v_6[4.1,] 
		 3: 
		 4: GETFIELD %self->predecessor_array def_%v_7 %self[4.1,2.0,] 
		 5: %v_6->- def_%v_8 %v_6[4.1,] %v_7[4.4,] 	 SYMBOL:	 ARGS:%v_7,
		 6: COPY TYPE_PASS def_remove_array %v_8[4.5,] 
		 7: 
		 8: GETFIELD %self->predecessor_array def_%v_9 %self[4.1,2.0,] 
		 9: %v_9->- def_%v_10 %v_9[4.8,] current_array[4.2,] 	 SYMBOL:	 ARGS:current_array,
		 10: COPY TYPE_PASS def_add_array %v_10[4.9,] 
		 11: 
		 12: COPY TYPE_Array def_%v_11 
		 13: ATTRASSIGN %self->removed_predecessors %v_11[4.12,] 
		 14: 
		 15: remove_array->each def_%v_12 remove_array[4.6,] %self[4.1,4.13,2.0,] 	 SYMBOL:	 ARGS:remove_array,
CLOSURE BEGIN: todo[] %self[4.1,4.13,2.0,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_todo 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: todo->nil? def_%cl_1_3 todo[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_4 
		 1: RETURN %cl_1_4[4.0,] %self[2.0,] 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->removed_predecessors def_%cl_1_5 %self[2.0,] 
		 2: %cl_1_5-><< def_%cl_1_6 %cl_1_5[5.1,] todo[2.2,] 	 SYMBOL:	 ARGS:todo,
		 3: 
		 4: %self->predecessors def_%cl_1_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 5: %cl_1_7->delete def_%cl_1_8 %cl_1_7[5.4,] todo[2.2,] 	 SYMBOL:	 ARGS:todo,
		 6: RETURN %cl_1_8[5.5,] %self[5.4,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[7.0,] 
		 2: RETURN %cl_1_10[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 16: 
		 17: add_array->each def_%v_13 add_array[4.10,] %self[4.1,4.13,2.0,] 	 SYMBOL:	 ARGS:add_array,
CLOSURE BEGIN: todo[4.15,] %self[4.1,4.13,2.0,] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_todo 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 10 
	datadep: 
	instructions:
		 0: 
		 1: todo->nil? def_%cl_2_3 todo[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_2_3[3.1,] 
BB 4
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->logger def_%cl_2_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "Could not find " def_%cl_2_5 
		 3: todo->description def_%cl_2_6 todo[2.2,] 	 SYMBOL:	 ARGS:
		 4: BUILDSTRING def_%cl_2_7 %cl_2_5[4.2,] %cl_2_6[4.3,] 
		 5: %cl_2_4->error def_%cl_2_8 %cl_2_4[4.1,] %cl_2_7[4.4,] 	 SYMBOL:	 ARGS:%cl_2_7,
		 6: 
BB 5
	outgoing: 6 7 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->predecessors def_%cl_2_9 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_2_9->include? def_%cl_2_10 %cl_2_9[5.1,] todo[2.2,] 	 SYMBOL:	 ARGS:todo,
		 3: BRANCH %cl_2_10[5.2,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_2_11 
		 1: 
BB 7
	outgoing: 8 10 
	datadep: 
	instructions:
		 0: %self->predecessors def_%cl_2_12 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %cl_2_12-><< def_%cl_2_13 %cl_2_12[7.0,] todo[2.2,] 	 SYMBOL:	 ARGS:todo,
		 2: COPY TYPE_PASS def_%cl_2_11 %cl_2_13[7.1,] 
BB 8
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %cl_2_11[7.2,6.0,] %self[2.0,] 
BB 9
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %cl_2_8[4.5,] %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_2_14 
		 1: def_%cl_2_15 %cl_2_14[10.0,] 
		 2: RETURN %cl_2_15[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 18: RETURN %v_13[4.17,] %self[4.1,4.13,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = touch_predecessors instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->touch def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: 
		 8: %self->predecessors def_%v_4 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 9: %v_4->each def_%v_5 %v_4[2.8,] 	 SYMBOL:touch_predecessors,	 ARGS:
		 10: RETURN %v_5[2.9,] %self[2.0,2.6,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = removed_predecessors instanceMethod = true
BB 1
	outgoing: 4 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->removed_predecessors def_%v_3 %self[2.0,] 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 4
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = remove_predecessor instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_predecessor 
		 6: 
		 7: %self->predecessors def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->delete def_%v_4 %v_3[2.7,] predecessor[2.5,] 	 SYMBOL:	 ARGS:predecessor,
		 9: 
		 10: %self->predecessors def_%v_5 %self[2.0,2.7,] 	 SYMBOL:	 ARGS:
		 11: %v_5->empty? def_%v_6 %v_5[2.10,] 	 SYMBOL:	 ARGS:
		 12: BRANCH %v_6[2.11,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->reload def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: 
		 3: %self->not_part_of_hidden_container? def_%v_8 %self[3.1,2.0,] 	 SYMBOL:	 ARGS:
		 4: BRANCH %v_8[3.3,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->activate! def_%v_9 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->hide! def_%v_10 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_9 %v_10[5.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %v_9[5.1,4.0,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->save! def_%v_11 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_11[7.1,] %self[7.1,2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = is_successor? instanceMethod = true
BB 1
	outgoing: 13 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 11 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_todo 
		 6: 
		 7: %self->== def_%v_3 %self[2.0,] todo[2.5,] 	 SYMBOL:	 ARGS:todo,
		 8: BRANCH %v_3[2.7,] 
BB 4
	outgoing: 13 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] 
BB 5
	outgoing: 6 7 11 
	datadep: 
	instructions:
		 0: 
		 1: %self->successors def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_5->empty? def_%v_6 %v_5[5.1,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_6[5.2,] 
BB 6
	outgoing: 13 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] 
BB 7
	outgoing: 8 11 
	datadep: 
	instructions:
		 0: 
		 1: %self->successors def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_8->each def_%v_9 %v_8[7.1,] %self[7.1,2.0,] 	 SYMBOL:	 ARGS:%v_8,
CLOSURE BEGIN: item[] todo[2.5,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_item 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: item->is_successor? def_%cl_1_3 item[2.2,] todo[] 	 SYMBOL:	 ARGS:todo,
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: RETURN %self[2.0,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[7.0,] 
		 2: RETURN %cl_1_6[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: COPY TYPE_PASS def_%v_7 %v_9[7.2,] 
BB 8
	outgoing: 13 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_4 %v_7[7.3,] 
		 1: 
		 2: RETURN %self[2.0,] 
BB 11
	outgoing: 13 
	datadep: 
	instructions:
		 0: def_%v_10 
		 1: def_%v_11 %v_10[11.0,] 
		 2: RETURN %v_11[11.1,] %self[2.0,] 
BB 13
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = has_pending_successors instanceMethod = true
BB 1
	outgoing: 4 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->pending_successors def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->empty? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->! def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 4
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = hidden? instanceMethod = true
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 8 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->project_hidden? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 7 
	datadep: 
	instructions:
		 0: %self->context def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_4->hidden? def_%v_5 %v_4[3.0,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_5[3.1,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: %self->active? def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: BRANCH %v_6[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->deferred? def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_6 %v_7[5.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_5 %v_6[5.1,4.0,] 
BB 7
	outgoing: 10 
	datadep: 
	instructions:
		 0: RETURN %v_5[6.0,3.1,] %self[2.0,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.6,] %self[2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_state_from_project instanceMethod = true
BB 1
	outgoing: 16 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->project_hidden? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->project def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_4->hidden? def_%v_5 %v_4[3.0,] 	 SYMBOL:	 ARGS:
		 2: %v_5->! def_%v_6 %v_5[3.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_PASS def_%v_3 %v_6[3.2,] 
BB 4
	outgoing: 5 9 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.3,2.6,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->uncompleted_predecessors def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_7->empty? def_%v_8 %v_7[5.1,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_8[5.2,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->activate! def_%v_9 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->block! def_%v_10 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_9 %v_10[7.1,] 
BB 8
	outgoing: 15 
	datadep: 
	instructions:
		 0: 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: 
		 1: %self->active? def_%v_11 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_11[9.1,] 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: %self->project def_%v_12 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_12->hidden? def_%v_13 %v_12[10.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_11 %v_13[10.1,] 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: BRANCH %v_11[10.2,9.1,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: 
		 1: %self->hide! def_%v_14 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: 
BB 13
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_14 
BB 14
	outgoing: 15 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_9 %v_14[13.0,12.1,] 
BB 15
	outgoing: 16 
	datadep: 
	instructions:
		 0: 
		 1: %self->save! def_%v_15 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_15[15.1,] %self[15.1,2.0,] 
BB 16
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = toggle_completion! instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->completed? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 7 
	datadep: 
	instructions:
		 0: %self->activate! def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: RETURN %v_4[3.0,] %self[3.0,2.0,] 
BB 4
	outgoing: 7 
	datadep: 
	instructions:
		 0: %self->complete! def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: RETURN %v_5[4.0,] %self[4.0,2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = show_from instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->[] def_%v_3 %self[2.0,] 	 SYMBOL:show_from,	 ARGS:Symbol,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = show_from= instanceMethod = true
BB 1
	outgoing: 18 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_date 
		 6: 
		 7: %self->deferred? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: date->blank? def_%v_4 date[2.5,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_3 %v_4[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 18 
	datadep: 
	instructions:
		 0: 
		 1: %self->activate def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_5[5.1,] %self[5.1,2.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: (Date) def_%v_6 
		 2: date->is_a? def_%v_7 date[2.5,] %v_6[6.1,] 	 SYMBOL:	 ARGS:%v_6,
		 3: BRANCH %v_7[6.2,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: date->in_time_zone def_%v_8 date[2.5,] 	 SYMBOL:	 ARGS:
		 1: %v_8->beginning_of_day def_%v_9 %v_8[7.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_date %v_9[7.1,] 
		 3: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_9 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->[] date[7.2,2.5,] 
		 2: 
		 3: %self->active? def_%v_10 %self[9.1,2.0,] 	 SYMBOL:	 ARGS:
		 4: BRANCH %v_10[9.3,] 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: date->present? def_%v_11 date[7.2,2.5,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_10 %v_11[10.0,] 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: BRANCH %v_10[10.1,9.3,] 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: %self->show_from def_%v_12 %self[9.1,2.0,] 	 SYMBOL:	 ARGS:
		 1: %self->user def_%v_13 %self[12.0,9.1,2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_13->date def_%v_14 %v_13[12.1,] 	 SYMBOL:	 ARGS:
		 3: %v_12->> def_%v_15 %v_12[12.0,] %v_14[12.2,] 	 SYMBOL:	 ARGS:%v_14,
		 4: COPY TYPE_PASS def_%v_10 %v_15[12.3,] 
BB 13
	outgoing: 14 15 
	datadep: 
	instructions:
		 0: BRANCH %v_10[12.4,10.1,9.3,] 
BB 14
	outgoing: 16 
	datadep: 
	instructions:
		 0: %self->defer def_%v_16 %self[9.1,2.0,] 	 SYMBOL:	 ARGS:
		 1: 
BB 15
	outgoing: 16 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_16 
BB 16
	outgoing: 18 
	datadep: 
	instructions:
		 0: RETURN %v_16[15.0,14.0,] %self[9.1,2.0,] 
BB 18
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = starred? instanceMethod = true
BB 1
	outgoing: 4 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (STARRED_TAG_NAME) def_%v_3 
		 7: %self->has_tag? def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 4
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = toggle_star! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->starred? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->! def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: ATTRASSIGN %self->starred %v_4[2.7,] 
		 9: RETURN %v_4[2.7,] %self[2.0,2.6,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = starred= instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_starred 
		 6: 
		 7: BRANCH starred[2.5,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->starred? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_3[3.1,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: (STARRED_TAG_NAME) def_%v_5 
		 1: %self->_add_tags def_%v_6 %self[2.0,] %v_5[5.0,] 	 SYMBOL:	 ARGS:%v_5,
		 2: COPY TYPE_PASS def_%v_4 %v_6[5.1,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: (STARRED_TAG_NAME) def_%v_7 
		 2: %self->_remove_tags def_%v_8 %self[2.0,] %v_7[7.1,] 	 SYMBOL:	 ARGS:%v_7,
		 3: COPY TYPE_PASS def_%v_4 %v_8[7.2,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: RETURN starred[2.5,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = from_recurring_todo? instanceMethod = true
BB 1
	outgoing: 4 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->recurring_todo_id def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->!= def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:Nil,
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 4
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = add_predecessor_list instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_predecessor_list 
		 6: 
		 7: (String) def_%v_3 
		 8: predecessor_list->kind_of? def_%v_4 predecessor_list[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: COPY TYPE_StringLiteral "," def_%v_6 
		 3: predecessor_list->split def_%v_7 predecessor_list[2.5,] %v_6[3.2,] 	 SYMBOL:	 ARGS:%v_6,
		 4: COPY TYPE_Array def_%v_8 
		 5: %v_7->inject def_%v_9 %v_7[3.3,] %v_8[3.4,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_8,%v_7,
CLOSURE BEGIN: todo_id[] %self[2.0,] predecessor[] list[] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_list 
		 3: RECEIVEARG def_todo_id 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 10 
	datadep: 
	instructions:
		 0: 
		 1: todo_id->present? def_%cl_1_3 todo_id[2.3,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 10 
	datadep: 
	instructions:
		 0: %self->user def_%cl_1_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %cl_1_4->todos def_%cl_1_5 %cl_1_4[4.0,] 	 SYMBOL:	 ARGS:
		 2: todo_id->to_i def_%cl_1_6 todo_id[2.3,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_5->find def_%cl_1_7 %cl_1_5[4.1,] %cl_1_6[4.2,] 	 SYMBOL:	 ARGS:%cl_1_6,
		 4: COPY TYPE_PASS def_predecessor %cl_1_7[4.3,] 
		 5: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_7 
BB 6
	outgoing: 7 8 10 
	datadep: 
	instructions:
		 0: 
		 1: predecessor->nil? def_%cl_1_8 predecessor[4.4,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_8[6.1,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_9 
		 1: 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: list-><< def_%cl_1_10 list[2.2,] predecessor[4.4,] 	 SYMBOL:	 ARGS:predecessor,
		 1: COPY TYPE_PASS def_%cl_1_9 %cl_1_10[8.0,] 
BB 9
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: RETURN list[2.2,] %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_1_11 
		 1: def_%cl_1_12 %cl_1_11[10.0,] 
		 2: RETURN %cl_1_12[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: todo_id[2.3,] predecessor[4.4,] 
		 6: ATTRASSIGN %self->predecessor_array %v_9[3.5,] 
		 7: 
		 8: GETFIELD %self->predecessor_array def_%v_10 %self[3.6,2.0,] 
		 9: RETURN %v_10[3.8,] %self[3.6,2.0,] 
BB 4
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = add_predecessor instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_t 
		 6: 
		 7: t->nil? def_%v_3 t[2.5,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: %self->predecessors def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: ATTRASSIGN %self->predecessor_array %v_5[4.2,] 
		 4: 
		 5: GETFIELD %self->predecessor_array def_%v_6 %self[4.2,4.3,2.0,] 
		 6: %v_6-><< def_%v_7 %v_6[4.5,] t[2.5,] 	 SYMBOL:	 ARGS:t,
		 7: RETURN %v_7[4.6,] %self[4.2,4.3,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = activate_pending_todos instanceMethod = true
BB 1
	outgoing: 4 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->successors def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->select def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: t[] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_t 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: t->uncompleted_predecessors def_%cl_1_3 t[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->empty? def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: t->completed? def_%cl_1_5 t[2.2,] 	 SYMBOL:	 ARGS:
		 1: %cl_1_5->! def_%cl_1_6 %cl_1_5[4.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[6.0,] 
		 2: RETURN %cl_1_8[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: COPY TYPE_PASS def_pending_todos %v_4[2.7,] 
		 9: 
		 10: %v_4->each def_%v_5 %v_4[2.7,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: t[2.7,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_t 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: t->activate! def_%cl_2_3 t[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: 
		 12: RETURN pending_todos[2.8,] %self[2.0,2.6,] 
BB 4
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = block_successors instanceMethod = true
BB 1
	outgoing: 4 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->successors def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->select def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: t[] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_t 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: t->active? def_%cl_1_3 t[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: t->deferred? def_%cl_1_4 t[2.2,] 	 SYMBOL:	 ARGS:
		 1: RETURN %cl_1_4[4.0,] %self[2.0,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[6.0,] 
		 2: RETURN %cl_1_6[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: COPY TYPE_PASS def_active_successors %v_4[2.7,] 
		 9: 
		 10: %v_4->each def_%v_5 %v_4[2.7,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: t[2.7,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_t 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: t->block! def_%cl_2_3 t[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: 
		 12: RETURN active_successors[2.8,] %self[2.0,2.6,] 
BB 4
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = raw_notes= instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_value 
		 6: 
		 7: ATTRASSIGN %self->[] value[2.5,] 
		 8: RETURN value[2.5,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = predecessor_dependencies= instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_params 
		 6: 
		 7: params->[] def_%v_3 params[2.5,] 	 SYMBOL:predecessor,	 ARGS:Symbol,
		 8: COPY TYPE_PASS def_deps %v_3[2.7,] 
		 9: 
		 10: %v_3->nil? def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 11: BRANCH %v_4[2.10,] 
BB 3
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: deps->class def_%v_6 deps[2.8,] 	 SYMBOL:	 ARGS:
		 3: (Array) def_%v_7 
		 4: %v_6->== def_%v_8 %v_6[4.2,] %v_7[4.3,] 	 SYMBOL:	 ARGS:%v_7,
		 5: BRANCH %v_8[4.4,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_9 
		 1: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_10 deps[2.8,] 
		 1: COPY TYPE_PASS def_deps %v_10[7.0,] 
		 2: COPY TYPE_PASS def_%v_9 %v_10[7.0,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: deps->each def_%v_11 deps[7.1,2.8,] %self[2.0,] 	 SYMBOL:	 ARGS:deps,
CLOSURE BEGIN: dep[] %self[2.0,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_dep 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: dep->present? def_%cl_1_3 dep[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: %self->user def_%cl_1_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %cl_1_4->todos def_%cl_1_5 %cl_1_4[4.0,] 	 SYMBOL:	 ARGS:
		 2: dep->to_i def_%cl_1_6 dep[2.2,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_5->find def_%cl_1_7 %cl_1_5[4.1,] %cl_1_6[4.2,] 	 SYMBOL:	 ARGS:%cl_1_6,
		 4: %self->add_predecessor def_%cl_1_8 %self[4.0,2.0,] %cl_1_7[4.3,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 5: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_1_8[4.4,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[7.0,] 
		 2: RETURN %cl_1_10[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: RETURN %v_11[8.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = context= instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_value 
		 6: 
		 7: (Context) def_%v_3 
		 8: value->is_a? def_%v_4 value[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->original_context value[2.5,] 
		 2: COPY TYPE_PASS def_%v_5 value[2.5,] 
		 3: RETURN value[2.5,] %self[3.1,2.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: (Context) def_%v_6 
		 2: value->[] def_%v_7 value[2.5,] 	 SYMBOL:name,	 ARGS:Symbol,
		 3: HASH-name- def_%v_8 %v_7[4.2,] 
		 4: %v_6->where def_%v_9 %v_6[4.1,] %v_8[4.3,] 	 SYMBOL:	 ARGS:%v_8,
		 5: %v_9->first def_%v_10 %v_9[4.4,] 	 SYMBOL:	 ARGS:
		 6: COPY TYPE_PASS def_c %v_10[4.5,] 
		 7: 
		 8: %v_10->nil? def_%v_11 %v_10[4.5,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %v_11[4.8,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: (Context) def_%v_12 
		 1: %v_12->create def_%v_13 %v_12[5.0,] value[2.5,] 	 SYMBOL:	 ARGS:value,
		 2: COPY TYPE_PASS def_c %v_13[5.1,] 
		 3: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_13 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->original_context c[5.2,4.6,] 
		 2: RETURN c[5.2,4.6,] %self[7.1,2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = project instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->original_project def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->nil? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: (Project) def_%v_5 
		 1: %v_5->null_object def_%v_6 %v_5[3.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_6[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->original_project def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: RETURN %v_7[4.0,] %self[4.0,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = project= instanceMethod = true
BB 1
	outgoing: 14 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_value 
		 6: 
		 7: (Project) def_%v_3 
		 8: value->is_a? def_%v_4 value[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 14 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->original_project value[2.5,] 
		 2: COPY TYPE_PASS def_%v_5 value[2.5,] 
		 3: RETURN value[2.5,] %self[3.1,2.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: value->nil? def_%v_6 value[2.5,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_6[4.1,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: (NullProject) def_%v_7 
		 1: value->is_a? def_%v_8 value[2.5,] %v_7[5.0,] 	 SYMBOL:	 ARGS:%v_7,
		 2: COPY TYPE_PASS def_%v_6 %v_8[5.1,] 
BB 6
	outgoing: 7 11 
	datadep: 
	instructions:
		 0: %v_6->! def_%v_9 %v_6[5.2,4.1,] 	 SYMBOL:	 ARGS:
		 1: BRANCH %v_9[6.0,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: (Project) def_%v_10 
		 2: value->[] def_%v_11 value[2.5,] 	 SYMBOL:name,	 ARGS:Symbol,
		 3: HASH-name- def_%v_12 %v_11[7.2,] 
		 4: %v_10->where def_%v_13 %v_10[7.1,] %v_12[7.3,] 	 SYMBOL:	 ARGS:%v_12,
		 5: %v_13->first def_%v_14 %v_13[7.4,] 	 SYMBOL:	 ARGS:
		 6: COPY TYPE_PASS def_p %v_14[7.5,] 
		 7: 
		 8: %v_14->nil? def_%v_15 %v_14[7.5,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %v_15[7.8,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: (Project) def_%v_16 
		 1: %v_16->create def_%v_17 %v_16[8.0,] value[2.5,] 	 SYMBOL:	 ARGS:value,
		 2: COPY TYPE_PASS def_p %v_17[8.1,] 
		 3: 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_17 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->original_project p[8.2,7.6,] 
		 2: COPY TYPE_PASS def_%v_18 p[8.2,7.6,] 
		 3: 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->original_project value[2.5,] 
		 2: COPY TYPE_PASS def_%v_18 value[2.5,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN %v_18[11.2,10.2,] %self[11.1,10.1,2.0,] 
BB 14
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = has_project? instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->project_id def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->nil? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->project def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: (NullProject) def_%v_6 
		 2: %v_5->is_a? def_%v_7 %v_5[3.0,] %v_6[3.1,] 	 SYMBOL:	 ARGS:%v_6,
		 3: COPY TYPE_PASS def_%v_4 %v_7[3.2,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: %v_4->! def_%v_8 %v_4[3.3,2.7,] 	 SYMBOL:	 ARGS:
		 1: RETURN %v_8[4.0,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = add_tags= instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_params 
		 6: 
		 7: params->[] def_%v_3 params[2.5,] 	 SYMBOL:tag,	 ARGS:Symbol,
		 8: %v_3->nil? def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: RETURN %v_5[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: params->[] def_%v_6 params[2.5,] 	 SYMBOL:tag,	 ARGS:Symbol,
		 2: COPY TYPE_Array def_%v_7 
		 3: %v_6->inject def_%v_8 %v_6[4.1,] %v_7[4.2,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_7,%v_6,
CLOSURE BEGIN: value[] list[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_list 
		 3: RECEIVEARG def_value 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: value->[] def_%cl_1_3 value[2.3,] 	 SYMBOL:name,	 ARGS:Symbol,
		 2: list-><< def_%cl_1_4 list[2.2,] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: value[2.3,] 
		 4: COPY TYPE_PASS def_tag_list %v_8[4.3,] 
		 5: 
		 6: COPY TYPE_StringLiteral ", " def_%v_9 
		 7: %v_8->join def_%v_10 %v_8[4.3,] %v_9[4.6,] 	 SYMBOL:	 ARGS:%v_9,
		 8: %self->tag_with def_%v_11 %self[2.0,] %v_10[4.7,] 	 SYMBOL:	 ARGS:%v_10,
		 9: RETURN %v_11[4.8,] %self[4.8,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = import instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_filename 
		 6: RECEIVEARG def_params 
		 7: RECEIVEARG def_user 
		 8: 
		 9: user->contexts def_%v_3 user[2.7,] 	 SYMBOL:	 ARGS:
		 10: COPY TYPE_StringLiteral "id" def_%v_4 
		 11: %v_3->order def_%v_5 %v_3[2.9,] %v_4[2.10,] 	 SYMBOL:	 ARGS:%v_4,
		 12: %v_5->first def_%v_6 %v_5[2.11,] 	 SYMBOL:	 ARGS:
		 13: COPY TYPE_PASS def_default_context %v_6[2.12,] 
		 14: 
		 15: COPY TYPE_Fixnum def_count 
		 16: 
		 17: (CSV) def_%v_7 
		 18: HASH-headers- def_%v_8 
		 19: %v_7->foreach def_%v_9 %v_7[2.17,] filename[2.5,] %v_8[2.18,] %self[2.0,] 	 SYMBOL:	 ARGS:filename,%v_8,%v_7,
CLOSURE BEGIN: params[2.6,] row[] user[2.7,2.9,] %self[2.0,] todo[] default_context[2.13,] count[2.15,] 
BB 1
	outgoing: 26 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_row 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 24 
	datadep: 
	instructions:
		 0: 
		 1: params->[] def_%cl_1_3 params[] 	 SYMBOL:description,	 ARGS:Symbol,
		 2: %cl_1_3->to_i def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: row->[] def_%cl_1_5 row[2.2,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: user->id def_%cl_1_6 user[] 	 SYMBOL:	 ARGS:
		 5: %self->find_by_description_and_user_id def_%cl_1_7 %self[2.0,] %cl_1_5[3.3,] %cl_1_6[3.4,] 	 SYMBOL:	 ARGS:%cl_1_5,%cl_1_6,
		 6: BRANCH %cl_1_7[3.5,] 
BB 4
	outgoing: 26 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_8 
		 1: RETURN %cl_1_8[4.0,] %self[2.0,] 
BB 5
	outgoing: 6 7 24 
	datadep: 
	instructions:
		 0: 
		 1: %self->new def_%cl_1_9 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_todo %cl_1_9[5.1,] 
		 3: 
		 4: ATTRASSIGN %cl_1_9->user user[] 
		 5: 
		 6: params->[] def_%cl_1_10 params[] 	 SYMBOL:description,	 ARGS:Symbol,
		 7: %cl_1_10->to_i def_%cl_1_11 %cl_1_10[5.6,] 	 SYMBOL:	 ARGS:
		 8: row->[] def_%cl_1_12 row[2.2,] %cl_1_11[5.7,] 	 SYMBOL:	 ARGS:%cl_1_11,
		 9: (MAX_DESCRIPTION_LENGTH) def_%cl_1_13 
		 10: %cl_1_12->truncate def_%cl_1_14 %cl_1_12[5.8,] %cl_1_13[5.9,] 	 SYMBOL:	 ARGS:%cl_1_13,
		 11: ATTRASSIGN todo->description %cl_1_14[5.10,] 
		 12: 
		 13: (Context) def_%cl_1_15 
		 14: params->[] def_%cl_1_16 params[5.6,] 	 SYMBOL:context,	 ARGS:Symbol,
		 15: %cl_1_16->to_i def_%cl_1_17 %cl_1_16[5.14,] 	 SYMBOL:	 ARGS:
		 16: row->[] def_%cl_1_18 row[5.8,2.2,] %cl_1_17[5.15,] 	 SYMBOL:	 ARGS:%cl_1_17,
		 17: user->id def_%cl_1_19 user[] 	 SYMBOL:	 ARGS:
		 18: %cl_1_15->find_by_name_and_user_id def_%cl_1_20 %cl_1_15[5.13,] %cl_1_18[5.16,] %cl_1_19[5.17,] 	 SYMBOL:	 ARGS:%cl_1_18,%cl_1_19,
		 19: BRANCH %cl_1_20[5.18,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%cl_1_20 default_context[] 
BB 7
	outgoing: 8 9 24 
	datadep: 
	instructions:
		 0: ATTRASSIGN todo->context %cl_1_20[6.0,5.18,] 
		 1: 
		 2: params->[] def_%cl_1_21 params[] 	 SYMBOL:project,	 ARGS:Symbol,
		 3: %cl_1_21->to_i def_%cl_1_22 %cl_1_21[7.2,] 	 SYMBOL:	 ARGS:
		 4: row->[] def_%cl_1_23 row[2.2,] %cl_1_22[7.3,] 	 SYMBOL:	 ARGS:%cl_1_22,
		 5: %cl_1_23->present? def_%cl_1_24 %cl_1_23[7.4,] 	 SYMBOL:	 ARGS:
		 6: BRANCH %cl_1_24[7.5,] 
BB 8
	outgoing: 10 24 
	datadep: 
	instructions:
		 0: (Project) def_%cl_1_25 
		 1: params->[] def_%cl_1_26 params[] 	 SYMBOL:project,	 ARGS:Symbol,
		 2: %cl_1_26->to_i def_%cl_1_27 %cl_1_26[8.1,] 	 SYMBOL:	 ARGS:
		 3: row->[] def_%cl_1_28 row[2.2,] %cl_1_27[8.2,] 	 SYMBOL:	 ARGS:%cl_1_27,
		 4: user->id def_%cl_1_29 user[] 	 SYMBOL:	 ARGS:
		 5: %cl_1_25->find_by_name_and_user_id def_%cl_1_30 %cl_1_25[8.0,] %cl_1_28[8.3,] %cl_1_29[8.4,] 	 SYMBOL:	 ARGS:%cl_1_28,%cl_1_29,
		 6: ATTRASSIGN todo->project %cl_1_30[8.5,] 
		 7: 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_30 
BB 10
	outgoing: 11 12 24 
	datadep: 
	instructions:
		 0: 
		 1: params->[] def_%cl_1_31 params[] 	 SYMBOL:completed_at,	 ARGS:Symbol,
		 2: %cl_1_31->to_i def_%cl_1_32 %cl_1_31[10.1,] 	 SYMBOL:	 ARGS:
		 3: row->[] def_%cl_1_33 row[2.2,] %cl_1_32[10.2,] 	 SYMBOL:	 ARGS:%cl_1_32,
		 4: %cl_1_33->present? def_%cl_1_34 %cl_1_33[10.3,] 	 SYMBOL:	 ARGS:
		 5: BRANCH %cl_1_34[10.4,] 
BB 11
	outgoing: 13 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "completed" def_%cl_1_35 
		 1: 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "active" def_%cl_1_36 
		 1: COPY TYPE_PASS def_%cl_1_35 %cl_1_36[12.0,] 
BB 13
	outgoing: 14 15 24 
	datadep: 
	instructions:
		 0: ATTRASSIGN todo->state %cl_1_35[12.1,11.0,] 
		 1: 
		 2: params->[] def_%cl_1_37 params[] 	 SYMBOL:notes,	 ARGS:Symbol,
		 3: %cl_1_37->to_i def_%cl_1_38 %cl_1_37[13.2,] 	 SYMBOL:	 ARGS:
		 4: row->[] def_%cl_1_39 row[2.2,] %cl_1_38[13.3,] 	 SYMBOL:	 ARGS:%cl_1_38,
		 5: %cl_1_39->present? def_%cl_1_40 %cl_1_39[13.4,] 	 SYMBOL:	 ARGS:
		 6: BRANCH %cl_1_40[13.5,] 
BB 14
	outgoing: 16 24 
	datadep: 
	instructions:
		 0: params->[] def_%cl_1_41 params[] 	 SYMBOL:notes,	 ARGS:Symbol,
		 1: %cl_1_41->to_i def_%cl_1_42 %cl_1_41[14.0,] 	 SYMBOL:	 ARGS:
		 2: row->[] def_%cl_1_43 row[2.2,] %cl_1_42[14.1,] 	 SYMBOL:	 ARGS:%cl_1_42,
		 3: (MAX_NOTES_LENGTH) def_%cl_1_44 
		 4: %cl_1_43->truncate def_%cl_1_45 %cl_1_43[14.2,] %cl_1_44[14.3,] 	 SYMBOL:	 ARGS:%cl_1_44,
		 5: ATTRASSIGN todo->notes %cl_1_45[14.4,] 
		 6: 
BB 15
	outgoing: 16 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_45 
BB 16
	outgoing: 17 18 24 
	datadep: 
	instructions:
		 0: 
		 1: params->[] def_%cl_1_46 params[] 	 SYMBOL:created_at,	 ARGS:Symbol,
		 2: %cl_1_46->to_i def_%cl_1_47 %cl_1_46[16.1,] 	 SYMBOL:	 ARGS:
		 3: row->[] def_%cl_1_48 row[2.2,] %cl_1_47[16.2,] 	 SYMBOL:	 ARGS:%cl_1_47,
		 4: %cl_1_48->present? def_%cl_1_49 %cl_1_48[16.3,] 	 SYMBOL:	 ARGS:
		 5: BRANCH %cl_1_49[16.4,] 
BB 17
	outgoing: 19 24 
	datadep: 
	instructions:
		 0: params->[] def_%cl_1_50 params[] 	 SYMBOL:created_at,	 ARGS:Symbol,
		 1: %cl_1_50->to_i def_%cl_1_51 %cl_1_50[17.0,] 	 SYMBOL:	 ARGS:
		 2: row->[] def_%cl_1_52 row[2.2,] %cl_1_51[17.1,] 	 SYMBOL:	 ARGS:%cl_1_51,
		 3: ATTRASSIGN todo->created_at %cl_1_52[17.2,] 
		 4: 
BB 18
	outgoing: 19 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_52 
BB 19
	outgoing: 20 21 24 
	datadep: 
	instructions:
		 0: 
		 1: params->[] def_%cl_1_53 params[] 	 SYMBOL:due,	 ARGS:Symbol,
		 2: %cl_1_53->to_i def_%cl_1_54 %cl_1_53[19.1,] 	 SYMBOL:	 ARGS:
		 3: row->[] def_%cl_1_55 row[2.2,] %cl_1_54[19.2,] 	 SYMBOL:	 ARGS:%cl_1_54,
		 4: ATTRASSIGN todo->due %cl_1_55[19.3,] 
		 5: 
		 6: params->[] def_%cl_1_56 params[19.1,] 	 SYMBOL:completed_at,	 ARGS:Symbol,
		 7: %cl_1_56->to_i def_%cl_1_57 %cl_1_56[19.6,] 	 SYMBOL:	 ARGS:
		 8: row->[] def_%cl_1_58 row[19.3,2.2,] %cl_1_57[19.7,] 	 SYMBOL:	 ARGS:%cl_1_57,
		 9: %cl_1_58->present? def_%cl_1_59 %cl_1_58[19.8,] 	 SYMBOL:	 ARGS:
		 10: BRANCH %cl_1_59[19.9,] 
BB 20
	outgoing: 22 24 
	datadep: 
	instructions:
		 0: params->[] def_%cl_1_60 params[] 	 SYMBOL:completed_at,	 ARGS:Symbol,
		 1: %cl_1_60->to_i def_%cl_1_61 %cl_1_60[20.0,] 	 SYMBOL:	 ARGS:
		 2: row->[] def_%cl_1_62 row[2.2,] %cl_1_61[20.1,] 	 SYMBOL:	 ARGS:%cl_1_61,
		 3: ATTRASSIGN todo->completed_at %cl_1_62[20.2,] 
		 4: 
BB 21
	outgoing: 22 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_62 
BB 22
	outgoing: 24 26 
	datadep: 
	instructions:
		 0: 
		 1: todo->save! def_%cl_1_63 todo[20.3,19.4,17.3,14.5,13.0,8.6,7.0,5.2,5.11,] 	 SYMBOL:	 ARGS:
		 2: 
		 3: count->+ def_%cl_1_64 count[] 	 SYMBOL:	 ARGS:Fixnum,
		 4: COPY TYPE_PASS def_count %cl_1_64[22.3,] 
		 5: RETURN %cl_1_64[22.3,] %self[2.0,] 
BB 24
	outgoing: 26 
	datadep: 
	instructions:
		 0: def_%cl_1_65 
		 1: def_%cl_1_66 %cl_1_65[24.0,] 
		 2: RETURN %cl_1_66[24.1,] %self[2.0,] 
BB 26
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: todo[5.2,5.11,7.0,8.6,13.0,14.5,17.3,19.4,20.3,] count[22.4,] 
		 20: 
		 21: RETURN count[2.15,2.19,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = destroy instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->pending_successors def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->each def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: successor[] %self[2.0,2.6,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_successor 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: successor->uncompleted_predecessors def_%cl_1_3 successor[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->delete def_%cl_1_4 %cl_1_3[3.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
		 3: 
		 4: successor->uncompleted_predecessors def_%cl_1_5 successor[3.1,2.2,] 	 SYMBOL:	 ARGS:
		 5: %cl_1_5->empty? def_%cl_1_6 %cl_1_5[3.4,] 	 SYMBOL:	 ARGS:
		 6: BRANCH %cl_1_6[3.5,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: successor->activate! def_%cl_1_7 successor[2.2,] 	 SYMBOL:	 ARGS:
		 2: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[7.0,] 
		 2: RETURN %cl_1_9[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: 
		 9: %self->super def_%v_5 %current_module[2.3,] %v_0[2.1,] 	 SYMBOL:	 ARGS:
		 10: RETURN %v_5[2.9,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

