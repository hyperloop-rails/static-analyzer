SET IRMethod, name = check_circular_dependencies instanceMethod = true
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->predecessor def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->nil? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->successor def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_5->nil? def_%v_6 %v_5[3.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_4 %v_6[3.1,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_4[3.2,2.7,] 
BB 5
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_7 
		 1: RETURN %v_7[5.0,] %self[2.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->successor def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %self->predecessor def_%v_9 %self[6.1,2.0,] 	 SYMBOL:	 ARGS:
		 3: %v_8->is_successor? def_%v_10 %v_8[6.1,] %v_9[6.2,] 	 SYMBOL:	 ARGS:%v_9,
		 4: BRANCH %v_10[6.3,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: %self->errors def_%v_11 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_StringLiteral "Depends on:" def_%v_12 
		 2: COPY TYPE_StringLiteral "Adding '" def_%v_13 
		 3: %self->successor def_%v_14 %self[7.0,2.0,] 	 SYMBOL:	 ARGS:
		 4: %v_14->specification def_%v_15 %v_14[7.3,] 	 SYMBOL:	 ARGS:
		 5: COPY TYPE_StringLiteral "' would create a circular dependency" def_%v_16 
		 6: BUILDSTRING def_%v_17 %v_13[7.2,] %v_15[7.4,] %v_16[7.5,] 
		 7: %v_11->add def_%v_18 %v_11[7.0,] %v_12[7.1,] %v_17[7.6,] 	 SYMBOL:	 ARGS:%v_12,%v_17,
		 8: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_18 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %v_18[8.0,7.7,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

