SET IRMethod, name = included instanceMethod = false
SET IRMethod, name = to_s instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->to_a def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->map def_%v_4 %v_3[2.6,] 	 SYMBOL:name,	 ARGS:
		 8: %v_4->sort def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: (Tag) def_%v_6 
		 10: (inherit JOIN_DELIMITER) def_%v_7 %v_6[2.9,] 
		 11: %v_7[2.10,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_6->const_missing def_%v_7 %v_6[2.9,] 	 SYMBOL:JOIN_DELIMITER,	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_5->join def_%v_8 %v_5[2.8,] %v_7[3.0,2.10,] 	 SYMBOL:	 ARGS:%v_7,
		 1: RETURN %v_8[4.0,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = all_except_starred instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->to_a def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->reject def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: tag[] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_tag 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: tag->name def_%cl_1_3 tag[2.2,] 	 SYMBOL:	 ARGS:
		 2: (Todo) def_%cl_1_4 
		 3: (inherit STARRED_TAG_NAME) def_%cl_1_5 %cl_1_4[3.2,] 
		 4: %cl_1_5[3.3,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: %cl_1_4->const_missing def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:STARRED_TAG_NAME,	 ARGS:Symbol,
BB 5
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: %cl_1_3->== def_%cl_1_6 %cl_1_3[3.1,] %cl_1_5[4.0,3.3,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 1: RETURN %cl_1_6[5.0,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[6.0,] 
		 2: RETURN %cl_1_8[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tag_list instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->tags def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->reload def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: 
		 9: %self->tags def_%v_5 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 10: %v_5->to_s def_%v_6 %v_5[2.9,] 	 SYMBOL:	 ARGS:
		 11: RETURN %v_6[2.10,] %self[2.0,2.6,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tag_list= instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_value 
		 6: 
		 7: %self->tag_with def_%v_3 %self[2.0,] value[2.5,] 	 SYMBOL:	 ARGS:value,
		 8: RETURN %v_3[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tag_with instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_list 
		 6: 
		 7: %self->tag_cast_to_string def_%v_3 %self[2.0,] list[2.5,] 	 SYMBOL:	 ARGS:list,
		 8: COPY TYPE_PASS def_list %v_3[2.7,] 
		 9: 
		 10: (Tag) def_%v_4 
		 11: %v_4->transaction def_%v_5 %v_4[2.10,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: %self[2.0,2.7,] list[2.5,2.8,] current[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->tags def_%cl_1_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->to_a def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->map def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:name,	 ARGS:
		 4: COPY TYPE_PASS def_current %cl_1_5[3.3,] 
		 5: 
		 6: list->- def_%cl_1_6 list[] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:current,
		 7: %self->_add_tags def_%cl_1_7 %self[3.1,2.0,] %cl_1_6[3.6,] 	 SYMBOL:	 ARGS:%cl_1_6,
		 8: 
		 9: current->- def_%cl_1_8 current[3.4,] list[3.6,] 	 SYMBOL:	 ARGS:list,
		 10: %self->_remove_tags def_%cl_1_9 %self[3.1,3.7,2.0,] %cl_1_8[3.9,] 	 SYMBOL:	 ARGS:%cl_1_8,
		 11: RETURN %cl_1_9[3.10,] %self[3.1,3.7,3.10,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_10 
		 1: def_%cl_1_11 %cl_1_10[4.0,] 
		 2: RETURN %cl_1_11[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 12: 
		 13: RETURN %self[2.0,2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = has_tag? instanceMethod = true
BB 1
	outgoing: 4 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_tag_name 
		 6: 
		 7: %self->tags def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->any? def_%v_4 %v_3[2.7,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: tag[] tag_name[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_tag 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: tag->name def_%cl_1_3 tag[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->== def_%cl_1_4 %cl_1_3[3.1,] tag_name[] 	 SYMBOL:	 ARGS:tag_name,
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: RETURN %v_4[2.8,] %self[2.0,2.7,] 
BB 4
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = _add_tags instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_incoming 
		 6: 
		 7: %self->tag_cast_to_string def_%v_3 %self[2.0,] incoming[2.5,] 	 SYMBOL:	 ARGS:incoming,
		 8: %v_3->each def_%v_4 %v_3[2.7,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: tag_name[] %self[2.0,2.7,] tag[] 
BB 1
	outgoing: 28 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_tag_name 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 24 26 
	datadep: 
	instructions:
		 0: 
		 1: tag_name->present? def_%cl_1_3 tag_name[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: GLOBALVAR $! def_%cl_1_4 
BB 6
	outgoing: 7 10 13 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: (Tag) def_%cl_1_7 
		 3: HASH-name- def_%cl_1_8 tag_name[2.2,] 
		 4: %cl_1_7->where def_%cl_1_9 %cl_1_7[6.2,] %cl_1_8[6.3,] 	 SYMBOL:	 ARGS:%cl_1_8,
		 5: %cl_1_9->first_or_create def_%cl_1_10 %cl_1_9[6.4,] 	 SYMBOL:	 ARGS:
		 6: COPY TYPE_PASS def_tag %cl_1_10[6.5,] 
		 7: 
		 8: %cl_1_10->new_record? def_%cl_1_11 %cl_1_10[6.5,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %cl_1_11[6.8,] 
BB 7
	outgoing: 8 9 13 
	datadep: 
	instructions:
		 0: (Tag) def_%cl_1_12 
		 1: (inherit Error) def_%cl_1_13 %cl_1_12[7.0,] 
		 2: %cl_1_13[7.1,] 
BB 8
	outgoing: 9 13 
	datadep: 
	instructions:
		 0: %cl_1_12->const_missing def_%cl_1_13 %cl_1_12[7.0,] 	 SYMBOL:Error,	 ARGS:Symbol,
BB 9
	outgoing: 11 13 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "tag could not be saved: " def_%cl_1_14 
		 1: BUILDSTRING def_%cl_1_15 %cl_1_14[9.0,] tag_name[2.2,] 
		 2: %self->raise def_%cl_1_16 %self[2.0,] %cl_1_13[8.0,7.1,] %cl_1_15[9.1,] 	 SYMBOL:	 ARGS:%cl_1_13,%cl_1_15,
		 3: 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_16 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: 
		 1: %self->tags def_%cl_1_17 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_17-><< def_%cl_1_18 %cl_1_17[11.1,] tag[6.6,] 	 SYMBOL:	 ARGS:tag,
		 3: COPY TYPE_PASS def_%cl_1_6 %cl_1_18[11.2,] 
		 4: %cl_1_4[4.1,] 
BB 12
	outgoing: 23 
	datadep: 
	instructions:
		 0: 
BB 13
	outgoing: 14 15 22 
	datadep: 
	instructions:
		 0: def_%cl_1_19 
		 1: (ActiveRecord) def_%cl_1_20 
		 2: (inherit StatementInvalid) def_%cl_1_21 %cl_1_20[13.1,] 
		 3: %cl_1_21[13.2,] 
BB 14
	outgoing: 15 22 
	datadep: 
	instructions:
		 0: %cl_1_20->const_missing def_%cl_1_21 %cl_1_20[13.1,] 	 SYMBOL:StatementInvalid,	 ARGS:Symbol,
BB 15
	outgoing: 16 17 22 
	datadep: 
	instructions:
		 0: def_%cl_1_22 %cl_1_21[14.0,13.2,] %cl_1_19[13.0,] 
		 1: BRANCH %cl_1_22[15.0,] 
BB 16
	outgoing: 22 28 
	datadep: 
	instructions:
		 0: %cl_1_19[13.0,] 
BB 17
	outgoing: 18 19 22 
	datadep: 
	instructions:
		 0: GLOBALVAR $! def_%cl_1_23 
		 1: COPY TYPE_PASS def_e %cl_1_23[17.0,] 
		 2: 
		 3: %cl_1_23->to_s def_%cl_1_24 %cl_1_23[17.0,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_Regexp def_%cl_1_25 
		 5: %cl_1_24->=~ def_%cl_1_26 %cl_1_24[17.3,] 	 SYMBOL:	 ARGS:%cl_1_25,
		 6: BRANCH %cl_1_26[17.5,] 
BB 18
	outgoing: 20 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_27 
		 1: 
BB 19
	outgoing: 20 22 
	datadep: 
	instructions:
		 0: %self->raise def_%cl_1_28 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%cl_1_27 %cl_1_28[19.0,] 
BB 20
	outgoing: 21 22 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%cl_1_6 %cl_1_27[19.1,18.0,] 
		 1: %cl_1_4[4.1,] 
BB 21
	outgoing: 23 
	datadep: 
	instructions:
		 0: 
BB 22
	outgoing: 26 28 
	datadep: 
	instructions:
		 0: def_%cl_1_29 
		 1: def_%cl_1_30 %cl_1_29[22.0,] %cl_1_4[4.1,] 
		 2: %cl_1_29[22.0,] 
BB 23
	outgoing: 28 
	datadep: 
	instructions:
		 0: RETURN %cl_1_6[11.3,20.0,] %self[2.0,] 
BB 24
	outgoing: 28 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 26
	outgoing: 28 
	datadep: 
	instructions:
		 0: def_%cl_1_31 
		 1: def_%cl_1_32 %cl_1_31[26.0,] 
		 2: RETURN %cl_1_32[26.1,] %self[2.0,] 
BB 28
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: e[17.1,] tag[6.6,] 
		 9: RETURN %v_4[2.8,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = _remove_tags instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_outgoing 
		 6: 
		 7: %self->tag_cast_to_string def_%v_3 %self[2.0,] outgoing[2.5,] 	 SYMBOL:	 ARGS:outgoing,
		 8: COPY TYPE_PASS def_outgoing %v_3[2.7,] 
		 9: 
		 10: %self->tags def_%v_4 %self[2.0,2.7,] 	 SYMBOL:	 ARGS:
		 11: %self->tags def_%v_6 %self[2.0,2.7,2.10,] 	 SYMBOL:	 ARGS:
		 12: %v_6->select def_%v_7 %v_6[2.11,] %self[2.0,2.7,2.10,2.11,] 	 SYMBOL:	 ARGS:%v_6,
CLOSURE BEGIN: tag[] outgoing[2.5,2.8,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_tag 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: tag->name def_%cl_1_3 tag[2.2,] 	 SYMBOL:	 ARGS:
		 2: outgoing->include? def_%cl_1_4 outgoing[] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 13: def_%v_5 %v_7[2.12,] 
		 14: %v_4->destroy def_%v_8 %v_4[2.10,] %v_5[2.13,] 	 SYMBOL:	 ARGS:Splat,
		 15: RETURN %v_8[2.14,] %self[2.0,2.7,2.10,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_tag_name_from_item instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_item 
		 6: 
		 7: (Tag) def_%v_5 
		 8: def_%v_4 %v_5[2.7,] item[2.5,] 
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: (String) def_%v_7 
		 1: def_%v_6 %v_7[3.0,] item[2.5,] 
		 2: BRANCH %v_6[3.1,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "Invalid type" def_%v_9 
		 2: %self->raise def_%v_10 %self[2.0,] %v_9[4.1,] 	 SYMBOL:	 ARGS:%v_9,
		 3: COPY TYPE_PASS def_%v_3 %v_10[4.2,] 
		 4: RETURN %v_10[4.2,] %self[4.2,2.0,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: item->name def_%v_8 item[2.5,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_3 %v_8[5.1,] 
		 3: RETURN %v_8[5.1,] %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_3 item[2.5,] 
		 2: RETURN item[2.5,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tag_cast_to_string instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_obj 
		 6: 
		 7: %self->tag_array_from_obj def_%v_3 %self[2.0,] obj[2.5,] 	 SYMBOL:	 ARGS:obj,
		 8: %v_3->flatten def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_4->compact def_%v_5 %v_4[2.8,] 	 SYMBOL:	 ARGS:
		 10: %v_5->map def_%v_6 %v_5[2.9,] 	 SYMBOL:downcase,	 ARGS:
		 11: %v_6->uniq def_%v_7 %v_6[2.10,] 	 SYMBOL:	 ARGS:
		 12: RETURN %v_7[2.11,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tag_array_from_obj instanceMethod = true
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_obj 
		 6: 
		 7: (Array) def_%v_5 
		 8: def_%v_4 %v_5[2.7,] obj[2.5,] 
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: (String) def_%v_7 
		 1: def_%v_6 %v_7[3.0,] obj[2.5,] 
		 2: BRANCH %v_6[3.1,] 
BB 4
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "Invalid object of class " def_%v_13 
		 2: obj->class def_%v_14 obj[2.5,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_StringLiteral " as tagging method parameter" def_%v_15 
		 4: BUILDSTRING def_%v_16 %v_13[4.1,] %v_14[4.2,] %v_15[4.3,] 
		 5: %self->raise def_%v_17 %self[2.0,] %v_16[4.4,] 	 SYMBOL:	 ARGS:%v_16,
		 6: COPY TYPE_PASS def_%v_3 %v_17[4.5,] 
		 7: RETURN %v_17[4.5,] %self[4.5,2.0,] 
BB 5
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: obj->map! def_%v_8 obj[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:obj,
CLOSURE BEGIN: %self[2.0,] item[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_item 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->get_tag_name_from_item def_%cl_1_3 %self[2.0,] item[2.2,] 	 SYMBOL:	 ARGS:item,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: COPY TYPE_PASS def_%v_3 %v_8[5.1,] 
		 3: RETURN %v_8[5.1,] %self[2.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: (Tag) def_%v_9 
		 2: (inherit DELIMITER) def_%v_10 %v_9[6.1,] 
		 3: %v_10[6.2,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: %v_9->const_missing def_%v_10 %v_9[6.1,] 	 SYMBOL:DELIMITER,	 ARGS:Symbol,
BB 8
	outgoing: 11 
	datadep: 
	instructions:
		 0: obj->split def_%v_11 obj[2.5,] %v_10[7.0,6.2,] 	 SYMBOL:	 ARGS:%v_10,
		 1: %v_11->map def_%v_12 %v_11[8.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_11,
CLOSURE BEGIN: tag_name[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_tag_name 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: tag_name->strip def_%cl_2_3 tag_name[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral " " def_%cl_2_4 
		 3: %cl_2_3->squeeze def_%cl_2_5 %cl_2_3[3.1,] %cl_2_4[3.2,] 	 SYMBOL:	 ARGS:%cl_2_4,
		 4: RETURN %cl_2_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_6 
		 1: def_%cl_2_7 %cl_2_6[4.0,] 
		 2: RETURN %cl_2_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: COPY TYPE_PASS def_%v_3 %v_12[8.1,] 
		 3: RETURN %v_12[8.1,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_klass 
		 6: 
		 7: klass->class_eval def_%v_3 klass[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:klass,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: HASH-as- def_%cl_1_3 
		 2: %self->has_many def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] 	 SYMBOL:taggings,	 ARGS:Symbol,%cl_1_3,
		 3: 
		 4: HASH-through- def_%cl_1_5 
		 5: %self->has_many def_%cl_1_6 %self[3.2,2.0,] %cl_1_5[3.4,] %self[3.2,2.0,] 	 SYMBOL:tags,	 ARGS:Symbol,%cl_1_5,%self,
CLOSURE BEGIN: 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: RETURN %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_3 
		 1: def_%cl_2_4 %cl_2_3[4.0,] 
		 2: RETURN %cl_2_4[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 6: 
		 7: 
		 8: 
		 9: 
		 10: 
		 11: 
		 12: 
		 13: 
		 14: 
		 15: 
		 16: 
		 17: 
		 18: 
		 19: 
		 20: 
		 21: 
		 22: 
		 23: 
		 24: RETURN %self[3.2,3.5,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_3[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

