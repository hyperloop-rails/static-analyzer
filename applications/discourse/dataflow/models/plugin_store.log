SET IRMethod, name = get instanceMethod = false
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_plugin_name 
		 6: RECEIVEARG def_key 
		 7: 
		 8: (PluginStoreRow) def_%v_3 
		 9: HASH-plugin_name-key- def_%v_4 plugin_name[2.5,] key[2.6,] 
		 10: %v_3->find_by def_%v_5 %v_3[2.8,] %v_4[2.9,] 	 SYMBOL:	 ARGS:%v_4,
		 11: COPY TYPE_PASS def_row %v_5[2.10,] 
		 12: BRANCH %v_5[2.10,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: row->type_name def_%v_6 row[2.11,] 	 SYMBOL:	 ARGS:
		 2: row->value def_%v_7 row[3.1,2.11,] 	 SYMBOL:	 ARGS:
		 3: %self->cast_value def_%v_8 %self[2.0,] %v_6[3.1,] %v_7[3.2,] 	 SYMBOL:	 ARGS:%v_6,%v_7,
		 4: RETURN %v_8[3.3,] %self[3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set instanceMethod = false
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_plugin_name 
		 6: RECEIVEARG def_key 
		 7: RECEIVEARG def_value 
		 8: 
		 9: HASH-plugin_name-key- def_%v_3 plugin_name[2.5,] key[2.6,] 
		 10: COPY TYPE_PASS def_hash %v_3[2.9,] 
		 11: 
		 12: (PluginStoreRow) def_%v_4 
		 13: %v_4->find_by def_%v_5 %v_4[2.12,] %v_3[2.9,] 	 SYMBOL:	 ARGS:hash,
		 14: BRANCH %v_5[2.13,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: (PluginStoreRow) def_%v_6 
		 1: %v_6->new def_%v_7 %v_6[3.0,] hash[2.10,] 	 SYMBOL:	 ARGS:hash,
		 2: COPY TYPE_PASS def_%v_5 %v_7[3.1,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_row %v_5[3.2,2.13,] 
		 1: 
		 2: %self->determine_type def_%v_8 %self[2.0,] value[2.7,] 	 SYMBOL:	 ARGS:value,
		 3: ATTRASSIGN row->type_name %v_8[4.2,] 
		 4: 
		 5: 
		 6: row->type_name def_%v_9 row[4.0,4.3,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "JSON" def_%v_10 
		 8: %v_9->== def_%v_11 %v_9[4.6,] %v_10[4.7,] 	 SYMBOL:	 ARGS:%v_10,
		 9: BRANCH %v_11[4.8,] 
BB 5
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: value->to_json def_%v_12 value[2.7,] 	 SYMBOL:	 ARGS:
		 2: 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: BRANCH value[2.7,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: value->to_s def_%v_13 value[2.7,] 	 SYMBOL:	 ARGS:
		 2: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_13 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_12 %v_13[8.0,7.1,] 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: ATTRASSIGN row->value %v_12[9.0,5.1,] 
		 1: 
		 2: row->save def_%v_14 row[10.0,4.0,4.3,] 	 SYMBOL:	 ARGS:
		 3: RETURN %v_14[10.2,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = remove instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_plugin_name 
		 6: RECEIVEARG def_key 
		 7: 
		 8: (PluginStoreRow) def_%v_3 
		 9: HASH-plugin_name-key- def_%v_4 plugin_name[2.5,] key[2.6,] 
		 10: %v_3->where def_%v_5 %v_3[2.8,] %v_4[2.9,] 	 SYMBOL:	 ARGS:%v_4,
		 11: %v_5->destroy_all def_%v_6 %v_5[2.10,] 	 SYMBOL:	 ARGS:
		 12: RETURN %v_6[2.11,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = determine_type instanceMethod = false
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_value 
		 6: 
		 7: (Hash) def_%v_3 
		 8: value->is_a? def_%v_4 value[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: (Array) def_%v_5 
		 1: value->is_a? def_%v_6 value[2.5,] %v_5[3.0,] 	 SYMBOL:	 ARGS:%v_5,
		 2: COPY TYPE_PASS def_%v_4 %v_6[3.1,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_4[3.2,2.8,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "JSON" def_%v_7 
		 1: RETURN %v_7[5.0,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: value->class def_%v_8 value[2.5,] 	 SYMBOL:	 ARGS:
		 1: %v_8->to_s def_%v_9 %v_8[6.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_9[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = map_json instanceMethod = false
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_item 
		 6: 
		 7: (Hash) def_%v_3 
		 8: item->is_a? def_%v_4 item[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: 
		 1: (ActiveSupport) def_%v_5 
		 2: (inherit HashWithIndifferentAccess) def_%v_6 %v_5[3.1,] 
		 3: %v_6[3.2,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_5->const_missing def_%v_6 %v_5[3.1,] 	 SYMBOL:HashWithIndifferentAccess,	 ARGS:Symbol,
BB 5
	outgoing: 11 
	datadep: 
	instructions:
		 0: %v_6->new def_%v_7 %v_6[4.0,3.2,] item[2.5,] 	 SYMBOL:	 ARGS:item,
		 1: RETURN %v_7[5.0,] %self[2.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: (Array) def_%v_8 
		 2: item->is_a? def_%v_9 item[2.5,] %v_8[6.1,] 	 SYMBOL:	 ARGS:%v_8,
		 3: BRANCH %v_9[6.2,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: item->map def_%v_10 item[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:item,
CLOSURE BEGIN: %self[2.0,] subitem[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_subitem 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->map_json def_%cl_1_3 %self[2.0,] subitem[2.2,] 	 SYMBOL:	 ARGS:subitem,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_10 item[2.5,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %v_10[8.1,7.1,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = cast_value instanceMethod = false
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_type 
		 6: RECEIVEARG def_value 
		 7: 
		 8: COPY TYPE_StringLiteral "Fixnum" def_%v_5 
		 9: def_%v_4 %v_5[2.8,] type[2.5,] 
		 10: BRANCH %v_4[2.9,] 
BB 3
	outgoing: 4 8 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "TrueClass" def_%v_7 
		 1: def_%v_6 %v_7[3.0,] type[2.5,] 
		 2: BRANCH %v_6[3.1,] 
BB 4
	outgoing: 5 9 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "FalseClass" def_%v_9 
		 1: def_%v_8 %v_9[4.0,] type[2.5,] 
		 2: BRANCH %v_8[4.1,] 
BB 5
	outgoing: 6 10 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "JSON" def_%v_11 
		 1: def_%v_10 %v_11[5.0,] type[2.5,] 
		 2: BRANCH %v_10[5.1,] 
BB 6
	outgoing: 15 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_3 value[2.6,] 
		 2: RETURN value[2.6,] %self[2.0,] 
BB 7
	outgoing: 15 
	datadep: 
	instructions:
		 0: 
		 1: value->to_i def_%v_12 value[2.6,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_3 %v_12[7.1,] 
		 3: RETURN %v_12[7.1,] %self[2.0,] 
BB 8
	outgoing: 15 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "true" def_%v_13 
		 2: value->== def_%v_14 value[2.6,] %v_13[8.1,] 	 SYMBOL:	 ARGS:%v_13,
		 3: COPY TYPE_PASS def_%v_3 %v_14[8.2,] 
		 4: RETURN %v_14[8.2,] %self[2.0,] 
BB 9
	outgoing: 15 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "true" def_%v_15 
		 1: value->== def_%v_16 value[2.6,] %v_15[9.0,] 	 SYMBOL:	 ARGS:%v_15,
		 2: COPY TYPE_PASS def_%v_3 %v_16[9.1,] 
		 3: RETURN %v_16[9.1,] %self[2.0,] 
BB 10
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: 
		 1: (inherit JSON) def_%v_17 
		 2: %v_17[10.1,] 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: CONSTANT def_%v_17 	 SYMBOL:JSON,	 ARGS:Symbol,
BB 12
	outgoing: 15 
	datadep: 
	instructions:
		 0: %v_17->parse def_%v_18 %v_17[11.0,10.1,] value[2.6,] 	 SYMBOL:	 ARGS:value,
		 1: %self->map_json def_%v_19 %self[2.0,] %v_18[12.0,] 	 SYMBOL:	 ARGS:%v_18,
		 2: COPY TYPE_PASS def_%v_3 %v_19[12.1,] 
		 3: RETURN %v_19[12.1,] %self[12.1,2.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:

