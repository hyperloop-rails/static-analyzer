SET IRMethod, name = record_for_host instanceMethod = false
BB 1
	outgoing: 18 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_host 
		 6: 
		 7: GLOBALVAR $! def_%v_3 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->URI def_%v_6 %self[2.0,] host[2.5,] 	 SYMBOL:	 ARGS:host,
		 2: COPY TYPE_PASS def_%v_5 %v_6[4.1,] 
		 3: 
		 4: %v_3[2.7,] 
BB 5
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
BB 6
	outgoing: 7 8 10 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_7 
		 2: def_%v_8 %v_7[6.1,] 
		 3: BRANCH %v_8[6.2,] 
BB 7
	outgoing: 10 18 
	datadep: 
	instructions:
		 0: %v_7[6.1,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: %v_3[2.7,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
BB 10
	outgoing: 18 
	datadep: 
	instructions:
		 0: def_%v_9 
		 1: def_%v_10 %v_9[10.0,] %v_3[2.7,] 
		 2: %v_9[10.0,] 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_uri %v_5[4.2,8.0,] 
		 1: 
		 2: %v_5->present? def_%v_11 %v_5[4.2,8.0,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_11[11.2,] 
BB 12
	outgoing: 15 16 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_12 
		 1: 
		 2: uri->host def_%v_13 uri[11.0,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_PASS def_host %v_13[12.2,] 
		 4: 
		 5: %v_13->present? def_%v_14 %v_13[12.2,] 	 SYMBOL:	 ARGS:
		 6: BRANCH %v_14[12.5,] 
BB 13
	outgoing: 18 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 15
	outgoing: 18 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_15 
		 1: 
		 2: COPY TYPE_StringLiteral "lower(host) = ?" def_%v_16 
		 3: %self->where def_%v_17 %self[2.0,] %v_16[15.2,] host[12.3,] 	 SYMBOL:	 ARGS:%v_16,host,
		 4: %v_17->first def_%v_18 %v_17[15.3,] 	 SYMBOL:	 ARGS:
		 5: RETURN %v_18[15.4,] %self[15.3,2.0,] 
BB 16
	outgoing: 18 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 18
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = host_allowed? instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_host 
		 6: 
		 7: %self->record_for_host def_%v_3 %self[2.0,] host[2.5,] 	 SYMBOL:	 ARGS:host,
		 8: %v_3->present? def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: RETURN %v_4[2.8,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = host_must_be_valid instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->host def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_Regexp def_%v_4 
		 8: %v_3->!~ def_%v_5 %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_4,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->host def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_Regexp def_%v_7 
		 2: %v_6->!~ def_%v_8 %v_6[3.0,] 	 SYMBOL:	 ARGS:%v_7,
		 3: COPY TYPE_PASS def_%v_5 %v_8[3.2,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_5[3.3,2.8,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->errors def_%v_9 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: (I18n) def_%v_10 
		 3: COPY TYPE_StringLiteral "errors.messages.invalid" def_%v_11 
		 4: %v_10->t def_%v_12 %v_10[5.2,] %v_11[5.3,] 	 SYMBOL:	 ARGS:%v_11,
		 5: %v_9->add def_%v_13 %v_9[5.1,] %v_12[5.4,] 	 SYMBOL:host,	 ARGS:Symbol,%v_12,
		 6: RETURN %v_13[5.5,] %self[5.1,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

