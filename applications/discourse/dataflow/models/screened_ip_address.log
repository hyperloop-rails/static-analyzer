SET IRMethod, name = watch instanceMethod = false
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_ip_address 
		 6: RECEIVECONSTARG def_opts 
		 7: opts[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_opts %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->match_for_ip_address def_%v_4 %self[2.0,] ip_address[2.5,] 	 SYMBOL:	 ARGS:ip_address,
		 2: BRANCH %v_4[4.1,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: opts->slice def_%v_5 opts[3.1,2.6,] 	 SYMBOL:action_type,	 ARGS:Symbol,
		 1: HASH-ip_address- def_%v_6 ip_address[2.5,] 
		 2: %v_5->merge def_%v_7 %v_5[5.0,] %v_6[5.1,] 	 SYMBOL:	 ARGS:%v_6,
		 3: %self->create def_%v_8 %self[2.0,] %v_7[5.2,] 	 SYMBOL:	 ARGS:%v_7,
		 4: RETURN %v_8[5.3,] %self[5.3,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_4[4.1,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ip_address= instanceMethod = true
BB 1
	outgoing: 26 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_val 
		 6: GLOBALVAR $! def_%v_3 
BB 4
	outgoing: 5 7 18 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: val->nil? def_%v_6 val[2.5,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_6[4.2,] 
BB 5
	outgoing: 6 18 
	datadep: 
	instructions:
		 0: 
		 1: %self->errors def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_7->add def_%v_8 %v_7[5.1,] 	 SYMBOL:ip_address,invalid,	 ARGS:Symbol,Symbol,
		 3: 
		 4: COPY TYPE_Nil def_%v_9 
		 5: %v_3[2.6,] 
BB 6
	outgoing: 26 
	datadep: 
	instructions:
		 0: RETURN %v_9[5.4,] %self[2.0,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_10 
BB 8
	outgoing: 9 11 18 
	datadep: 
	instructions:
		 0: 
		 1: (IPAddr) def_%v_11 
		 2: val->is_a? def_%v_12 val[2.5,] %v_11[8.1,] 	 SYMBOL:	 ARGS:%v_11,
		 3: BRANCH %v_12[8.2,] 
BB 9
	outgoing: 10 18 
	datadep: 
	instructions:
		 0: 
		 1: %self->write_attribute def_%v_13 %self[2.0,] val[2.5,] 	 SYMBOL:ip_address,	 ARGS:Symbol,val,
		 2: 
		 3: COPY TYPE_Nil def_%v_14 
		 4: %v_3[2.6,] 
BB 10
	outgoing: 26 
	datadep: 
	instructions:
		 0: RETURN %v_14[9.3,] %self[2.0,] 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_15 
BB 12
	outgoing: 13 15 18 
	datadep: 
	instructions:
		 0: 
		 1: (IPAddr) def_%v_16 
		 2: %v_16->handle_wildcards def_%v_17 %v_16[12.1,] val[2.5,] 	 SYMBOL:	 ARGS:val,
		 3: COPY TYPE_PASS def_v %v_17[12.2,] 
		 4: 
		 5: %v_17->nil? def_%v_18 %v_17[12.2,] 	 SYMBOL:	 ARGS:
		 6: BRANCH %v_18[12.5,] 
BB 13
	outgoing: 14 18 
	datadep: 
	instructions:
		 0: 
		 1: %self->errors def_%v_19 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_19->add def_%v_20 %v_19[13.1,] 	 SYMBOL:ip_address,invalid,	 ARGS:Symbol,Symbol,
		 3: 
		 4: COPY TYPE_Nil def_%v_21 
		 5: %v_3[2.6,] 
BB 14
	outgoing: 26 
	datadep: 
	instructions:
		 0: RETURN %v_21[13.4,] %self[2.0,] 
BB 15
	outgoing: 16 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_22 
BB 16
	outgoing: 17 18 
	datadep: 
	instructions:
		 0: 
		 1: %self->write_attribute def_%v_23 %self[2.0,] v[12.3,] 	 SYMBOL:ip_address,	 ARGS:Symbol,v,
		 2: COPY TYPE_PASS def_%v_5 %v_23[16.1,] 
		 3: %v_3[2.6,] 
BB 17
	outgoing: 25 
	datadep: 
	instructions:
		 0: 
BB 18
	outgoing: 19 20 24 
	datadep: 
	instructions:
		 0: def_%v_24 
		 1: (ArgumentError) def_%v_25 
		 2: (IPAddr) def_%v_26 
		 3: (inherit InvalidAddressError) def_%v_27 %v_26[18.2,] 
		 4: %v_27[18.3,] 
BB 19
	outgoing: 20 24 
	datadep: 
	instructions:
		 0: %v_26->const_missing def_%v_27 %v_26[18.2,] 	 SYMBOL:InvalidAddressError,	 ARGS:Symbol,
BB 20
	outgoing: 21 22 24 
	datadep: 
	instructions:
		 0: def_%v_28 %v_25[18.1,] %v_27[19.0,18.3,] %v_24[18.0,] 
		 1: BRANCH %v_28[20.0,] 
BB 21
	outgoing: 24 26 
	datadep: 
	instructions:
		 0: %v_24[18.0,] 
BB 22
	outgoing: 23 24 
	datadep: 
	instructions:
		 0: 
		 1: %self->errors def_%v_29 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_29->add def_%v_30 %v_29[22.1,] 	 SYMBOL:ip_address,invalid,	 ARGS:Symbol,Symbol,
		 3: COPY TYPE_PASS def_%v_5 %v_30[22.2,] 
		 4: %v_3[2.6,] 
BB 23
	outgoing: 25 
	datadep: 
	instructions:
		 0: 
BB 24
	outgoing: 26 
	datadep: 
	instructions:
		 0: def_%v_31 
		 1: def_%v_32 %v_31[24.0,] %v_3[2.6,] 
		 2: %v_31[24.0,] 
BB 25
	outgoing: 26 
	datadep: 
	instructions:
		 0: RETURN %v_5[16.2,22.3,] %self[2.0,] 
BB 26
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ip_address_with_mask instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->ip_address def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->try def_%v_4 %v_3[2.6,] 	 SYMBOL:to_cidr_s,	 ARGS:Symbol,
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = match_for_ip_address instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_ip_address 
		 6: 
		 7: COPY TYPE_StringLiteral "'" def_%v_3 
		 8: ip_address->to_s def_%v_4 ip_address[2.5,] 	 SYMBOL:	 ARGS:
		 9: COPY TYPE_StringLiteral "' <<= ip_address" def_%v_5 
		 10: BUILDSTRING def_%v_6 %v_3[2.7,] %v_4[2.8,] %v_5[2.9,] 
		 11: %self->find_by def_%v_7 %self[2.0,] %v_6[2.10,] 	 SYMBOL:	 ARGS:%v_6,
		 12: RETURN %v_7[2.11,] %self[2.0,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = should_block? instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_ip_address 
		 6: 
		 7: %self->actions def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->[] def_%v_4 %v_3[2.7,] 	 SYMBOL:block,	 ARGS:Symbol,
		 9: %self->exists_for_ip_address_and_action? def_%v_5 %self[2.0,2.7,] ip_address[2.5,] %v_4[2.8,] 	 SYMBOL:	 ARGS:ip_address,%v_4,
		 10: RETURN %v_5[2.9,] %self[2.0,2.7,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = is_whitelisted? instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_ip_address 
		 6: 
		 7: %self->actions def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->[] def_%v_4 %v_3[2.7,] 	 SYMBOL:do_nothing,	 ARGS:Symbol,
		 9: %self->exists_for_ip_address_and_action? def_%v_5 %self[2.0,2.7,] ip_address[2.5,] %v_4[2.8,] 	 SYMBOL:	 ARGS:ip_address,%v_4,
		 10: RETURN %v_5[2.9,] %self[2.0,2.7,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = exists_for_ip_address_and_action? instanceMethod = false
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_ip_address 
		 6: RECEIVEARG def_action_type 
		 7: RECEIVECONSTARG def_opts 
		 8: opts[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_opts %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->match_for_ip_address def_%v_4 %self[2.0,] ip_address[2.5,] 	 SYMBOL:	 ARGS:ip_address,
		 2: COPY TYPE_PASS def_b %v_4[4.1,] 
		 3: 
		 4: %v_4->! def_%v_5 %v_4[4.1,] 	 SYMBOL:	 ARGS:
		 5: %v_5->! def_%v_6 %v_5[4.4,] 	 SYMBOL:	 ARGS:
		 6: BRANCH %v_6[4.5,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: b->action_type def_%v_7 b[4.2,] 	 SYMBOL:	 ARGS:
		 1: %v_7->== def_%v_8 %v_7[5.0,] action_type[2.6,] 	 SYMBOL:	 ARGS:action_type,
		 2: COPY TYPE_PASS def_%v_6 %v_8[5.1,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_found %v_6[5.2,4.5,] 
		 1: 
		 2: COPY TYPE_PASS def_%v_9 %v_6[5.2,4.5,] 
		 3: BRANCH %v_6[5.2,4.5,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: opts->[] def_%v_10 opts[3.1,2.7,] 	 SYMBOL:record_match,	 ARGS:Symbol,
		 1: %v_10->!= def_%v_11 %v_10[7.0,] 	 SYMBOL:	 ARGS:Boolean,
		 2: COPY TYPE_PASS def_%v_9 %v_11[7.1,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: BRANCH %v_9[7.2,6.2,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: b->record_match! def_%v_12 b[4.2,] 	 SYMBOL:	 ARGS:
		 1: 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_12 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: RETURN found[6.0,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = block_admin_login? instanceMethod = false
BB 1
	outgoing: 18 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: RECEIVEARG def_ip_address 
		 7: 
		 8: (SiteSetting) def_%v_3 
		 9: %v_3->use_admin_ip_whitelist def_%v_4 %v_3[2.8,] 	 SYMBOL:	 ARGS:
		 10: BRANCH %v_4[2.9,] 
BB 3
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: user->nil? def_%v_6 user[2.5,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_6[3.2,] 
BB 4
	outgoing: 18 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 18 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 7
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_7 
		 1: 
		 2: user->admin? def_%v_8 user[2.5,] 	 SYMBOL:	 ARGS:
		 3: %v_8->! def_%v_9 %v_8[7.2,] 	 SYMBOL:	 ARGS:
		 4: BRANCH %v_9[7.3,] 
BB 9
	outgoing: 18 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 10
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_10 
		 1: 
		 2: (ScreenedIpAddress) def_%v_11 
		 3: %self->actions def_%v_12 %self[2.0,] 	 SYMBOL:	 ARGS:
		 4: %v_12->[] def_%v_13 %v_12[10.3,] 	 SYMBOL:allow_admin,	 ARGS:Symbol,
		 5: HASH-action_type- def_%v_14 %v_13[10.4,] 
		 6: %v_11->where def_%v_15 %v_11[10.2,] %v_14[10.5,] 	 SYMBOL:	 ARGS:%v_14,
		 7: %v_15->count def_%v_16 %v_15[10.6,] 	 SYMBOL:	 ARGS:
		 8: %v_16->== def_%v_17 %v_16[10.7,] 	 SYMBOL:	 ARGS:Fixnum,
		 9: BRANCH %v_17[10.8,] 
BB 12
	outgoing: 18 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 13
	outgoing: 15 16 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_18 
		 1: 
		 2: ip_address->nil? def_%v_19 ip_address[2.6,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_19[13.2,] 
BB 15
	outgoing: 18 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 16
	outgoing: 18 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_20 
		 1: 
		 2: %self->actions def_%v_21 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %v_21->[] def_%v_22 %v_21[16.2,] 	 SYMBOL:allow_admin,	 ARGS:Symbol,
		 4: HASH-record_match- def_%v_23 
		 5: %self->exists_for_ip_address_and_action? def_%v_24 %self[16.2,2.0,] ip_address[2.6,] %v_22[16.3,] %v_23[16.4,] 	 SYMBOL:	 ARGS:ip_address,%v_22,%v_23,
		 6: %v_24->! def_%v_25 %v_24[16.5,] 	 SYMBOL:	 ARGS:
		 7: RETURN %v_25[16.6,] %self[16.2,16.5,2.0,] 
BB 18
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = star_subnets_query instanceMethod = false
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->star_subnets_query def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "      SELECT network(inet(host(ip_address) || '/24')) AS ip_range
        FROM screened_ip_addresses
       WHERE action_type = " def_%v_6 
		 1: 
		 2: (ScreenedIpAddress) def_%v_7 
		 3: %v_7->actions def_%v_8 %v_7[5.2,] 	 SYMBOL:	 ARGS:
		 4: %v_8->[] def_%v_9 %v_8[5.3,] 	 SYMBOL:block,	 ARGS:Symbol,
		 5: COPY TYPE_StringLiteral "
         AND family(ip_address) = 4
         AND masklen(ip_address) = 32
    GROUP BY ip_range
      HAVING COUNT(*) >= :min_count
" def_%v_10 
		 6: BUILDSTRING def_%v_11 %v_6[5.0,] %v_9[5.4,] %v_10[5.5,] 
		 7: ATTRASSIGN %self->star_subnets_query %v_11[5.6,] 
		 8: RETURN %v_11[5.6,] %self[5.7,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = star_star_subnets_query instanceMethod = false
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->star_star_subnets_query def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "      WITH weighted_subnets AS (
        SELECT network(inet(host(ip_address) || '/16')) AS ip_range,
               CASE masklen(ip_address)
                 WHEN 32 THEN 1
                 WHEN 24 THEN :roll_up_weight
                 ELSE 0
               END AS weight
          FROM screened_ip_addresses
         WHERE action_type = " def_%v_6 
		 1: 
		 2: (ScreenedIpAddress) def_%v_7 
		 3: %v_7->actions def_%v_8 %v_7[5.2,] 	 SYMBOL:	 ARGS:
		 4: %v_8->[] def_%v_9 %v_8[5.3,] 	 SYMBOL:block,	 ARGS:Symbol,
		 5: COPY TYPE_StringLiteral "
           AND family(ip_address) = 4
      )
      SELECT ip_range
        FROM weighted_subnets
    GROUP BY ip_range
      HAVING SUM(weight) >= :min_count
" def_%v_10 
		 6: BUILDSTRING def_%v_11 %v_6[5.0,] %v_9[5.4,] %v_10[5.5,] 
		 7: ATTRASSIGN %self->star_star_subnets_query %v_11[5.6,] 
		 8: RETURN %v_11[5.6,] %self[5.7,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = star_subnets instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (SiteSetting) def_%v_3 
		 7: %v_3->min_ban_entries_for_roll_up def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_PASS def_min_count %v_4[2.7,] 
		 9: 
		 10: (ScreenedIpAddress) def_%v_5 
		 11: %self->star_subnets_query def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 12: HASH-min_count- def_%v_7 min_count[2.8,] 
		 13: %v_5->exec_sql def_%v_8 %v_5[2.10,] %v_6[2.11,] %v_7[2.12,] 	 SYMBOL:	 ARGS:%v_6,%v_7,
		 14: %v_8->values def_%v_9 %v_8[2.13,] 	 SYMBOL:	 ARGS:
		 15: %v_9->flatten def_%v_10 %v_9[2.14,] 	 SYMBOL:	 ARGS:
		 16: RETURN %v_10[2.15,] %self[2.0,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = star_star_subnets instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (SiteSetting) def_%v_3 
		 7: %v_3->min_ban_entries_for_roll_up def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_PASS def_weight %v_4[2.7,] 
		 9: 
		 10: (ScreenedIpAddress) def_%v_5 
		 11: %self->star_star_subnets_query def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 12: HASH-min_count-roll_up_weight- def_%v_7 weight[2.8,] 
		 13: %v_5->exec_sql def_%v_8 %v_5[2.10,] %v_6[2.11,] %v_7[2.12,] 	 SYMBOL:	 ARGS:%v_6,%v_7,
		 14: %v_8->values def_%v_9 %v_8[2.13,] 	 SYMBOL:	 ARGS:
		 15: %v_9->flatten def_%v_10 %v_9[2.14,] 	 SYMBOL:	 ARGS:
		 16: RETURN %v_10[2.15,] %self[2.0,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = roll_up instanceMethod = false
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_current_user 
		 6: current_user[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: (Discourse) def_%v_3 
		 1: %v_3->system_user def_%v_4 %v_3[3.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_current_user %v_4[3.1,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->star_subnets def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %self->star_star_subnets def_%v_6 %self[4.1,2.0,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_Array def_%v_7 %v_5[4.1,] %v_6[4.2,] 
		 4: %v_7->flatten def_%v_8 %v_7[4.3,] 	 SYMBOL:	 ARGS:
		 5: COPY TYPE_PASS def_subnets %v_8[4.4,] 
		 6: 
		 7: %v_8->blank? def_%v_9 %v_8[4.4,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_9[4.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_10 
		 1: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: (StaffActionLogger) def_%v_11 
		 1: %v_11->new def_%v_12 %v_11[6.0,] current_user[3.2,2.5,] 	 SYMBOL:	 ARGS:current_user,
		 2: %v_12->log_roll_up def_%v_13 %v_12[6.1,] subnets[4.5,] 	 SYMBOL:	 ARGS:subnets,
		 3: COPY TYPE_PASS def_%v_10 %v_13[6.2,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: subnets->each def_%v_14 subnets[4.5,] %self[2.0,] 	 SYMBOL:	 ARGS:subnets,
CLOSURE BEGIN: subnet[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_subnet 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: (ScreenedIpAddress) def_%cl_1_3 
		 2: HASH-ip_address- def_%cl_1_4 subnet[2.2,] 
		 3: %cl_1_3->where def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: %cl_1_5->exists? def_%cl_1_6 %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:
		 5: BRANCH %cl_1_6[3.4,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_7 
		 1: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: (ScreenedIpAddress) def_%cl_1_8 
		 1: HASH-ip_address- def_%cl_1_9 subnet[2.2,] 
		 2: %cl_1_8->new def_%cl_1_10 %cl_1_8[5.0,] %cl_1_9[5.1,] 	 SYMBOL:	 ARGS:%cl_1_9,
		 3: %cl_1_10->save def_%cl_1_11 %cl_1_10[5.2,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_PASS def_%cl_1_7 %cl_1_11[5.3,] 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "        UPDATE screened_ip_addresses
           SET match_count   = sum_match_count,
               created_at    = min_created_at,
               last_match_at = max_last_match_at
          FROM (
            SELECT SUM(match_count)   AS sum_match_count,
                   MIN(created_at)    AS min_created_at,
                   MAX(last_match_at) AS max_last_match_at
              FROM screened_ip_addresses
             WHERE action_type = " def_%cl_1_12 
		 2: 
		 3: (ScreenedIpAddress) def_%cl_1_13 
		 4: %cl_1_13->actions def_%cl_1_14 %cl_1_13[6.3,] 	 SYMBOL:	 ARGS:
		 5: %cl_1_14->[] def_%cl_1_15 %cl_1_14[6.4,] 	 SYMBOL:block,	 ARGS:Symbol,
		 6: COPY TYPE_StringLiteral "
               AND family(ip_address) = 4
               AND ip_address << :ip_address
          ) s
         WHERE ip_address = :ip_address
" def_%cl_1_16 
		 7: BUILDSTRING def_%cl_1_17 %cl_1_12[6.1,] %cl_1_15[6.5,] %cl_1_16[6.6,] 
		 8: COPY TYPE_PASS def_sql %cl_1_17[6.7,] 
		 9: 
		 10: (ScreenedIpAddress) def_%cl_1_18 
		 11: HASH-ip_address- def_%cl_1_19 subnet[2.2,] 
		 12: %cl_1_18->exec_sql def_%cl_1_20 %cl_1_18[6.10,] %cl_1_17[6.7,] %cl_1_19[6.11,] 	 SYMBOL:	 ARGS:sql,%cl_1_19,
		 13: 
		 14: (ScreenedIpAddress) def_%cl_1_21 
		 15: (ScreenedIpAddress) def_%cl_1_22 
		 16: %cl_1_22->actions def_%cl_1_23 %cl_1_22[6.15,] 	 SYMBOL:	 ARGS:
		 17: %cl_1_23->[] def_%cl_1_24 %cl_1_23[6.16,] 	 SYMBOL:block,	 ARGS:Symbol,
		 18: HASH-action_type- def_%cl_1_25 %cl_1_24[6.17,] 
		 19: %cl_1_21->where def_%cl_1_26 %cl_1_21[6.14,] %cl_1_25[6.18,] 	 SYMBOL:	 ARGS:%cl_1_25,
		 20: COPY TYPE_StringLiteral "family(ip_address) = 4" def_%cl_1_27 
		 21: %cl_1_26->where def_%cl_1_28 %cl_1_26[6.19,] %cl_1_27[6.20,] 	 SYMBOL:	 ARGS:%cl_1_27,
		 22: COPY TYPE_StringLiteral "ip_address << ?" def_%cl_1_29 
		 23: %cl_1_28->where def_%cl_1_30 %cl_1_28[6.21,] %cl_1_29[6.22,] subnet[2.2,] 	 SYMBOL:	 ARGS:%cl_1_29,subnet,
		 24: %cl_1_30->delete_all def_%cl_1_31 %cl_1_30[6.23,] 	 SYMBOL:	 ARGS:
		 25: RETURN %cl_1_31[6.24,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_32 
		 1: def_%cl_1_33 %cl_1_32[7.0,] 
		 2: RETURN %cl_1_33[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: sql[6.8,] 
		 2: 
		 3: RETURN subnets[7.1,4.5,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

