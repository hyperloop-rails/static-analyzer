SET IRMethod, name = valid_value? instanceMethod = false
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_val 
		 6: 
		 7: val->to_i def_%v_3 val[2.5,] 	 SYMBOL:	 ARGS:
		 8: %v_3->to_s def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: val->to_s def_%v_5 val[2.5,2.7,] 	 SYMBOL:	 ARGS:
		 10: %v_4->== def_%v_6 %v_4[2.8,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_5,
		 11: BRANCH %v_6[2.10,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->values def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_7->any? def_%v_8 %v_7[3.0,] %self[3.0,2.0,] 	 SYMBOL:	 ARGS:%v_7,
CLOSURE BEGIN: v[] val[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_v 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: v->[] def_%cl_1_3 v[2.2,] 	 SYMBOL:value,	 ARGS:Symbol,
		 2: val->to_i def_%cl_1_4 val[] 	 SYMBOL:	 ARGS:
		 3: %cl_1_3->== def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: RETURN %cl_1_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: RETURN %v_8[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_6[2.10,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = values instanceMethod = false
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->values def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "user.new_topic_duration.not_viewed" def_%v_6 
		 1: HASH-name-value- def_%v_7 %v_6[5.0,] 
		 2: COPY TYPE_StringLiteral "user.new_topic_duration.after_1_day" def_%v_8 
		 3: CONSTANT def_%v_9 	 SYMBOL:	 ARGS:Fixnum,
		 4: HASH-name-value- def_%v_10 %v_8[5.2,] %v_9[5.3,] 
		 5: COPY TYPE_StringLiteral "user.new_topic_duration.after_2_days" def_%v_11 
		 6: CONSTANT def_%v_12 	 SYMBOL:	 ARGS:Fixnum,
		 7: %v_12->* def_%v_13 %v_12[5.6,] 	 SYMBOL:	 ARGS:Fixnum,
		 8: HASH-name-value- def_%v_14 %v_11[5.5,] %v_13[5.7,] 
		 9: COPY TYPE_StringLiteral "user.new_topic_duration.after_1_week" def_%v_15 
		 10: CONSTANT def_%v_16 	 SYMBOL:	 ARGS:Fixnum,
		 11: %v_16->* def_%v_17 %v_16[5.10,] 	 SYMBOL:	 ARGS:Fixnum,
		 12: HASH-name-value- def_%v_18 %v_15[5.9,] %v_17[5.11,] 
		 13: COPY TYPE_StringLiteral "user.new_topic_duration.after_2_weeks" def_%v_19 
		 14: CONSTANT def_%v_20 	 SYMBOL:	 ARGS:Fixnum,
		 15: %v_20->* def_%v_21 %v_20[5.14,] 	 SYMBOL:	 ARGS:Fixnum,
		 16: %v_21->* def_%v_22 %v_21[5.15,] 	 SYMBOL:	 ARGS:Fixnum,
		 17: HASH-name-value- def_%v_23 %v_19[5.13,] %v_22[5.16,] 
		 18: COPY TYPE_StringLiteral "user.new_topic_duration.last_here" def_%v_24 
		 19: HASH-name-value- def_%v_25 %v_24[5.18,] 
		 20: COPY TYPE_Array def_%v_26 %v_7[5.1,] %v_10[5.4,] %v_14[5.8,] %v_18[5.12,] %v_23[5.17,] %v_25[5.19,] 
		 21: ATTRASSIGN %self->values %v_26[5.20,] 
		 22: RETURN %v_26[5.20,] %self[5.21,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = translate_names? instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

