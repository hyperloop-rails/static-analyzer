SET IRMethod, name = append_field instanceMethod = false
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_target 
		 6: RECEIVEARG def_key 
		 7: RECEIVEARG def_value 
		 8: RECEIVEARG def_types 
		 9: 
		 10: target->has_key? def_%v_3 target[2.5,] key[2.6,] 	 SYMBOL:	 ARGS:key,
		 11: BRANCH %v_3[2.10,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: 
		 1: target->[] def_%v_4 target[2.5,] key[2.6,] 	 SYMBOL:	 ARGS:key,
		 2: (Array) def_%v_5 
		 3: %v_4->is_a? def_%v_6 %v_4[3.1,] %v_5[3.2,] 	 SYMBOL:	 ARGS:%v_5,
		 4: %v_6->! def_%v_7 %v_6[3.3,] 	 SYMBOL:	 ARGS:
		 5: BRANCH %v_7[3.4,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: target->[] def_%v_8 target[2.5,] key[2.6,] 	 SYMBOL:	 ARGS:key,
		 1: COPY TYPE_Array def_%v_9 %v_8[4.0,] 
		 2: ATTRASSIGN target->[] key[2.6,] %v_9[4.1,] 
		 3: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_9 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: target->[] def_%v_10 target[4.2,2.5,] key[2.6,] 	 SYMBOL:	 ARGS:key,
		 2: %self->cast_custom_field def_%v_11 %self[2.0,] key[2.6,] value[2.7,] types[2.8,] 	 SYMBOL:	 ARGS:key,value,types,
		 3: %v_10-><< def_%v_12 %v_10[6.1,] %v_11[6.2,] 	 SYMBOL:	 ARGS:%v_11,
		 4: RETURN %v_12[6.3,] %self[6.2,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->cast_custom_field def_%v_13 %self[2.0,] key[2.6,] value[2.7,] types[2.8,] 	 SYMBOL:	 ARGS:key,value,types,
		 2: ATTRASSIGN target->[] key[2.6,] %v_13[7.1,] 
		 3: RETURN %v_13[7.1,] %self[7.1,2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_custom_field_type instanceMethod = false
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_types 
		 6: RECEIVEARG def_key 
		 7: 
		 8: BRANCH types[2.5,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_3 
		 1: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: types->keys def_%v_4 types[2.5,] 	 SYMBOL:	 ARGS:
		 2: %v_4->select def_%v_5 %v_4[6.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: k[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_k 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "*" def_%cl_1_3 
		 2: k->end_with? def_%cl_1_4 k[2.2,] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: %v_5->sort_by def_%v_6 %v_5[6.2,] 	 SYMBOL:length,	 ARGS:
		 4: %v_6->reverse def_%v_7 %v_6[6.3,] 	 SYMBOL:	 ARGS:
		 5: COPY TYPE_PASS def_sorted_types %v_7[6.4,] 
		 6: 
		 7: %v_7->each def_%v_8 %v_7[6.4,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_7,
CLOSURE BEGIN: t[] key[2.6,] types[6.1,2.5,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_t 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "" def_%cl_2_3 
		 2: COPY TYPE_StringLiteral "^" def_%cl_2_4 
		 3: def_%cl_2_5 %cl_2_3[3.1,] %cl_2_4[3.2,] t[2.2,] 
		 4: key->=~ def_%cl_2_6 key[] %cl_2_5[3.3,] 	 SYMBOL:	 ARGS:%cl_2_5,
		 5: BRANCH %cl_2_6[3.4,] 
BB 4
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: types->[] def_%cl_2_7 types[] t[2.2,] 	 SYMBOL:	 ARGS:t,
		 1: 
		 2: RETURN %cl_2_7[4.0,] %self[2.0,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_2_9 
		 1: def_%cl_2_10 %cl_2_9[7.0,] 
		 2: RETURN %cl_2_10[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: 
		 9: types->[] def_%v_9 types[6.1,2.5,] key[2.6,] 	 SYMBOL:	 ARGS:key,
		 10: RETURN %v_9[6.9,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%v_10 
		 1: def_%v_11 %v_10[7.0,] 
		 2: RETURN %v_11[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = cast_custom_field instanceMethod = false
BB 1
	outgoing: 16 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_key 
		 6: RECEIVEARG def_value 
		 7: RECEIVEARG def_types 
		 8: 
		 9: %self->get_custom_field_type def_%v_3 %self[2.0,] types[2.7,] key[2.5,] 	 SYMBOL:	 ARGS:types,key,
		 10: COPY TYPE_PASS def_type %v_3[2.9,] 
		 11: BRANCH %v_3[2.9,] 
BB 3
	outgoing: 6 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: def_%v_6 type[2.10,] 
		 3: BRANCH %v_6[3.2,] 
BB 4
	outgoing: 16 
	datadep: 
	instructions:
		 0: RETURN value[2.6,] %self[2.0,] 
BB 6
	outgoing: 7 10 
	datadep: 
	instructions:
		 0: def_%v_7 type[2.10,] 
		 1: BRANCH %v_7[6.0,] 
BB 7
	outgoing: 8 11 
	datadep: 
	instructions:
		 0: def_%v_8 type[2.10,] 
		 1: BRANCH %v_8[7.0,] 
BB 8
	outgoing: 16 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_5 value[2.6,] 
		 2: RETURN value[2.6,] %self[2.0,] 
BB 9
	outgoing: 16 
	datadep: 
	instructions:
		 0: 
		 1: (CUSTOM_FIELD_TRUE) def_%v_9 
		 2: %v_9->include? def_%v_10 %v_9[9.1,] value[2.6,] 	 SYMBOL:	 ARGS:value,
		 3: %v_10->! def_%v_11 %v_10[9.2,] 	 SYMBOL:	 ARGS:
		 4: %v_11->! def_%v_12 %v_11[9.3,] 	 SYMBOL:	 ARGS:
		 5: COPY TYPE_PASS def_%v_5 %v_12[9.4,] 
		 6: RETURN %v_12[9.4,] %self[2.0,] 
BB 10
	outgoing: 16 
	datadep: 
	instructions:
		 0: 
		 1: value->to_i def_%v_13 value[2.6,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_5 %v_13[10.1,] 
		 3: RETURN %v_13[10.1,] %self[2.0,] 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: 
		 1: (inherit JSON) def_%v_14 
		 2: %v_14[11.1,] 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: CONSTANT def_%v_14 	 SYMBOL:JSON,	 ARGS:Symbol,
BB 13
	outgoing: 16 
	datadep: 
	instructions:
		 0: %v_14->parse def_%v_15 %v_14[12.0,11.1,] value[2.6,] 	 SYMBOL:	 ARGS:value,
		 1: COPY TYPE_PASS def_%v_5 %v_15[13.0,] 
		 2: RETURN %v_15[13.0,] %self[2.0,] 
BB 16
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = custom_fields_for_ids instanceMethod = false
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_ids 
		 6: RECEIVEARG def_whitelisted_fields 
		 7: 
		 8: %self->name def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 9: COPY TYPE_StringLiteral "CustomField" def_%v_4 
		 10: BUILDSTRING def_%v_5 %v_3[2.8,] %v_4[2.9,] 
		 11: %v_5->constantize def_%v_6 %v_5[2.10,] 	 SYMBOL:	 ARGS:
		 12: COPY TYPE_PASS def_klass %v_6[2.11,] 
		 13: 
		 14: %self->name def_%v_7 %self[2.0,2.8,] 	 SYMBOL:	 ARGS:
		 15: %v_7->underscore def_%v_8 %v_7[2.14,] 	 SYMBOL:	 ARGS:
		 16: COPY TYPE_StringLiteral "_id" def_%v_9 
		 17: BUILDSTRING def_%v_10 %v_8[2.15,] %v_9[2.16,] 
		 18: %v_10->to_sym def_%v_11 %v_10[2.17,] 	 SYMBOL:	 ARGS:
		 19: COPY TYPE_PASS def_foreign_key %v_11[2.18,] 
		 20: 
		 21: HASH- def_%v_12 
		 22: COPY TYPE_PASS def_result %v_12[2.21,] 
		 23: 
		 24: whitelisted_fields->blank? def_%v_13 whitelisted_fields[2.6,] 	 SYMBOL:	 ARGS:
		 25: BRANCH %v_13[2.24,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN result[2.22,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_14 
		 1: 
		 2: HASH-name- def_%v_15 foreign_key[2.19,] ids[2.5,] whitelisted_fields[2.6,] 
		 3: klass->where def_%v_16 klass[2.12,] %v_15[4.2,] 	 SYMBOL:	 ARGS:%v_15,
		 4: %v_16->pluck def_%v_17 %v_16[4.3,] foreign_key[2.19,] 	 SYMBOL:name,value,	 ARGS:foreign_key,Symbol,Symbol,
		 5: %v_17->each def_%v_18 %v_17[4.4,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_17,
CLOSURE BEGIN: cf[] result[2.22,] %self[2.0,] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_cf 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: cf->[] def_%cl_1_4 cf[2.2,] 	 SYMBOL:	 ARGS:Fixnum,
		 2: result->[] def_%cl_1_3 result[] %cl_1_4[3.1,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 3: BRANCH %cl_1_3[3.2,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: HASH- def_%cl_1_5 
		 1: result->[]= def_%cl_1_3 result[] %cl_1_4[3.1,] %cl_1_5[4.0,] 	 SYMBOL:	 ARGS:%cl_1_4,%cl_1_5,
		 2: COPY TYPE_PASS def_%cl_1_3 %cl_1_5[4.0,] 
BB 5
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: 
		 1: cf->[] def_%cl_1_6 cf[2.2,] 	 SYMBOL:	 ARGS:Fixnum,
		 2: result->[] def_%cl_1_7 result[4.1,] %cl_1_6[5.1,] 	 SYMBOL:	 ARGS:%cl_1_6,
		 3: cf->[] def_%cl_1_8 cf[5.1,2.2,] 	 SYMBOL:	 ARGS:Fixnum,
		 4: cf->[] def_%cl_1_9 cf[5.1,5.3,2.2,] 	 SYMBOL:	 ARGS:Fixnum,
		 5: %self->append_custom_field def_%cl_1_10 %self[2.0,] %cl_1_7[5.2,] %cl_1_8[5.3,] %cl_1_9[5.4,] 	 SYMBOL:	 ARGS:%cl_1_7,%cl_1_8,%cl_1_9,
		 6: RETURN %cl_1_10[5.5,] %self[5.5,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_11 
		 1: def_%cl_1_12 %cl_1_11[6.0,] 
		 2: RETURN %cl_1_12[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 6: 
		 7: RETURN result[2.22,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = append_custom_field instanceMethod = false
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_target 
		 6: RECEIVEARG def_key 
		 7: RECEIVEARG def_value 
		 8: 
		 9: (HasCustomFields) def_%v_3 
		 10: (inherit Helpers) def_%v_4 %v_3[2.9,] 
		 11: %v_4[2.10,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.9,] 	 SYMBOL:Helpers,	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: GETFIELD %self->custom_field_types def_%v_5 %self[2.0,] 
		 1: %v_4->append_field def_%v_6 %v_4[3.0,2.10,] target[2.5,] key[2.6,] value[2.7,] %v_5[4.0,] 	 SYMBOL:	 ARGS:target,key,value,%v_5,
		 2: RETURN %v_6[4.1,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = register_custom_field_type instanceMethod = false
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: RECEIVEARG def_type 
		 7: 
		 8: def_%v_4 %self[2.0,] 
		 9: COPY TYPE_PASS def_%v_3 %v_4[2.8,] 
		 10: %v_4[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->custom_field_types def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.9,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: HASH- def_%v_6 
		 1: ATTRASSIGN %self->custom_field_types %v_6[5.0,] 
		 2: COPY TYPE_PASS def_%v_5 %v_6[5.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->custom_field_types def_%v_7 %self[5.1,2.0,] 
		 2: ATTRASSIGN %v_7->[] name[2.5,] type[2.6,] 
		 3: RETURN type[2.6,] %self[5.1,2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = preload_custom_fields instanceMethod = false
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_objects 
		 6: RECEIVEARG def_fields 
		 7: 
		 8: objects->present? def_%v_3 objects[2.5,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %v_3[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: HASH- def_%v_4 
		 2: COPY TYPE_PASS def_map %v_4[3.1,] 
		 3: 
		 4: HASH- def_%v_5 
		 5: COPY TYPE_PASS def_empty %v_5[3.4,] 
		 6: 
		 7: fields->each def_%v_6 fields[2.6,] %self[2.0,] 	 SYMBOL:	 ARGS:fields,
CLOSURE BEGIN: empty[3.5,] field[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_field 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN empty->[] field[2.2,] 
		 2: RETURN %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_3 
		 1: def_%cl_1_4 %cl_1_3[4.0,] 
		 2: RETURN %cl_1_4[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: 
		 9: objects->each def_%v_7 objects[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:objects,
CLOSURE BEGIN: obj[] map[3.2,] empty[3.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_obj 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: obj->id def_%cl_2_3 obj[2.2,] 	 SYMBOL:	 ARGS:
		 2: ATTRASSIGN map->[] %cl_2_3[3.1,] obj[3.1,2.2,] 
		 3: 
		 4: empty->dup def_%cl_2_4 empty[] 	 SYMBOL:	 ARGS:
		 5: ATTRASSIGN obj->preloaded_custom_fields %cl_2_4[3.4,] 
		 6: RETURN %cl_2_4[3.4,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: 
		 11: %self->name def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 12: %v_8->underscore def_%v_9 %v_8[3.11,] 	 SYMBOL:	 ARGS:
		 13: COPY TYPE_StringLiteral "_id" def_%v_10 
		 14: %v_9-><< def_%v_11 %v_9[3.12,] %v_10[3.13,] 	 SYMBOL:	 ARGS:%v_10,
		 15: COPY TYPE_PASS def_fk %v_11[3.14,] 
		 16: 
		 17: %self->name def_%v_12 %self[3.11,2.0,] 	 SYMBOL:	 ARGS:
		 18: COPY TYPE_StringLiteral "CustomField" def_%v_13 
		 19: BUILDSTRING def_%v_14 %v_12[3.17,] %v_13[3.18,] 
		 20: %v_14->constantize def_%v_15 %v_14[3.19,] 	 SYMBOL:	 ARGS:
		 21: 
		 22: COPY TYPE_StringLiteral " in (?)" def_%v_16 
		 23: BUILDSTRING def_%v_17 fk[3.15,] %v_16[3.22,] 
		 24: map->keys def_%v_18 map[3.2,] 	 SYMBOL:	 ARGS:
		 25: %v_15->where def_%v_19 %v_15[3.20,] %v_17[3.23,] %v_18[3.24,] 	 SYMBOL:	 ARGS:%v_17,%v_18,
		 26: COPY TYPE_StringLiteral "name in (?)" def_%v_20 
		 27: %v_19->where def_%v_21 %v_19[3.25,] %v_20[3.26,] fields[3.7,2.6,] 	 SYMBOL:	 ARGS:%v_20,fields,
		 28: %v_21->pluck def_%v_22 %v_21[3.27,] fk[3.15,] 	 SYMBOL:name,value,	 ARGS:fk,Symbol,Symbol,
		 29: %v_22->each def_%v_23 %v_22[3.28,] %self[3.11,3.17,2.0,] 	 SYMBOL:	 ARGS:%v_22,
CLOSURE BEGIN: map[3.2,3.24,] id[] name[] preloaded[] %self[3.11,3.17,2.0,] value[] 
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_id 
		 3: RECEIVEARG def_name 
		 4: RECEIVEARG def_value 
		 5: COPY TYPE_CurrentScope def_%current_scope 
		 6: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 9 
	datadep: 
	instructions:
		 0: 
		 1: map->[] def_%cl_3_3 map[] id[2.2,] 	 SYMBOL:	 ARGS:id,
		 2: %cl_3_3->preloaded_custom_fields def_%cl_3_4 %cl_3_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_PASS def_preloaded %cl_3_4[3.2,] 
		 4: 
		 5: %cl_3_4->[] def_%cl_3_5 %cl_3_4[3.2,] name[2.3,] 	 SYMBOL:	 ARGS:name,
		 6: %cl_3_5->nil? def_%cl_3_6 %cl_3_5[3.5,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %cl_3_6[3.6,] 
BB 4
	outgoing: 6 9 
	datadep: 
	instructions:
		 0: 
		 1: preloaded->delete def_%cl_3_7 preloaded[3.3,] name[2.3,] 	 SYMBOL:	 ARGS:name,
		 2: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_3_7 
BB 6
	outgoing: 7 8 9 
	datadep: 
	instructions:
		 0: 
		 1: (HasCustomFields) def_%cl_3_8 
		 2: (inherit Helpers) def_%cl_3_9 %cl_3_8[6.1,] 
		 3: %cl_3_9[6.2,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: %cl_3_8->const_missing def_%cl_3_9 %cl_3_8[6.1,] 	 SYMBOL:Helpers,	 ARGS:Symbol,
BB 8
	outgoing: 9 11 
	datadep: 
	instructions:
		 0: GETFIELD %self->custom_field_types def_%cl_3_10 %self[2.0,] 
		 1: %cl_3_9->append_field def_%cl_3_11 %cl_3_9[7.0,6.2,] preloaded[3.3,] name[2.3,] value[2.4,] %cl_3_10[8.0,] 	 SYMBOL:	 ARGS:preloaded,name,value,%cl_3_10,
		 2: RETURN %cl_3_11[8.1,] %self[2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: def_%cl_3_12 
		 1: def_%cl_3_13 %cl_3_12[9.0,] 
		 2: RETURN %cl_3_13[9.1,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: name[2.3,] preloaded[3.3,] value[2.4,] 
		 30: RETURN %v_23[3.29,] %self[3.11,3.17,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reload instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_options 
		 6: options[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_options 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->clear_custom_fields def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: 
		 3: %self->-unknown-super-target- def_%v_4 %self[4.1,2.0,] options[3.0,2.5,] %v_0[2.1,] 	 SYMBOL:	 ARGS:options,
		 4: RETURN %v_4[4.3,] %self[4.1,4.3,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = custom_field_preloaded? instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: 
		 7: GETFIELD %self->preloaded_custom_fields def_%v_3 %self[2.0,] 
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: GETFIELD %self->preloaded_custom_fields def_%v_4 %self[2.0,] 
		 1: %v_4->key? def_%v_5 %v_4[3.0,] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 2: RETURN %v_5[3.1,] %self[2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.7,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = clear_custom_fields instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: ATTRASSIGN %self->custom_fields 
		 7: 
		 8: ATTRASSIGN %self->custom_fields_orig 
		 9: RETURN %self[2.0,2.6,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_preloaded 
		 6: 
		 7: ATTRASSIGN %self->preloaded preloaded[2.5,] 
		 8: RETURN preloaded[2.5,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = [] instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_key 
		 6: 
		 7: GETFIELD %self->preloaded def_%v_3 %self[2.0,] 
		 8: %v_3->key? def_%v_4 %v_3[2.7,] key[2.5,] 	 SYMBOL:	 ARGS:key,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->preloaded def_%v_5 %self[2.0,] 
		 2: %v_5->[] def_%v_6 %v_5[3.1,] key[2.5,] 	 SYMBOL:	 ARGS:key,
		 3: RETURN %v_6[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: (StandardError) def_%v_7 
		 2: COPY TYPE_StringLiteral "Attempting to access a non preloaded custom field, this is disallowed to prevent N+1 queries." def_%v_8 
		 3: %self->raise def_%v_9 %self[2.0,] %v_7[4.1,] %v_8[4.2,] 	 SYMBOL:	 ARGS:%v_7,%v_8,
		 4: RETURN %v_9[4.3,] %self[4.3,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = custom_fields instanceMethod = true
BB 1
	outgoing: 14 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 8 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: 
		 7: GETFIELD %self->preloaded_custom_fields def_%v_3 %self[2.0,] 
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_4 %v_5[3.0,] 
		 2: %v_5[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: GETFIELD %self->preloaded_proxy def_%v_6 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_4 %v_6[4.0,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: BRANCH %v_4[4.1,3.1,] 
BB 6
	outgoing: 14 
	datadep: 
	instructions:
		 0: (PreloadedProxy) def_%v_7 
		 1: GETFIELD %self->preloaded_custom_fields def_%v_8 %self[2.0,] 
		 2: %v_7->new def_%v_9 %v_7[6.0,] %v_8[6.1,] 	 SYMBOL:	 ARGS:%v_8,
		 3: ATTRASSIGN %self->preloaded_proxy %v_9[6.2,] 
		 4: RETURN %v_9[6.2,] %self[6.3,2.0,] 
BB 7
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN %v_6[4.0,] %self[2.0,] 
BB 8
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_10 
		 1: 
		 2: def_%v_12 %self[2.0,] 
		 3: COPY TYPE_PASS def_%v_11 %v_12[8.2,] 
		 4: %v_12[8.2,] 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: GETFIELD %self->custom_fields def_%v_13 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_11 %v_13[10.0,] 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: BRANCH %v_11[10.1,8.3,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: %self->refresh_custom_fields_from_db def_%v_14 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_14->dup def_%v_15 %v_14[12.0,] 	 SYMBOL:	 ARGS:
		 2: ATTRASSIGN %self->custom_fields %v_15[12.1,] 
		 3: RETURN %v_15[12.1,] %self[12.0,12.2,2.0,] 
BB 13
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN %v_13[10.0,] %self[2.0,] 
BB 14
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = custom_fields= instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_data 
		 6: 
		 7: %self->custom_fields def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->replace def_%v_4 %v_3[2.7,] data[2.5,] 	 SYMBOL:	 ARGS:data,
		 9: RETURN %v_4[2.8,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = custom_fields_clean? instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->custom_fields def_%v_3 %self[2.0,] 
		 7: %v_3->! def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: GETFIELD %self->custom_fields_orig def_%v_5 %self[2.0,] 
		 1: GETFIELD %self->custom_fields def_%v_6 %self[2.0,] 
		 2: %v_5->== def_%v_7 %v_5[3.0,] %v_6[3.1,] 	 SYMBOL:	 ARGS:%v_6,
		 3: RETURN %v_7[3.2,] %self[2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_4[2.7,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = save_custom_fields instanceMethod = true
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_force 
		 6: force[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Boolean def_force 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%v_3 force[3.0,2.5,] 
		 2: BRANCH force[3.0,2.5,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->custom_fields_clean? def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_4->! def_%v_5 %v_4[5.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_3 %v_5[5.1,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: BRANCH %v_3[5.2,4.1,] 
BB 7
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->custom_fields def_%v_6 %self[2.0,] 
		 2: %v_6->dup def_%v_7 %v_6[7.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_PASS def_dup %v_7[7.2,] 
		 4: 
		 5: HASH- def_%v_8 
		 6: COPY TYPE_PASS def_array_fields %v_8[7.5,] 
		 7: 
		 8: %self->_custom_fields def_%v_9 %self[2.0,] 	 SYMBOL:	 ARGS:
		 9: %v_9->each def_%v_10 %v_9[7.8,] %self[7.8,2.0,] 	 SYMBOL:	 ARGS:%v_9,
CLOSURE BEGIN: f[] dup[7.3,] array_fields[7.6,] 
BB 1
	outgoing: 21 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_f 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 8 19 
	datadep: 
	instructions:
		 0: 
		 1: f->name def_%cl_1_3 f[2.2,] 	 SYMBOL:	 ARGS:
		 2: dup->[] def_%cl_1_4 dup[] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: (Array) def_%cl_1_5 
		 4: %cl_1_4->is_a? def_%cl_1_6 %cl_1_4[3.2,] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 5: BRANCH %cl_1_6[3.4,] 
BB 4
	outgoing: 5 6 19 
	datadep: 
	instructions:
		 0: 
		 1: f->name def_%cl_1_7 f[2.2,] 	 SYMBOL:	 ARGS:
		 2: array_fields->has_key? def_%cl_1_8 array_fields[] %cl_1_7[4.1,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 3: %cl_1_8->! def_%cl_1_9 %cl_1_8[4.2,] 	 SYMBOL:	 ARGS:
		 4: BRANCH %cl_1_9[4.3,] 
BB 5
	outgoing: 7 19 
	datadep: 
	instructions:
		 0: 
		 1: f->name def_%cl_1_10 f[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_Array def_%cl_1_11 f[5.1,2.2,] 
		 3: ATTRASSIGN array_fields->[] %cl_1_10[5.1,] %cl_1_11[5.2,] 
		 4: 
BB 6
	outgoing: 7 19 
	datadep: 
	instructions:
		 0: 
		 1: f->name def_%cl_1_12 f[2.2,] 	 SYMBOL:	 ARGS:
		 2: array_fields->[] def_%cl_1_13 array_fields[] %cl_1_12[6.1,] 	 SYMBOL:	 ARGS:%cl_1_12,
		 3: %cl_1_13-><< def_%cl_1_14 %cl_1_13[6.2,] f[6.1,2.2,] 	 SYMBOL:	 ARGS:f,
		 4: COPY TYPE_PASS def_%cl_1_11 %cl_1_14[6.3,] 
BB 7
	outgoing: 21 
	datadep: 
	instructions:
		 0: RETURN %cl_1_11[6.4,5.2,] %self[2.0,] 
BB 8
	outgoing: 9 13 19 
	datadep: 
	instructions:
		 0: 
		 1: f->name def_%cl_1_15 f[2.2,] 	 SYMBOL:	 ARGS:
		 2: dup->[] def_%cl_1_16 dup[] %cl_1_15[8.1,] 	 SYMBOL:	 ARGS:%cl_1_15,
		 3: (Hash) def_%cl_1_17 
		 4: %cl_1_16->is_a? def_%cl_1_18 %cl_1_16[8.2,] %cl_1_17[8.3,] 	 SYMBOL:	 ARGS:%cl_1_17,
		 5: BRANCH %cl_1_18[8.4,] 
BB 9
	outgoing: 10 11 19 
	datadep: 
	instructions:
		 0: 
		 1: f->name def_%cl_1_19 f[2.2,] 	 SYMBOL:	 ARGS:
		 2: dup->[] def_%cl_1_20 dup[] %cl_1_19[9.1,] 	 SYMBOL:	 ARGS:%cl_1_19,
		 3: %cl_1_20->to_json def_%cl_1_21 %cl_1_20[9.2,] 	 SYMBOL:	 ARGS:
		 4: f->value def_%cl_1_22 f[9.1,2.2,] 	 SYMBOL:	 ARGS:
		 5: %cl_1_21->!= def_%cl_1_23 %cl_1_21[9.3,] %cl_1_22[9.4,] 	 SYMBOL:	 ARGS:%cl_1_22,
		 6: BRANCH %cl_1_23[9.5,] 
BB 10
	outgoing: 12 19 
	datadep: 
	instructions:
		 0: 
		 1: f->destroy def_%cl_1_24 f[2.2,] 	 SYMBOL:	 ARGS:
		 2: 
BB 11
	outgoing: 12 19 
	datadep: 
	instructions:
		 0: 
		 1: f->name def_%cl_1_25 f[2.2,] 	 SYMBOL:	 ARGS:
		 2: dup->delete def_%cl_1_26 dup[] %cl_1_25[11.1,] 	 SYMBOL:	 ARGS:%cl_1_25,
		 3: COPY TYPE_PASS def_%cl_1_24 %cl_1_26[11.2,] 
BB 12
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
BB 13
	outgoing: 14 15 19 
	datadep: 
	instructions:
		 0: 
		 1: f->name def_%cl_1_27 f[2.2,] 	 SYMBOL:	 ARGS:
		 2: dup->[] def_%cl_1_28 dup[] %cl_1_27[13.1,] 	 SYMBOL:	 ARGS:%cl_1_27,
		 3: f->value def_%cl_1_29 f[13.1,2.2,] 	 SYMBOL:	 ARGS:
		 4: %cl_1_28->!= def_%cl_1_30 %cl_1_28[13.2,] %cl_1_29[13.3,] 	 SYMBOL:	 ARGS:%cl_1_29,
		 5: BRANCH %cl_1_30[13.4,] 
BB 14
	outgoing: 16 19 
	datadep: 
	instructions:
		 0: 
		 1: f->destroy def_%cl_1_31 f[2.2,] 	 SYMBOL:	 ARGS:
		 2: 
BB 15
	outgoing: 16 19 
	datadep: 
	instructions:
		 0: 
		 1: f->name def_%cl_1_32 f[2.2,] 	 SYMBOL:	 ARGS:
		 2: dup->delete def_%cl_1_33 dup[] %cl_1_32[15.1,] 	 SYMBOL:	 ARGS:%cl_1_32,
		 3: COPY TYPE_PASS def_%cl_1_31 %cl_1_33[15.2,] 
BB 16
	outgoing: 17 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%cl_1_24 %cl_1_31[15.3,14.1,] 
BB 17
	outgoing: 21 
	datadep: 
	instructions:
		 0: RETURN %cl_1_24[16.0,11.3,10.1,] %self[2.0,] 
BB 19
	outgoing: 21 
	datadep: 
	instructions:
		 0: def_%cl_1_34 
		 1: def_%cl_1_35 %cl_1_34[19.0,] 
		 2: RETURN %cl_1_35[19.1,] %self[2.0,] 
BB 21
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: 
		 11: array_fields->each def_%v_11 array_fields[7.6,] %self[7.8,2.0,] 	 SYMBOL:	 ARGS:array_fields,
CLOSURE BEGIN: fields[] dup[7.3,] field_name[] 
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_field_name 
		 3: RECEIVEARG def_fields 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 9 
	datadep: 
	instructions:
		 0: 
		 1: fields->length def_%cl_2_3 fields[2.3,] 	 SYMBOL:	 ARGS:
		 2: dup->[] def_%cl_2_4 dup[] field_name[2.2,] 	 SYMBOL:	 ARGS:field_name,
		 3: %cl_2_4->length def_%cl_2_5 %cl_2_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %cl_2_3->== def_%cl_2_6 %cl_2_3[3.1,] %cl_2_5[3.3,] 	 SYMBOL:	 ARGS:%cl_2_5,
		 5: BRANCH %cl_2_6[3.4,] 
BB 4
	outgoing: 5 9 
	datadep: 
	instructions:
		 0: fields->map def_%cl_2_7 fields[2.3,] 	 SYMBOL:value,	 ARGS:
		 1: dup->[] def_%cl_2_8 dup[] field_name[2.2,] 	 SYMBOL:	 ARGS:field_name,
		 2: %cl_2_7->== def_%cl_2_9 %cl_2_7[4.0,] %cl_2_8[4.1,] 	 SYMBOL:	 ARGS:%cl_2_8,
		 3: COPY TYPE_PASS def_%cl_2_6 %cl_2_9[4.2,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: BRANCH %cl_2_6[4.3,3.4,] 
BB 6
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: dup->delete def_%cl_2_10 dup[] field_name[2.2,] 	 SYMBOL:	 ARGS:field_name,
		 2: 
BB 7
	outgoing: 9 11 
	datadep: 
	instructions:
		 0: 
		 1: fields->each def_%cl_2_11 fields[2.3,] 	 SYMBOL:destroy,	 ARGS:
		 2: RETURN %cl_2_11[7.1,] %self[2.0,] 
BB 8
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %cl_2_10[6.1,] %self[2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: def_%cl_2_12 
		 1: def_%cl_2_13 %cl_2_12[9.0,] 
		 2: RETURN %cl_2_13[9.1,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: fields[2.3,] 
		 12: 
		 13: dup->each def_%v_12 dup[7.3,] %self[7.8,2.0,] 	 SYMBOL:	 ARGS:dup,
CLOSURE BEGIN: v[] %self[7.8,2.0,] k[] subv[] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_k 
		 3: RECEIVEARG def_v 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 10 
	datadep: 
	instructions:
		 0: 
		 1: (Array) def_%cl_3_3 
		 2: v->is_a? def_%cl_3_4 v[2.3,] %cl_3_3[3.1,] 	 SYMBOL:	 ARGS:%cl_3_3,
		 3: BRANCH %cl_3_4[3.2,] 
BB 4
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: v->each def_%cl_3_5 v[2.3,] %self[2.0,] 	 SYMBOL:	 ARGS:v,
CLOSURE BEGIN: %self[2.0,] k[2.2,] subv[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_4_0 
		 2: RECEIVEARG def_subv 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->_custom_fields def_%cl_4_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: HASH-name-value- def_%cl_4_4 k[] subv[2.2,] 
		 3: %cl_4_3->create def_%cl_4_5 %cl_4_3[3.1,] %cl_4_4[3.2,] 	 SYMBOL:	 ARGS:%cl_4_4,
		 4: RETURN %cl_4_5[3.3,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_4_6 
		 1: def_%cl_4_7 %cl_4_6[4.0,] 
		 2: RETURN %cl_4_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: 
BB 5
	outgoing: 6 7 10 
	datadep: 
	instructions:
		 0: 
		 1: (Hash) def_%cl_3_6 
		 2: v->is_a? def_%cl_3_7 v[2.3,] %cl_3_6[5.1,] 	 SYMBOL:	 ARGS:%cl_3_6,
		 3: BRANCH %cl_3_7[5.2,] 
BB 6
	outgoing: 8 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->_custom_fields def_%cl_3_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: v->to_json def_%cl_3_9 v[2.3,] 	 SYMBOL:	 ARGS:
		 3: HASH-name-value- def_%cl_3_10 k[2.2,] %cl_3_9[6.2,] 
		 4: %cl_3_8->create def_%cl_3_11 %cl_3_8[6.1,] %cl_3_10[6.3,] 	 SYMBOL:	 ARGS:%cl_3_10,
		 5: 
BB 7
	outgoing: 8 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->_custom_fields def_%cl_3_12 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: HASH-name-value- def_%cl_3_13 k[2.2,] v[2.3,] 
		 3: %cl_3_12->create def_%cl_3_14 %cl_3_12[7.1,] %cl_3_13[7.2,] 	 SYMBOL:	 ARGS:%cl_3_13,
		 4: COPY TYPE_PASS def_%cl_3_11 %cl_3_14[7.3,] 
BB 8
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %cl_3_11[7.4,6.4,] %self[2.0,] 
BB 9
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %cl_3_5[4.1,] %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_3_15 
		 1: def_%cl_3_16 %cl_3_15[10.0,] 
		 2: RETURN %cl_3_16[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: v[2.3,] 
		 14: 
		 15: %self->refresh_custom_fields_from_db def_%v_13 %self[7.8,2.0,] 	 SYMBOL:	 ARGS:
		 16: RETURN %v_13[7.15,] %self[7.8,7.15,2.0,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = refresh_custom_fields_from_db instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Hash) def_%v_3 
		 7: %v_3->new def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_PASS def_target %v_4[2.7,] 
		 9: 
		 10: %self->_custom_fields def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 11: %v_5->pluck def_%v_6 %v_5[2.10,] 	 SYMBOL:name,value,	 ARGS:Symbol,Symbol,
		 12: %v_6->each def_%v_7 %v_6[2.11,] %self[2.0,2.10,] 	 SYMBOL:	 ARGS:%v_6,
CLOSURE BEGIN: %self[2.0,2.10,] target[2.8,] key[] value[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_key 
		 3: RECEIVEARG def_value 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->class def_%cl_1_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->append_custom_field def_%cl_1_4 %cl_1_3[3.1,] target[] key[2.2,] value[2.3,] 	 SYMBOL:	 ARGS:target,key,value,
		 3: RETURN %cl_1_4[3.2,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: value[2.3,] 
		 13: 
		 14: ATTRASSIGN %self->custom_fields_orig target[2.8,] 
		 15: 
		 16: GETFIELD %self->custom_fields_orig def_%v_8 %self[2.0,2.10,2.14,] 
		 17: %v_8->dup def_%v_9 %v_8[2.16,] 	 SYMBOL:	 ARGS:
		 18: ATTRASSIGN %self->custom_fields %v_9[2.17,] 
		 19: RETURN %v_9[2.17,] %self[2.0,2.10,2.14,2.18,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

