SET IRMethod, name = errors instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->errors def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 8 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: (ActiveModel) def_%v_6 
		 1: (inherit Errors) def_%v_7 %v_6[5.0,] 
		 2: %v_7[5.1,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %v_6->const_missing def_%v_7 %v_6[5.0,] 	 SYMBOL:Errors,	 ARGS:Symbol,
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: %v_7->new def_%v_8 %v_7[6.0,5.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
		 1: ATTRASSIGN %self->errors %v_8[7.0,] 
		 2: RETURN %v_8[7.0,] %self[7.1,2.0,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = validate_child instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_obj 
		 6: 
		 7: obj->valid? def_%v_3 obj[2.5,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: %self->add_errors_from def_%v_5 %self[2.0,] obj[2.5,] 	 SYMBOL:	 ARGS:obj,
		 3: 
		 4: RETURN %self[4.2,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = rollback_with! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_obj 
		 6: RECEIVEARG def_error 
		 7: 
		 8: obj->errors def_%v_3 obj[2.5,] 	 SYMBOL:	 ARGS:
		 9: %v_3->[] def_%v_4 %v_3[2.8,] 	 SYMBOL:base,	 ARGS:Symbol,
		 10: %v_4-><< def_%v_5 %v_4[2.9,] error[2.6,] 	 SYMBOL:	 ARGS:error,
		 11: 
		 12: %self->rollback_from_errors! def_%v_6 %self[2.0,] obj[2.5,2.8,] 	 SYMBOL:	 ARGS:obj,
		 13: RETURN %v_6[2.12,] %self[2.0,2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = rollback_from_errors! instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_obj 
		 6: 
		 7: %self->add_errors_from def_%v_3 %self[2.0,] obj[2.5,] 	 SYMBOL:	 ARGS:obj,
		 8: 
		 9: (ActiveRecord) def_%v_4 
		 10: (inherit Rollback) def_%v_5 %v_4[2.9,] 
		 11: %v_5[2.10,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_4->const_missing def_%v_5 %v_4[2.9,] 	 SYMBOL:Rollback,	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_5->new def_%v_6 %v_5[3.0,2.10,] 	 SYMBOL:	 ARGS:
		 1: %self->raise def_%v_7 %self[2.0,] %v_6[4.0,] 	 SYMBOL:	 ARGS:%v_6,
		 2: RETURN %v_7[4.1,] %self[4.1,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = add_errors_from instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_obj 
		 6: 
		 7: obj->errors def_%v_3 obj[2.5,] 	 SYMBOL:	 ARGS:
		 8: %v_3->full_messages def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_4->each def_%v_5 %v_4[2.8,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: %self[2.0,] msg[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_msg 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->errors def_%cl_1_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->[] def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:base,	 ARGS:Symbol,
		 3: %cl_1_4->include? def_%cl_1_5 %cl_1_4[3.2,] msg[2.2,] 	 SYMBOL:	 ARGS:msg,
		 4: BRANCH %cl_1_5[3.3,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_6 
		 1: RETURN %cl_1_6[4.0,] %self[2.0,] 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: %self->errors def_%cl_1_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %cl_1_7->[] def_%cl_1_8 %cl_1_7[5.0,] 	 SYMBOL:base,	 ARGS:Symbol,
		 2: %cl_1_8-><< def_%cl_1_9 %cl_1_8[5.1,] msg[2.2,] 	 SYMBOL:	 ARGS:msg,
		 3: RETURN %cl_1_9[5.2,] %self[5.0,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_10 
		 1: def_%cl_1_11 %cl_1_10[7.0,] 
		 2: RETURN %cl_1_11[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: RETURN %v_5[2.9,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

