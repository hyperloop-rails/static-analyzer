SET IRMethod, name = [] instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_level 
		 6: 
		 7: %self->valid? def_%v_3 %self[2.0,] level[2.5,] 	 SYMBOL:	 ARGS:level,
		 8: %v_3->! def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: (InvalidTrustLevel) def_%v_5 
		 1: %self->raise def_%v_6 %self[2.0,] %v_5[3.0,] 	 SYMBOL:	 ARGS:%v_5,
		 2: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: RETURN level[2.5,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = levels instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->levels def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: (Enum) def_%v_6 
		 1: HASH-start- def_%v_7 
		 2: %v_6->new def_%v_8 %v_6[5.0,] %v_7[5.1,] 	 SYMBOL:newuser,basic,member,regular,leader,	 ARGS:Symbol,Symbol,Symbol,Symbol,Symbol,%v_7,
		 3: ATTRASSIGN %self->levels %v_8[5.2,] 
		 4: RETURN %v_8[5.2,] %self[5.3,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = all instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->levels def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->map def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: name_key[] id[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_name_key 
		 3: RECEIVEARG def_id 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (TrustLevel) def_%cl_1_3 
		 2: %cl_1_3->new def_%cl_1_4 %cl_1_3[3.1,] name_key[2.2,] id[2.3,] 	 SYMBOL:	 ARGS:name_key,id,
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: id[2.3,] 
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = valid? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_level 
		 6: 
		 7: %self->valid_range def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->=== def_%v_4 %v_3[2.7,] level[2.5,] 	 SYMBOL:	 ARGS:level,
		 9: RETURN %v_4[2.8,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = valid_range instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: CONSTANT def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = compare instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_current_level 
		 6: RECEIVEARG def_level 
		 7: 
		 8: COPY TYPE_PASS def_%v_3 current_level[2.5,] 
		 9: BRANCH current_level[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Fixnum def_%v_3 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_3->>= def_%v_4 %v_3[3.0,2.8,] level[2.6,] 	 SYMBOL:	 ARGS:level,
		 1: RETURN %v_4[4.0,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name_key 
		 6: RECEIVEARG def_id 
		 7: 
		 8: (I18n) def_%v_3 
		 9: COPY TYPE_StringLiteral "trust_levels." def_%v_4 
		 10: COPY TYPE_StringLiteral ".title" def_%v_5 
		 11: BUILDSTRING def_%v_6 %v_4[2.9,] name_key[2.5,] %v_5[2.10,] 
		 12: %v_3->t def_%v_7 %v_3[2.8,] %v_6[2.11,] 	 SYMBOL:	 ARGS:%v_6,
		 13: ATTRASSIGN %self->name %v_7[2.12,] 
		 14: 
		 15: ATTRASSIGN %self->id id[2.6,] 
		 16: RETURN id[2.6,] %self[2.0,2.13,2.15,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = serializable_hash instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->id def_%v_3 %self[2.0,] 
		 7: GETFIELD %self->name def_%v_4 %self[2.0,] 
		 8: HASH-id-name- def_%v_5 %v_3[2.6,] %v_4[2.7,] 
		 9: RETURN %v_5[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

