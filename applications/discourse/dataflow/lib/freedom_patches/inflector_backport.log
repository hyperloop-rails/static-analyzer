SET IRMethod, name = clear_memoize! instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (LRU_CACHES) def_%v_3 
		 7: %v_3->each def_%v_4 %v_3[2.6,] 	 SYMBOL:clear,	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = memoize instanceMethod = false
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_args 
		 6: 
		 7: args->each def_%v_3 args[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:args,
CLOSURE BEGIN: method_name[] %self[2.0,] cache[] args[2.5,] found[] uncached[] data[] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_method_name 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: (LruRedux) def_%cl_1_3 
		 2: (inherit ThreadSafeCache) def_%cl_1_4 %cl_1_3[3.1,] 
		 3: %cl_1_4[3.2,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: %cl_1_3->const_missing def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:ThreadSafeCache,	 ARGS:Symbol,
BB 5
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: (LRU_CACHE_SIZE) def_%cl_1_5 
		 1: %cl_1_4->new def_%cl_1_6 %cl_1_4[4.0,3.2,] %cl_1_5[5.0,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 2: COPY TYPE_PASS def_cache %cl_1_6[5.1,] 
		 3: 
		 4: (LRU_CACHES) def_%cl_1_7 
		 5: %cl_1_7-><< def_%cl_1_8 %cl_1_7[5.4,] %cl_1_6[5.1,] 	 SYMBOL:	 ARGS:cache,
		 6: 
		 7: COPY TYPE_StringLiteral "_without_cache" def_%cl_1_9 
		 8: BUILDSTRING def_%cl_1_10 method_name[2.2,] %cl_1_9[5.7,] 
		 9: COPY TYPE_PASS def_uncached %cl_1_10[5.8,] 
		 10: 
		 11: %self->alias_method def_%cl_1_11 %self[2.0,] %cl_1_10[5.8,] method_name[2.2,] 	 SYMBOL:	 ARGS:uncached,method_name,
		 12: 
		 13: %self->define_method def_%cl_1_12 %self[5.11,2.0,] method_name[2.2,] %self[5.11,2.0,] 	 SYMBOL:	 ARGS:method_name,%self,
CLOSURE BEGIN: cache[5.2,] args[] %self[5.11,2.0,] found[] uncached[5.9,] data[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_args 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Boolean def_found 
		 2: 
		 3: cache->fetch def_%cl_2_3 cache[] args[2.2,] %self[2.0,] 	 SYMBOL:	 ARGS:args,cache,
CLOSURE BEGIN: 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: COPY TYPE_Boolean def_found 
		 6: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: found[2.5,] 
		 4: COPY TYPE_PASS def_data %cl_2_3[3.3,] 
		 5: 
		 6: BRANCH found[3.1,3.3,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_2_4 
		 1: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%cl_2_5 uncached[] 
		 2: def_%cl_2_6 %cl_2_5[5.1,] args[2.2,] 
		 3: %self->send def_%cl_2_7 %self[2.0,] %cl_2_6[5.2,] 	 SYMBOL:	 ARGS:Splat,
		 4: COPY TYPE_PASS def_data %cl_2_7[5.3,] 
		 5: ATTRASSIGN cache->[] args[2.2,] %cl_2_7[5.3,] 
		 6: COPY TYPE_PASS def_%cl_2_4 %cl_2_7[5.3,] 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: data->dup def_%cl_2_8 data[5.4,3.4,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_2_8[6.1,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_2_9 
		 1: def_%cl_2_10 %cl_2_9[7.0,] 
		 2: RETURN %cl_2_10[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: found[3.1,3.3,] data[5.4,3.4,] 
		 14: RETURN %cl_1_12[5.13,] %self[5.11,5.13,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_13 
		 1: def_%cl_1_14 %cl_1_13[6.0,] 
		 2: RETURN %cl_1_14[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: cache[5.2,] uncached[5.9,] 
		 8: RETURN %v_3[2.7,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%v_4 
		 1: def_%v_5 %v_4[4.0,] 
		 2: RETURN %v_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = clear_memoize instanceMethod = false
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_args 
		 6: 
		 7: args->each def_%v_3 args[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:args,
CLOSURE BEGIN: method_name[] %self[2.0,] orig[] args[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_method_name 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "_without_clear_memoize" def_%cl_1_3 
		 2: BUILDSTRING def_%cl_1_4 method_name[2.2,] %cl_1_3[3.1,] 
		 3: COPY TYPE_PASS def_orig %cl_1_4[3.2,] 
		 4: 
		 5: %self->alias_method def_%cl_1_5 %self[2.0,] %cl_1_4[3.2,] method_name[2.2,] 	 SYMBOL:	 ARGS:orig,method_name,
		 6: 
		 7: %self->define_method def_%cl_1_6 %self[3.5,2.0,] method_name[2.2,] %self[3.5,2.0,] 	 SYMBOL:	 ARGS:method_name,%self,
CLOSURE BEGIN: orig[3.3,] args[] %self[3.5,2.0,] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_args 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: (ActiveSupport) def_%cl_2_3 
		 2: (inherit Inflector) def_%cl_2_4 %cl_2_3[3.1,] 
		 3: %cl_2_4[3.2,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: %cl_2_3->const_missing def_%cl_2_4 %cl_2_3[3.1,] 	 SYMBOL:Inflector,	 ARGS:Symbol,
BB 5
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: %cl_2_4->clear_memoize! def_%cl_2_5 %cl_2_4[4.0,3.2,] 	 SYMBOL:	 ARGS:
		 1: 
		 2: COPY TYPE_Array def_%cl_2_6 orig[] 
		 3: def_%cl_2_7 %cl_2_6[5.2,] args[2.2,] 
		 4: %self->send def_%cl_2_8 %self[2.0,] %cl_2_7[5.3,] 	 SYMBOL:	 ARGS:Splat,
		 5: RETURN %cl_2_8[5.4,] %self[5.4,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_2_9 
		 1: def_%cl_2_10 %cl_2_9[6.0,] 
		 2: RETURN %cl_2_10[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %cl_1_6[3.7,] %self[3.5,3.7,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: orig[3.3,] 
		 8: RETURN %v_3[2.7,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%v_4 
		 1: def_%v_5 %v_4[4.0,] 
		 2: RETURN %v_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

