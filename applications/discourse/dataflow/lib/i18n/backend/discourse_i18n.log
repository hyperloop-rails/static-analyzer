SET IRMethod, name = available_locales instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (LocaleSiteSetting) def_%v_3 
		 7: %v_3->supported_locales def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->map def_%v_5 %v_4[2.7,] 	 SYMBOL:to_sym,	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reload! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH- def_%v_3 
		 7: ATTRASSIGN %self->overrides %v_3[2.6,] 
		 8: 
		 9: HASH- def_%v_4 
		 10: ATTRASSIGN %self->pluralizers %v_4[2.9,] 
		 11: 
		 12: %self->super def_%v_5 %v_0[2.1,] 	 SYMBOL:	 ARGS:
		 13: RETURN %v_5[2.12,] %self[2.0,2.7,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = load_translations instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_filenames 
		 6: 
		 7: filenames->empty? def_%v_3 filenames[2.5,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: RETURN %v_4[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: filenames->flatten def_%v_5 filenames[2.5,] 	 SYMBOL:	 ARGS:
		 2: %v_5->each def_%v_6 %v_5[4.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_5,
CLOSURE BEGIN: %self[2.0,] filename[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_filename 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->load_file def_%cl_1_3 %self[2.0,] filename[2.2,] 	 SYMBOL:	 ARGS:filename,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: RETURN %v_6[4.2,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = fallbacks instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_locale 
		 6: 
		 7: (SiteSetting) def_%v_3 
		 8: %v_3->default_locale def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_4->to_sym def_%v_5 %v_4[2.8,] 	 SYMBOL:	 ARGS:
		 10: COPY TYPE_Array def_%v_6 locale[2.5,] %v_5[2.9,] 
		 11: %v_6->uniq def_%v_7 %v_6[2.10,] 	 SYMBOL:	 ARGS:
		 12: %v_7->compact def_%v_8 %v_7[2.11,] 	 SYMBOL:	 ARGS:
		 13: RETURN %v_8[2.12,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = exists? instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_locale 
		 6: RECEIVEARG def_key 
		 7: 
		 8: %self->fallbacks def_%v_3 %self[2.0,] locale[2.5,] 	 SYMBOL:	 ARGS:locale,
		 9: %v_3->each def_%v_4 %v_3[2.8,] %self[2.0,2.8,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: %self[2.0,2.8,] fallback[] key[2.6,] 
BB 1
	outgoing: 21 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_fallback 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
		 5: 
		 6: GLOBALVAR $! def_%cl_1_3 
BB 4
	outgoing: 6 8 11 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: %self->-unknown-super-target- def_%cl_1_6 %self[2.0,] fallback[2.2,] key[] %cl_1_0[2.1,] 	 SYMBOL:	 ARGS:fallback,key,
		 3: BRANCH %cl_1_6[4.2,] 
BB 6
	outgoing: 7 11 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Boolean def_%cl_1_7 
		 2: 
		 3: %cl_1_3[2.6,] 
BB 7
	outgoing: 21 
	datadep: 
	instructions:
		 0: RETURN %cl_1_7[6.1,] %self[2.0,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_8 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%cl_1_5 %cl_1_8[8.0,] 
		 1: 
		 2: %cl_1_3[2.6,] 
BB 10
	outgoing: 18 
	datadep: 
	instructions:
		 0: 
BB 11
	outgoing: 12 13 17 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_9 
		 2: (I18n) def_%cl_1_10 
		 3: (inherit InvalidLocale) def_%cl_1_11 %cl_1_10[11.2,] 
		 4: %cl_1_11[11.3,] 
BB 12
	outgoing: 13 17 
	datadep: 
	instructions:
		 0: %cl_1_10->const_missing def_%cl_1_11 %cl_1_10[11.2,] 	 SYMBOL:InvalidLocale,	 ARGS:Symbol,
BB 13
	outgoing: 14 15 17 
	datadep: 
	instructions:
		 0: def_%cl_1_12 %cl_1_11[12.0,11.3,] %cl_1_9[11.1,] 
		 1: BRANCH %cl_1_12[13.0,] 
BB 14
	outgoing: 17 21 
	datadep: 
	instructions:
		 0: %cl_1_9[11.1,] 
BB 15
	outgoing: 16 17 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_5 
		 1: 
		 2: %cl_1_3[2.6,] 
BB 16
	outgoing: 18 
	datadep: 
	instructions:
		 0: 
BB 17
	outgoing: 19 21 
	datadep: 
	instructions:
		 0: def_%cl_1_13 
		 1: def_%cl_1_14 %cl_1_13[17.0,] %cl_1_3[2.6,] 
		 2: %cl_1_13[17.0,] 
BB 18
	outgoing: 21 
	datadep: 
	instructions:
		 0: RETURN %cl_1_5[9.0,15.0,] %self[2.0,] 
BB 19
	outgoing: 21 
	datadep: 
	instructions:
		 0: def_%cl_1_15 
		 1: def_%cl_1_16 %cl_1_15[19.0,] 
		 2: RETURN %cl_1_16[19.1,] %self[2.0,] 
BB 21
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: 
		 11: RETURN %self[2.0,2.8,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%v_5 
		 1: def_%v_6 %v_5[4.0,] 
		 2: RETURN %v_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = search instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_locale 
		 6: RECEIVEARG def_query 
		 7: 
		 8: HASH- def_%v_3 
		 9: COPY TYPE_PASS def_results %v_3[2.8,] 
		 10: 
		 11: %self->fallbacks def_%v_4 %self[2.0,] locale[2.5,] 	 SYMBOL:	 ARGS:locale,
		 12: %v_4->each def_%v_5 %v_4[2.11,] %self[2.0,2.11,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: query[2.6,] %self[2.0,2.11,] fallback[] results[2.9,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_fallback 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "" def_%cl_1_3 
		 2: def_%cl_1_4 %cl_1_3[3.1,] query[] 
		 3: %self->translations def_%cl_1_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 4: %cl_1_5->[] def_%cl_1_6 %cl_1_5[3.3,] fallback[2.2,] 	 SYMBOL:	 ARGS:fallback,
		 5: %self->find_results def_%cl_1_7 %self[3.3,2.0,] %cl_1_4[3.2,] results[] %cl_1_6[3.4,] 	 SYMBOL:	 ARGS:%cl_1_4,results,%cl_1_6,
		 6: RETURN %cl_1_7[3.5,] %self[3.3,3.5,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[4.0,] 
		 2: RETURN %cl_1_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 13: 
		 14: RETURN results[2.9,] %self[2.0,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find_results instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_regexp 
		 6: RECEIVEARG def_results 
		 7: RECEIVEARG def_translations 
		 8: RECEIVECONSTARG def_path 
		 9: path[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_path 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: translations->blank? def_%v_3 translations[2.7,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_3[4.1,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN results[2.6,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: translations->each def_%v_5 translations[2.7,] %self[2.0,] 	 SYMBOL:	 ARGS:translations,
CLOSURE BEGIN: k_sym[] path[3.0,2.8,] k[] v[] results[2.6,] key_path[] regexp[2.5,] %self[2.0,] 
BB 1
	outgoing: 23 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_k_sym 
		 3: RECEIVEARG def_v 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 21 
	datadep: 
	instructions:
		 0: 
		 1: k_sym->to_s def_%cl_1_3 k_sym[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_k %cl_1_3[3.1,] 
		 3: 
		 4: BRANCH path[] 
BB 4
	outgoing: 6 21 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "." def_%cl_1_4 
		 1: BUILDSTRING def_%cl_1_5 path[] %cl_1_4[4.0,] k[3.2,] 
		 2: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%cl_1_5 k[3.2,] 
BB 6
	outgoing: 7 16 21 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_key_path %cl_1_5[5.0,4.1,] 
		 1: 
		 2: (String) def_%cl_1_6 
		 3: v->is_a? def_%cl_1_7 v[2.3,] %cl_1_6[6.2,] 	 SYMBOL:	 ARGS:%cl_1_6,
		 4: BRANCH %cl_1_7[6.3,] 
BB 7
	outgoing: 8 9 21 
	datadep: 
	instructions:
		 0: 
		 1: results->has_key? def_%cl_1_8 results[] key_path[6.0,] 	 SYMBOL:	 ARGS:key_path,
		 2: BRANCH %cl_1_8[7.1,] 
BB 8
	outgoing: 15 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_9 
		 1: 
BB 9
	outgoing: 10 11 21 
	datadep: 
	instructions:
		 0: 
		 1: key_path->=~ def_%cl_1_10 key_path[6.0,] regexp[] 	 SYMBOL:	 ARGS:regexp,
		 2: BRANCH %cl_1_10[9.1,] 
BB 10
	outgoing: 11 21 
	datadep: 
	instructions:
		 0: v->=~ def_%cl_1_11 v[2.3,] regexp[] 	 SYMBOL:	 ARGS:regexp,
		 1: COPY TYPE_PASS def_%cl_1_10 %cl_1_11[10.0,] 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_10[10.1,9.1,] 
BB 12
	outgoing: 14 21 
	datadep: 
	instructions:
		 0: ATTRASSIGN results->[] key_path[6.0,] v[2.3,] 
		 1: COPY TYPE_PASS def_%cl_1_12 v[2.3,] 
		 2: 
BB 13
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_12 
BB 14
	outgoing: 15 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%cl_1_9 %cl_1_12[13.0,12.1,] 
BB 15
	outgoing: 23 
	datadep: 
	instructions:
		 0: RETURN %cl_1_9[14.0,8.0,] %self[2.0,] 
BB 16
	outgoing: 17 18 21 
	datadep: 
	instructions:
		 0: 
		 1: (Hash) def_%cl_1_13 
		 2: v->is_a? def_%cl_1_14 v[2.3,] %cl_1_13[16.1,] 	 SYMBOL:	 ARGS:%cl_1_13,
		 3: BRANCH %cl_1_14[16.2,] 
BB 17
	outgoing: 19 21 
	datadep: 
	instructions:
		 0: 
		 1: %self->find_results def_%cl_1_15 %self[2.0,] regexp[] results[] v[2.3,] key_path[6.0,] 	 SYMBOL:	 ARGS:regexp,results,v,key_path,
		 2: 
BB 18
	outgoing: 19 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_15 
BB 19
	outgoing: 23 
	datadep: 
	instructions:
		 0: RETURN %cl_1_15[18.0,17.1,] %self[2.0,] 
BB 21
	outgoing: 23 
	datadep: 
	instructions:
		 0: def_%cl_1_16 
		 1: def_%cl_1_17 %cl_1_16[21.0,] 
		 2: RETURN %cl_1_17[21.1,] %self[2.0,] 
BB 23
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: v[2.3,] key_path[6.0,] k[3.2,] 
		 3: 
		 4: RETURN results[2.6,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = lookup instanceMethod = true
BB 1
	outgoing: 27 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_locale 
		 6: RECEIVEARG def_key 
		 7: RECEIVECONSTARG def_scope 
		 8: scope[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_3 
		 1: COPY TYPE_PASS def_scope %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: RECEIVECONSTARG def_options 
		 1: options[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: HASH- def_%v_4 
		 1: COPY TYPE_PASS def_options %v_4[5.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->super def_%v_5 %current_module[2.3,] locale[2.5,] key[2.6,] scope[3.1,2.7,] options[5.1,4.0,] %v_0[2.1,] 	 SYMBOL:	 ARGS:locale,key,scope,options,
		 2: COPY TYPE_PASS def_existing_translations %v_5[6.1,] 
		 3: 
		 4: options->[] def_%v_6 options[5.1,4.0,] 	 SYMBOL:overrides,	 ARGS:Symbol,
		 5: BRANCH %v_6[6.4,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_6 existing_translations[6.2,] 
BB 8
	outgoing: 9 25 
	datadep: 
	instructions:
		 0: BRANCH %v_6[7.0,6.4,] 
BB 9
	outgoing: 10 20 
	datadep: 
	instructions:
		 0: 
		 1: options->[] def_%v_7 options[5.1,4.0,] 	 SYMBOL:count,	 ARGS:Symbol,
		 2: BRANCH %v_7[9.1,] 
BB 10
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: (Hash) def_%v_8 
		 3: existing_translations->is_a? def_%v_9 existing_translations[6.2,] %v_8[10.2,] 	 SYMBOL:	 ARGS:%v_8,
		 4: BRANCH %v_9[10.3,] 
BB 11
	outgoing: 16 
	datadep: 
	instructions:
		 0: 
		 1: (Hash) def_%v_10 
		 2: existing_translations->map def_%v_11 existing_translations[6.2,] %self[2.0,] 	 SYMBOL:	 ARGS:existing_translations,
CLOSURE BEGIN: key[2.6,] k[] v[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_k 
		 3: RECEIVEARG def_v 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "." def_%cl_1_3 
		 2: BUILDSTRING def_%cl_1_4 key[] %cl_1_3[3.1,] k[2.2,] 
		 3: COPY TYPE_Array def_%cl_1_5 %cl_1_4[3.2,] v[2.3,] 
		 4: RETURN %cl_1_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: v[2.3,] 
		 3: %v_10->[] def_%v_12 %v_10[11.1,] %v_11[11.2,] 	 SYMBOL:	 ARGS:%v_11,
		 4: 
BB 12
	outgoing: 13 14 
	datadep: 
	instructions:
		 0: 
		 1: (String) def_%v_13 
		 2: existing_translations->is_a? def_%v_14 existing_translations[6.2,] %v_13[12.1,] 	 SYMBOL:	 ARGS:%v_13,
		 3: BRANCH %v_14[12.2,] 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: 
		 1: (Hash) def_%v_15 
		 2: COPY TYPE_Array def_%v_16 key[2.6,] existing_translations[6.2,] 
		 3: COPY TYPE_Array def_%v_17 %v_16[13.2,] 
		 4: %v_15->[] def_%v_18 %v_15[13.1,] %v_17[13.3,] 	 SYMBOL:	 ARGS:%v_17,
		 5: 
BB 14
	outgoing: 15 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_18 
BB 15
	outgoing: 16 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_12 %v_18[14.0,13.4,] 
BB 16
	outgoing: 17 18 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_remapped_translations %v_12[15.0,11.3,] 
		 1: 
		 2: HASH- def_%v_19 
		 3: COPY TYPE_PASS def_result %v_19[16.2,] 
		 4: 
		 5: options->[] def_%v_20 options[5.1,4.0,] 	 SYMBOL:overrides,	 ARGS:Symbol,
		 6: remapped_translations->merge def_%v_21 remapped_translations[16.0,] %v_20[16.5,] 	 SYMBOL:	 ARGS:%v_20,
		 7: %v_21->each def_%v_22 %v_21[16.6,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_21,
CLOSURE BEGIN: k[11.2,] key[2.6,] result[16.3,] v[11.2,] 
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_k 
		 3: RECEIVEARG def_v 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 9 
	datadep: 
	instructions:
		 0: 
		 1: k->!= def_%cl_2_3 k[2.2,] key[] 	 SYMBOL:	 ARGS:key,
		 2: BRANCH %cl_2_3[3.1,] 
BB 4
	outgoing: 5 9 
	datadep: 
	instructions:
		 0: key->to_s def_%cl_2_4 key[] 	 SYMBOL:	 ARGS:
		 1: k->start_with? def_%cl_2_5 k[3.1,2.2,] %cl_2_4[4.0,] 	 SYMBOL:	 ARGS:%cl_2_4,
		 2: COPY TYPE_PASS def_%cl_2_3 %cl_2_5[4.1,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: BRANCH %cl_2_3[4.2,3.1,] 
BB 6
	outgoing: 9 11 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "." def_%cl_2_6 
		 1: k->split def_%cl_2_7 k[3.1,2.2,] %cl_2_6[6.0,] 	 SYMBOL:	 ARGS:%cl_2_6,
		 2: %cl_2_7->last def_%cl_2_8 %cl_2_7[6.1,] 	 SYMBOL:	 ARGS:
		 3: %cl_2_8->to_sym def_%cl_2_9 %cl_2_8[6.2,] 	 SYMBOL:	 ARGS:
		 4: ATTRASSIGN result->[] %cl_2_9[6.3,] v[2.3,] 
		 5: COPY TYPE_PASS def_%cl_2_10 v[2.3,] 
		 6: RETURN v[2.3,] %self[2.0,] 
BB 7
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: def_%cl_2_11 
		 1: def_%cl_2_12 %cl_2_11[9.0,] 
		 2: RETURN %cl_2_12[9.1,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: v[2.3,] 
		 8: 
		 9: result->size def_%v_23 result[16.3,] 	 SYMBOL:	 ARGS:
		 10: %v_23->> def_%v_24 %v_23[16.9,] 	 SYMBOL:	 ARGS:Fixnum,
		 11: BRANCH %v_24[16.10,] 
BB 17
	outgoing: 27 
	datadep: 
	instructions:
		 0: RETURN result[16.3,] %self[2.0,] 
BB 18
	outgoing: 21 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_25 
		 1: 
BB 20
	outgoing: 21 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_25 
BB 21
	outgoing: 22 23 
	datadep: 
	instructions:
		 0: 
		 1: options->[] def_%v_26 options[5.1,4.0,] 	 SYMBOL:overrides,	 ARGS:Symbol,
		 2: %v_26->[] def_%v_27 %v_26[21.1,] key[2.6,] 	 SYMBOL:	 ARGS:key,
		 3: BRANCH %v_27[21.2,] 
BB 22
	outgoing: 27 
	datadep: 
	instructions:
		 0: options->[] def_%v_28 options[5.1,4.0,] 	 SYMBOL:overrides,	 ARGS:Symbol,
		 1: %v_28->[] def_%v_29 %v_28[22.0,] key[2.6,] 	 SYMBOL:	 ARGS:key,
		 2: RETURN %v_29[22.1,] %self[2.0,] 
BB 23
	outgoing: 26 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_30 
		 1: 
BB 25
	outgoing: 26 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_30 
BB 26
	outgoing: 27 
	datadep: 
	instructions:
		 0: 
		 1: RETURN existing_translations[6.2,] %self[2.0,] 
BB 27
	outgoing: 
	datadep: 
	instructions:

