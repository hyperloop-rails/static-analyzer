SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_file 
		 6: 
		 7: ATTRASSIGN %self->file file[2.5,] 
		 8: RETURN file[2.5,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = env_val instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_value 
		 6: 
		 7: (Hash) def_%v_3 
		 8: value->is_a? def_%v_4 value[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: 
		 1: (Rails) def_%v_5 
		 2: %v_5->env def_%v_6 %v_5[3.1,] 	 SYMBOL:	 ARGS:
		 3: value->has_key? def_%v_7 value[2.5,] %v_6[3.2,] 	 SYMBOL:	 ARGS:%v_6,
		 4: BRANCH %v_7[3.3,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: (Rails) def_%v_8 
		 1: %v_8->env def_%v_9 %v_8[4.0,] 	 SYMBOL:	 ARGS:
		 2: value->[] def_%v_10 value[2.5,] %v_9[4.1,] 	 SYMBOL:	 ARGS:%v_9,
		 3: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "default" def_%v_11 
		 1: value->[] def_%v_12 value[2.5,] %v_11[5.0,] 	 SYMBOL:	 ARGS:%v_11,
		 2: COPY TYPE_PASS def_%v_10 %v_12[5.1,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %v_10[5.2,4.2,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: RETURN value[2.5,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = load instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (YAML) def_%v_3 
		 7: GETFIELD %self->file def_%v_4 %self[2.0,] 
		 8: %v_3->load_file def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: COPY TYPE_PASS def_yaml %v_5[2.8,] 
		 10: 
		 11: %v_5->each_key def_%v_6 %v_5[2.8,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_5,
CLOSURE BEGIN: yaml[2.9,] category[] %self[2.0,] hash[] setting_name[] value[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_category 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: yaml->[] def_%cl_1_3 yaml[] category[2.2,] 	 SYMBOL:	 ARGS:category,
		 2: %cl_1_3->each def_%cl_1_4 %cl_1_3[3.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%cl_1_3,
CLOSURE BEGIN: hash[] %self[2.0,] category[2.2,] setting_name[] value[] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_setting_name 
		 3: RECEIVEARG def_hash 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 8 10 
	datadep: 
	instructions:
		 0: 
		 1: (Hash) def_%cl_2_3 
		 2: hash->is_a? def_%cl_2_4 hash[2.3,] %cl_2_3[3.1,] 	 SYMBOL:	 ARGS:%cl_2_3,
		 3: BRANCH %cl_2_4[3.2,] 
BB 4
	outgoing: 5 6 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "default" def_%cl_2_5 
		 2: hash->delete def_%cl_2_6 hash[2.3,] %cl_2_5[4.1,] 	 SYMBOL:	 ARGS:%cl_2_5,
		 3: %self->env_val def_%cl_2_7 %self[2.0,] %cl_2_6[4.2,] 	 SYMBOL:	 ARGS:%cl_2_6,
		 4: COPY TYPE_PASS def_value %cl_2_7[4.3,] 
		 5: 
		 6: COPY TYPE_StringLiteral "hidden" def_%cl_2_8 
		 7: hash->key? def_%cl_2_9 hash[4.2,2.3,] %cl_2_8[4.6,] 	 SYMBOL:	 ARGS:%cl_2_8,
		 8: BRANCH %cl_2_9[4.7,] 
BB 5
	outgoing: 7 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "hidden" def_%cl_2_10 
		 2: COPY TYPE_StringLiteral "hidden" def_%cl_2_11 
		 3: hash->delete def_%cl_2_12 hash[2.3,] %cl_2_11[5.2,] 	 SYMBOL:	 ARGS:%cl_2_11,
		 4: %self->env_val def_%cl_2_13 %self[2.0,] %cl_2_12[5.3,] 	 SYMBOL:	 ARGS:%cl_2_12,
		 5: ATTRASSIGN hash->[] %cl_2_10[5.1,] %cl_2_13[5.4,] 
		 6: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_2_13 
BB 7
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: hash->symbolize_keys! def_%cl_2_15 hash[5.5,2.3,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_Array def_%cl_2_16 category[] setting_name[2.2,] value[4.4,] %cl_2_15[7.1,] 
		 3: def_%cl_2_14 %cl_2_0[2.1,] %cl_2_16[7.2,] 
		 4: 
BB 8
	outgoing: 10 12 
	datadep: 
	instructions:
		 0: 
		 1: HASH- def_%cl_2_18 
		 2: COPY TYPE_Array def_%cl_2_19 category[] setting_name[2.2,] hash[2.3,] %cl_2_18[8.1,] 
		 3: def_%cl_2_17 %cl_2_0[2.1,] %cl_2_19[8.2,] 
		 4: RETURN %cl_2_17[8.3,] %self[2.0,] 
BB 9
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %cl_2_14[7.3,] %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_2_20 
		 1: def_%cl_2_21 %cl_2_20[10.0,] 
		 2: RETURN %cl_2_21[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: value[4.4,] hash[5.5,2.3,] 
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 12: RETURN %v_6[2.11,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

