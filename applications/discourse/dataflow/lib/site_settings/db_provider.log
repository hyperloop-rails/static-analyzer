SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_model 
		 6: 
		 7: model->after_commit def_%v_3 model[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:model,
CLOSURE BEGIN: model[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: model->notify_changed! def_%cl_1_3 model[] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: 
		 9: ATTRASSIGN %self->model model[2.5,2.7,] 
		 10: RETURN model[2.5,2.7,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = all instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->table_exists? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: (SqlBuilder) def_%v_6 
		 3: COPY TYPE_StringLiteral "SELECT name, data_type, value FROM " def_%v_7 
		 4: GETFIELD %self->model def_%v_8 %self[2.0,] 
		 5: %v_8->table_name def_%v_9 %v_8[3.4,] 	 SYMBOL:	 ARGS:
		 6: BUILDSTRING def_%v_10 %v_7[3.3,] %v_9[3.5,] 
		 7: %v_6->new def_%v_11 %v_6[3.2,] %v_10[3.6,] 	 SYMBOL:	 ARGS:%v_10,
		 8: (OpenStruct) def_%v_12 
		 9: %v_11->map_exec def_%v_13 %v_11[3.7,] %v_12[3.8,] 	 SYMBOL:	 ARGS:%v_12,
		 10: RETURN %v_13[3.9,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_5 
		 1: RETURN %v_5[4.0,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: 
		 7: %self->table_exists? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: (SqlBuilder) def_%v_5 
		 3: COPY TYPE_StringLiteral "SELECT name, data_type, value FROM " def_%v_6 
		 4: GETFIELD %self->model def_%v_7 %self[2.0,] 
		 5: %v_7->table_name def_%v_8 %v_7[3.4,] 	 SYMBOL:	 ARGS:
		 6: COPY TYPE_StringLiteral " WHERE name = :name" def_%v_9 
		 7: BUILDSTRING def_%v_10 %v_6[3.3,] %v_8[3.5,] %v_9[3.6,] 
		 8: %v_5->new def_%v_11 %v_5[3.2,] %v_10[3.7,] 	 SYMBOL:	 ARGS:%v_10,
		 9: (OpenStruct) def_%v_12 
		 10: HASH-name- def_%v_13 name[2.5,] 
		 11: %v_11->map_exec def_%v_14 %v_11[3.8,] %v_12[3.9,] %v_13[3.10,] 	 SYMBOL:	 ARGS:%v_12,%v_13,
		 12: %v_14->first def_%v_15 %v_14[3.11,] 	 SYMBOL:	 ARGS:
		 13: RETURN %v_15[3.12,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = save instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: RECEIVEARG def_value 
		 7: RECEIVEARG def_data_type 
		 8: 
		 9: %self->table_exists? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 10: BRANCH %v_3[2.9,] 
BB 3
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: GETFIELD %self->model def_%v_5 %self[2.0,] 
		 3: HASH-name- def_%v_6 name[2.5,] 
		 4: %v_5->find_by def_%v_7 %v_5[3.2,] %v_6[3.3,] 	 SYMBOL:	 ARGS:%v_6,
		 5: COPY TYPE_PASS def_model %v_7[3.4,] 
		 6: 
		 7: COPY TYPE_PASS def_%v_8 %v_7[3.4,] 
		 8: COPY TYPE_PASS def_%v_9 %v_7[3.4,] 
		 9: BRANCH %v_7[3.4,] 
BB 4
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: GETFIELD %self->model def_%v_10 %self[2.0,] 
		 1: %v_10->new def_%v_11 %v_10[6.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_model %v_11[6.1,] 
		 3: COPY TYPE_PASS def_%v_9 %v_11[6.1,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN model->name name[2.5,] 
		 2: 
		 3: ATTRASSIGN model->value value[2.6,] 
		 4: 
		 5: ATTRASSIGN model->data_type data_type[2.7,] 
		 6: 
		 7: model->save! def_%v_12 model[7.1,7.3,7.5,6.2,3.5,] 	 SYMBOL:	 ARGS:
		 8: 
		 9: RETURN %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = destroy instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: 
		 7: %self->table_exists? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: GETFIELD %self->model def_%v_5 %self[2.0,] 
		 3: HASH-name- def_%v_6 name[2.5,] 
		 4: %v_5->where def_%v_7 %v_5[3.2,] %v_6[3.3,] 	 SYMBOL:	 ARGS:%v_6,
		 5: %v_7->destroy_all def_%v_8 %v_7[3.4,] 	 SYMBOL:	 ARGS:
		 6: RETURN %v_8[3.5,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = current_site instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (RailsMultisite) def_%v_3 
		 7: (inherit ConnectionManagement) def_%v_4 %v_3[2.6,] 
		 8: %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.6,] 	 SYMBOL:ConnectionManagement,	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_4->current_db def_%v_5 %v_4[3.0,2.7,] 	 SYMBOL:	 ARGS:
		 1: RETURN %v_5[4.0,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = table_exists? instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->table_exists def_%v_3 %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: (ActiveRecord) def_%v_5 
		 1: (inherit Base) def_%v_6 %v_5[4.0,] 
		 2: %v_6[4.1,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %v_5->const_missing def_%v_6 %v_5[4.0,] 	 SYMBOL:Base,	 ARGS:Symbol,
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %v_6->connection def_%v_7 %v_6[5.0,4.1,] 	 SYMBOL:	 ARGS:
		 1: GETFIELD %self->model def_%v_8 %self[2.0,] 
		 2: %v_8->table_name def_%v_9 %v_8[6.1,] 	 SYMBOL:	 ARGS:
		 3: %v_7->table_exists? def_%v_10 %v_7[6.0,] %v_9[6.2,] 	 SYMBOL:	 ARGS:%v_9,
		 4: ATTRASSIGN %self->table_exists %v_10[6.3,] 
		 5: COPY TYPE_PASS def_%v_4 %v_10[6.3,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->table_exists def_%v_11 %self[6.4,2.0,] 
		 2: RETURN %v_11[7.1,] %self[6.4,2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

