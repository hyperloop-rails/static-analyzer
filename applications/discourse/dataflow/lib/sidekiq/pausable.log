SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Mutex) def_%v_3 
		 7: %v_3->new def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: ATTRASSIGN %self->mutex %v_4[2.7,] 
		 9: RETURN %v_4[2.7,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = pause! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->redis def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %self->paused_key def_%v_4 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_StringLiteral "paused" def_%v_5 
		 9: %v_3->setex def_%v_6 %v_3[2.6,] %v_4[2.7,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_4,Fixnum,%v_5,
		 10: 
		 11: GETFIELD %self->mutex def_%v_7 %self[2.0,2.6,2.7,] 
		 12: %v_7->synchronize def_%v_8 %v_7[2.11,] %self[2.0,2.6,2.7,] 	 SYMBOL:	 ARGS:%v_7,
CLOSURE BEGIN: %self[2.0,2.6,2.7,] 
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 13 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_4 %self[2.0,] 
		 2: COPY TYPE_PASS def_%cl_1_3 %cl_1_4[3.1,] 
		 3: %cl_1_4[3.1,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: GETFIELD %self->extend_lease_thread def_%cl_1_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%cl_1_3 %cl_1_5[4.0,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_3[4.1,3.2,] 
BB 6
	outgoing: 7 13 
	datadep: 
	instructions:
		 0: %self->extend_lease_thread def_%cl_1_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: ATTRASSIGN %self->extend_lease_thread %cl_1_6[6.0,] 
		 2: COPY TYPE_PASS def_%cl_1_5 %cl_1_6[6.0,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
BB 8
	outgoing: 9 11 13 
	datadep: 
	instructions:
		 0: %self->paused? def_%cl_1_8 %self[6.1,2.0,] 	 SYMBOL:	 ARGS:
		 1: %cl_1_8->! def_%cl_1_9 %cl_1_8[8.0,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_9[8.1,] 
BB 9
	outgoing: 10 13 
	datadep: 
	instructions:
		 0: 
		 1: %self->sleep def_%cl_1_10 %self[6.1,2.0,] 	 SYMBOL:	 ARGS:Float,
BB 10
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
BB 11
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %self[6.1,2.0,] 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: def_%cl_1_11 
		 1: def_%cl_1_12 %cl_1_11[13.0,] 
		 2: RETURN %cl_1_12[13.1,] %self[6.1,2.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 13: 
		 14: RETURN %self[2.0,2.6,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = paused? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->redis def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %self->paused_key def_%v_4 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_3->get def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: %v_5->! def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: %v_6->! def_%v_7 %v_6[2.9,] 	 SYMBOL:	 ARGS:
		 11: RETURN %v_7[2.10,] %self[2.0,2.6,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = unpause! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->mutex def_%v_3 %self[2.0,] 
		 7: %v_3->synchronize def_%v_4 %v_3[2.6,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->extend_lease_thread 
		 2: RETURN %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_3 
		 1: def_%cl_1_4 %cl_1_3[4.0,] 
		 2: RETURN %cl_1_4[4.1,] %self[3.1,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: 
		 9: %self->redis def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 10: %self->paused_key def_%v_6 %self[2.0,2.9,] 	 SYMBOL:	 ARGS:
		 11: %v_5->del def_%v_7 %v_5[2.9,] %v_6[2.10,] 	 SYMBOL:	 ARGS:%v_6,
		 12: 
		 13: RETURN %self[2.0,2.9,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = extend_lease_thread instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Thread) def_%v_3 
		 7: %v_3->new def_%v_4 %v_3[2.6,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 14 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
BB 4
	outgoing: 5 10 
	datadep: 
	instructions:
		 0: BRANCH 
BB 5
	outgoing: 6 7 12 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: GETFIELD %self->mutex def_%cl_1_4 %self[2.0,] 
		 3: %cl_1_4->synchronize def_%cl_1_5 %cl_1_4[5.2,] %self[2.0,] 	 SYMBOL:	 ARGS:%cl_1_4,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: GETFIELD %self->extend_lease_thread def_%cl_2_3 %self[2.0,] 
		 6: RETURN %cl_2_3[2.5,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 4: BRANCH %cl_1_5[5.3,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_6 
		 1: 
BB 7
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_3 
		 1: RETURN %cl_1_3[7.0,] %self[2.0,] 
BB 8
	outgoing: 9 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->redis def_%cl_1_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %self->paused_key def_%cl_1_8 %self[8.1,2.0,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_7->expire def_%cl_1_9 %cl_1_7[8.1,] %cl_1_8[8.2,] 	 SYMBOL:	 ARGS:%cl_1_8,Fixnum,
		 4: 
		 5: %self->sleep def_%cl_1_10 %self[8.1,8.2,2.0,] 	 SYMBOL:	 ARGS:Fixnum,
BB 9
	outgoing: 4 
	datadep: 
	instructions:
		 0: 
BB 10
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: def_%cl_1_11 
		 1: def_%cl_1_12 %cl_1_11[12.0,] 
		 2: RETURN %cl_1_12[12.1,] %self[2.0,] 
BB 14
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = redis instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GLOBALVAR $redis def_%v_3 
		 7: %v_3->without_namespace def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = paused_key instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "sidekiq_is_paused_v2" def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = pause! instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->pauser def_%v_3 %self[2.0,] 
		 7: %v_3->pause! def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = paused? instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->pauser def_%v_3 %self[2.0,] 
		 7: %v_3->paused? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = unpause! instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->pauser def_%v_3 %self[2.0,] 
		 7: %v_3->unpause! def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_delay 
		 6: delay[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: CONSTANT def_%v_3 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_delay %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->delay delay[3.1,2.5,] 
		 2: RETURN delay[3.1,2.5,] %self[4.1,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = call instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_worker 
		 6: RECEIVEARG def_msg 
		 7: RECEIVEARG def_queue 
		 8: 
		 9: (Sidekiq) def_%v_3 
		 10: %v_3->paused? def_%v_4 %v_3[2.9,] 	 SYMBOL:	 ARGS:
		 11: BRANCH %v_4[2.10,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: worker->class def_%v_5 worker[2.5,] 	 SYMBOL:	 ARGS:
		 2: GETFIELD %self->delay def_%v_6 %self[2.0,] 
		 3: COPY TYPE_Array def_%v_7 %v_6[3.2,] 
		 4: COPY TYPE_StringLiteral "args" def_%v_8 
		 5: msg->[] def_%v_9 msg[2.6,] %v_8[3.4,] 	 SYMBOL:	 ARGS:%v_8,
		 6: def_%v_10 %v_7[3.3,] %v_9[3.5,] 
		 7: %v_5->perform_in def_%v_11 %v_5[3.1,] %v_10[3.6,] 	 SYMBOL:	 ARGS:Splat,
		 8: RETURN %v_11[3.7,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_12 %v_0[2.1,] 
		 2: RETURN %v_12[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

