SET IRMethod, name = create_errors_json instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_obj 
		 6: RECEIVECONSTARG def_type 
		 7: type[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_type 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->create_errors_array def_%v_3 %self[2.0,] obj[2.5,] 	 SYMBOL:	 ARGS:obj,
		 2: COPY TYPE_PASS def_errors %v_3[4.1,] 
		 3: 
		 4: BRANCH type[3.0,2.6,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: ATTRASSIGN errors->[] type[3.0,2.6,] 
		 1: COPY TYPE_PASS def_%v_4 type[3.0,2.6,] 
		 2: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: RETURN errors[5.0,4.2,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = create_errors_array instanceMethod = true
BB 1
	outgoing: 24 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_obj 
		 6: 
		 7: (String) def_%v_3 
		 8: obj->is_a? def_%v_4 obj[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 24 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_5 obj[2.5,] 
		 1: HASH-errors- def_%v_6 %v_5[3.0,] 
		 2: RETURN %v_6[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_7 
		 1: 
		 2: (ActiveRecord) def_%v_8 
		 3: (inherit RecordInvalid) def_%v_9 %v_8[4.2,] 
		 4: %v_9[4.3,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %v_8->const_missing def_%v_9 %v_8[4.2,] 	 SYMBOL:RecordInvalid,	 ARGS:Symbol,
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: obj->is_a? def_%v_10 obj[2.5,] %v_9[6.0,4.3,] 	 SYMBOL:	 ARGS:%v_9,
		 1: BRANCH %v_10[7.0,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: obj->record def_%v_11 obj[2.5,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_obj %v_11[8.0,] 
		 2: 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_11 
BB 10
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: 
		 1: obj->respond_to? def_%v_12 obj[8.1,2.5,] 	 SYMBOL:errors,	 ARGS:Symbol,
		 2: BRANCH %v_12[10.1,] 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: obj->errors def_%v_13 obj[8.1,2.5,] 	 SYMBOL:	 ARGS:
		 1: %v_13->present? def_%v_14 %v_13[11.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_12 %v_14[11.1,] 
BB 12
	outgoing: 13 14 
	datadep: 
	instructions:
		 0: BRANCH %v_12[11.2,10.1,] 
BB 13
	outgoing: 24 
	datadep: 
	instructions:
		 0: obj->errors def_%v_15 obj[8.1,2.5,] 	 SYMBOL:	 ARGS:
		 1: %v_15->full_messages def_%v_16 %v_15[13.0,] 	 SYMBOL:	 ARGS:
		 2: HASH-errors- def_%v_17 %v_16[13.1,] 
		 3: RETURN %v_17[13.2,] %self[2.0,] 
BB 14
	outgoing: 16 17 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_18 
		 1: 
		 2: (Array) def_%v_19 
		 3: obj->is_a? def_%v_20 obj[8.1,2.5,] %v_19[14.2,] 	 SYMBOL:	 ARGS:%v_19,
		 4: BRANCH %v_20[14.3,] 
BB 16
	outgoing: 17 
	datadep: 
	instructions:
		 0: obj->present? def_%v_21 obj[8.1,2.5,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_20 %v_21[16.0,] 
BB 17
	outgoing: 18 19 
	datadep: 
	instructions:
		 0: BRANCH %v_20[16.1,14.3,] 
BB 18
	outgoing: 24 
	datadep: 
	instructions:
		 0: obj->map def_%v_22 obj[8.1,2.5,] 	 SYMBOL:to_s,	 ARGS:
		 1: HASH-errors- def_%v_23 %v_22[18.0,] 
		 2: RETURN %v_23[18.1,] %self[2.0,] 
BB 19
	outgoing: 21 22 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_24 
		 1: 
		 2: BRANCH obj[8.1,2.5,] 
BB 21
	outgoing: 23 
	datadep: 
	instructions:
		 0: (Rails) def_%v_25 
		 1: %v_25->logger def_%v_26 %v_25[21.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "create_errors_json called with unrecognized type: " def_%v_27 
		 3: obj->inspect def_%v_28 obj[8.1,2.5,] 	 SYMBOL:	 ARGS:
		 4: BUILDSTRING def_%v_29 %v_27[21.2,] %v_28[21.3,] 
		 5: %v_26->warn def_%v_30 %v_26[21.1,] %v_29[21.4,] 	 SYMBOL:	 ARGS:%v_29,
		 6: 
BB 22
	outgoing: 23 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_30 
BB 23
	outgoing: 24 
	datadep: 
	instructions:
		 0: 
		 1: (JsonError) def_%v_31 
		 2: %v_31->generic_error def_%v_32 %v_31[23.1,] 	 SYMBOL:	 ARGS:
		 3: RETURN %v_32[23.2,] %self[2.0,] 
BB 24
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = generic_error instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (I18n) def_%v_3 
		 7: COPY TYPE_StringLiteral "js.generic_error" def_%v_4 
		 8: %v_3->t def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: COPY TYPE_Array def_%v_6 %v_5[2.8,] 
		 10: HASH-errors- def_%v_7 %v_6[2.9,] 
		 11: RETURN %v_7[2.10,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

