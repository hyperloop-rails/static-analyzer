SET IRMethod, name = method_missing instanceMethod = true
BB 1
	outgoing: 14 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 12 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_method 
		 6: RECEIVEARG def_args 
		 7: def_%v_3 
		 8: def_block %v_3[2.7,] 
		 9: 
		 10: method->to_s def_%v_4 method[2.5,] 	 SYMBOL:	 ARGS:
		 11: COPY TYPE_Regexp def_%v_5 
		 12: %v_4->=~ def_%v_6 %v_4[2.10,] 	 SYMBOL:	 ARGS:%v_5,
		 13: BRANCH %v_6[2.12,] 
BB 3
	outgoing: 4 10 
	datadep: 
	instructions:
		 0: 
		 1: (Regexp) def_%v_7 
		 2: %v_7->last_match def_%v_8 %v_7[3.1,] 	 SYMBOL:	 ARGS:
		 3: %v_8->[] def_%v_9 %v_8[3.2,] 	 SYMBOL:	 ARGS:Fixnum,
		 4: COPY TYPE_StringLiteral "?" def_%v_10 
		 5: BUILDSTRING def_%v_11 %v_9[3.3,] %v_10[3.4,] 
		 6: COPY TYPE_DynamicSymbol def_%v_12 %v_11[3.5,] 
		 7: COPY TYPE_PASS def_can_method %v_12[3.6,] 
		 8: 
		 9: %self->respond_to? def_%v_13 %self[2.0,] %v_12[3.6,] 	 SYMBOL:	 ARGS:can_method,
		 10: BRANCH %v_13[3.9,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%v_14 can_method[3.7,] 
		 2: def_%v_15 %v_14[4.1,] args[2.6,] 
		 3: %self->send def_%v_16 %self[2.0,] %v_15[4.2,] block[2.8,] 	 SYMBOL:	 ARGS:Splat,
		 4: BRANCH %v_16[4.3,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_17 
		 1: 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: (Discourse) def_%v_18 
		 1: (inherit InvalidAccess) def_%v_19 %v_18[6.0,] 
		 2: %v_19[6.1,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: %v_18->const_missing def_%v_19 %v_18[6.0,] 	 SYMBOL:InvalidAccess,	 ARGS:Symbol,
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral " failed" def_%v_20 
		 1: BUILDSTRING def_%v_21 can_method[3.7,] %v_20[8.0,] 
		 2: %v_19->new def_%v_22 %v_19[7.0,6.1,] %v_21[8.1,] 	 SYMBOL:	 ARGS:%v_21,
		 3: %self->raise def_%v_23 %self[2.0,] %v_22[8.2,] 	 SYMBOL:	 ARGS:%v_22,
		 4: COPY TYPE_PASS def_%v_17 %v_23[8.3,] 
BB 9
	outgoing: 14 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] 
BB 10
	outgoing: 13 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_24 
		 1: 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_24 
BB 13
	outgoing: 14 
	datadep: 
	instructions:
		 0: 
		 1: %self->-unknown-super-target- def_%v_25 %self[2.0,] method[2.5,] args[2.6,] %v_0[2.1,] 	 SYMBOL:	 ARGS:method,Splat,
		 2: COPY TYPE_Array def_%v_26 method[2.5,] 
		 3: def_%v_27 %v_26[13.2,] args[2.6,] 
		 4: %v_25->method_missing def_%v_28 %v_25[13.1,] %v_27[13.3,] block[2.8,] 	 SYMBOL:	 ARGS:Splat,
		 5: RETURN %v_28[13.4,] %self[13.1,2.0,] 
BB 14
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ensure_can_see! instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_obj 
		 6: 
		 7: %self->can_see? def_%v_3 %self[2.0,] obj[2.5,] 	 SYMBOL:	 ARGS:obj,
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: RETURN %v_4[3.0,] %self[2.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: (Discourse) def_%v_5 
		 1: (inherit InvalidAccess) def_%v_6 %v_5[4.0,] 
		 2: %v_6[4.1,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %v_5->const_missing def_%v_6 %v_5[4.0,] 	 SYMBOL:InvalidAccess,	 ARGS:Symbol,
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "Can't see " def_%v_7 
		 1: BUILDSTRING def_%v_8 %v_7[6.0,] obj[2.5,] 
		 2: %v_6->new def_%v_9 %v_6[5.0,4.1,] %v_8[6.1,] 	 SYMBOL:	 ARGS:%v_8,
		 3: %self->raise def_%v_10 %self[2.0,] %v_9[6.2,] 	 SYMBOL:	 ARGS:%v_9,
		 4: RETURN %v_10[6.3,] %self[6.3,2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

