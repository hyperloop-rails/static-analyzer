SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_template 
		 6: RECEIVECONSTARG def_klass 
		 7: klass[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_klass 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: HASH- def_%v_3 
		 2: ATTRASSIGN %self->args %v_3[4.1,] 
		 3: 
		 4: ATTRASSIGN %self->sql template[2.5,] 
		 5: 
		 6: HASH- def_%v_4 
		 7: ATTRASSIGN %self->sections %v_4[4.6,] 
		 8: 
		 9: ATTRASSIGN %self->klass klass[3.0,2.6,] 
		 10: RETURN klass[3.0,2.6,] %self[4.2,4.4,4.7,4.9,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = secure_category instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_secure_category_ids 
		 6: RECEIVECONSTARG def_category_alias 
		 7: category_alias[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "c" def_%v_3 
		 1: COPY TYPE_PASS def_category_alias %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: secure_category_ids->present? def_%v_4 secure_category_ids[2.5,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_4[4.1,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "NOT COALESCE(" def_%v_5 
		 2: %v_5-><< def_%v_6 %v_5[5.1,] category_alias[3.1,2.6,] 	 SYMBOL:	 ARGS:category_alias,
		 3: COPY TYPE_StringLiteral ".read_restricted, false) OR " def_%v_7 
		 4: %v_6-><< def_%v_8 %v_6[5.2,] %v_7[5.3,] 	 SYMBOL:	 ARGS:%v_7,
		 5: %v_8-><< def_%v_9 %v_8[5.4,] category_alias[3.1,2.6,] 	 SYMBOL:	 ARGS:category_alias,
		 6: COPY TYPE_StringLiteral ".id IN (:secure_category_ids)" def_%v_10 
		 7: %v_9-><< def_%v_11 %v_9[5.5,] %v_10[5.6,] 	 SYMBOL:	 ARGS:%v_10,
		 8: HASH-secure_category_ids- def_%v_12 secure_category_ids[2.5,] 
		 9: %self->where def_%v_13 %self[2.0,] %v_11[5.7,] %v_12[5.8,] 	 SYMBOL:	 ARGS:%v_11,%v_12,
		 10: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "NOT COALESCE(" def_%v_14 
		 2: %v_14-><< def_%v_15 %v_14[6.1,] category_alias[3.1,2.6,] 	 SYMBOL:	 ARGS:category_alias,
		 3: COPY TYPE_StringLiteral ".read_restricted, false)" def_%v_16 
		 4: %v_15-><< def_%v_17 %v_15[6.2,] %v_16[6.3,] 	 SYMBOL:	 ARGS:%v_16,
		 5: %self->where def_%v_18 %self[2.0,] %v_17[6.4,] 	 SYMBOL:	 ARGS:%v_17,
		 6: COPY TYPE_PASS def_%v_13 %v_18[6.5,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_sql instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->sql def_%v_3 %self[2.0,] 
		 7: %v_3->dup def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_PASS def_sql %v_4[2.7,] 
		 9: 
		 10: GETFIELD %self->sections def_%v_5 %self[2.0,] 
		 11: %v_5->each def_%v_6 %v_5[2.10,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_5,
CLOSURE BEGIN: k[] v[] %self[2.0,] c[] item[] sql[2.8,] joined[] 
BB 1
	outgoing: 26 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_k 
		 3: RECEIVEARG def_v 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 13 24 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Nil def_joined 
		 2: 
		 3: def_%cl_1_4 k[2.2,] 
		 4: BRANCH %cl_1_4[3.3,] 
BB 4
	outgoing: 5 14 24 
	datadep: 
	instructions:
		 0: def_%cl_1_5 k[2.2,] 
		 1: BRANCH %cl_1_5[4.0,] 
BB 5
	outgoing: 6 15 24 
	datadep: 
	instructions:
		 0: def_%cl_1_6 k[2.2,] 
		 1: BRANCH %cl_1_6[5.0,] 
BB 6
	outgoing: 7 16 24 
	datadep: 
	instructions:
		 0: def_%cl_1_7 k[2.2,] 
		 1: BRANCH %cl_1_7[6.0,] 
BB 7
	outgoing: 8 17 24 
	datadep: 
	instructions:
		 0: def_%cl_1_8 k[2.2,] 
		 1: BRANCH %cl_1_8[7.0,] 
BB 8
	outgoing: 9 18 24 
	datadep: 
	instructions:
		 0: def_%cl_1_9 k[2.2,] 
		 1: BRANCH %cl_1_9[8.0,] 
BB 9
	outgoing: 10 19 24 
	datadep: 
	instructions:
		 0: def_%cl_1_10 k[2.2,] 
		 1: BRANCH %cl_1_10[9.0,] 
BB 10
	outgoing: 11 20 24 
	datadep: 
	instructions:
		 0: def_%cl_1_11 k[2.2,] 
		 1: BRANCH %cl_1_11[10.0,] 
BB 11
	outgoing: 12 21 24 
	datadep: 
	instructions:
		 0: def_%cl_1_12 k[2.2,] 
		 1: BRANCH %cl_1_12[11.0,] 
BB 12
	outgoing: 23 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_3 
		 1: 
BB 13
	outgoing: 23 24 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "SELECT " def_%cl_1_13 
		 2: COPY TYPE_StringLiteral " , " def_%cl_1_14 
		 3: v->join def_%cl_1_15 v[2.3,] %cl_1_14[13.2,] 	 SYMBOL:	 ARGS:%cl_1_14,
		 4: %cl_1_13-><< def_%cl_1_16 %cl_1_13[13.1,] %cl_1_15[13.3,] 	 SYMBOL:	 ARGS:%cl_1_15,
		 5: COPY TYPE_PASS def_joined %cl_1_16[13.4,] 
		 6: COPY TYPE_PASS def_%cl_1_3 %cl_1_16[13.4,] 
		 7: 
BB 14
	outgoing: 23 24 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "WHERE " def_%cl_1_17 
		 2: v->map def_%cl_1_18 v[2.3,] %self[2.0,] 	 SYMBOL:	 ARGS:v,
CLOSURE BEGIN: c[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_c 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "(" def_%cl_2_3 
		 2: %cl_2_3-><< def_%cl_2_4 %cl_2_3[3.1,] c[2.2,] 	 SYMBOL:	 ARGS:c,
		 3: COPY TYPE_StringLiteral ")" def_%cl_2_5 
		 4: %cl_2_4-><< def_%cl_2_6 %cl_2_4[3.2,] %cl_2_5[3.3,] 	 SYMBOL:	 ARGS:%cl_2_5,
		 5: RETURN %cl_2_6[3.4,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_7 
		 1: def_%cl_2_8 %cl_2_7[4.0,] 
		 2: RETURN %cl_2_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: COPY TYPE_StringLiteral " AND " def_%cl_1_19 
		 4: %cl_1_18->join def_%cl_1_20 %cl_1_18[14.2,] %cl_1_19[14.3,] 	 SYMBOL:	 ARGS:%cl_1_19,
		 5: %cl_1_17-><< def_%cl_1_21 %cl_1_17[14.1,] %cl_1_20[14.4,] 	 SYMBOL:	 ARGS:%cl_1_20,
		 6: COPY TYPE_PASS def_joined %cl_1_21[14.5,] 
		 7: COPY TYPE_PASS def_%cl_1_3 %cl_1_21[14.5,] 
		 8: 
BB 15
	outgoing: 23 24 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "WHERE " def_%cl_1_22 
		 1: v->map def_%cl_1_23 v[2.3,] %self[2.0,] 	 SYMBOL:	 ARGS:v,
CLOSURE BEGIN: c[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_c 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "(" def_%cl_3_3 
		 2: %cl_3_3-><< def_%cl_3_4 %cl_3_3[3.1,] c[2.2,] 	 SYMBOL:	 ARGS:c,
		 3: COPY TYPE_StringLiteral ")" def_%cl_3_5 
		 4: %cl_3_4-><< def_%cl_3_6 %cl_3_4[3.2,] %cl_3_5[3.3,] 	 SYMBOL:	 ARGS:%cl_3_5,
		 5: RETURN %cl_3_6[3.4,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_7 
		 1: def_%cl_3_8 %cl_3_7[4.0,] 
		 2: RETURN %cl_3_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: COPY TYPE_StringLiteral " AND " def_%cl_1_24 
		 3: %cl_1_23->join def_%cl_1_25 %cl_1_23[15.1,] %cl_1_24[15.2,] 	 SYMBOL:	 ARGS:%cl_1_24,
		 4: %cl_1_22-><< def_%cl_1_26 %cl_1_22[15.0,] %cl_1_25[15.3,] 	 SYMBOL:	 ARGS:%cl_1_25,
		 5: COPY TYPE_PASS def_joined %cl_1_26[15.4,] 
		 6: COPY TYPE_PASS def_%cl_1_3 %cl_1_26[15.4,] 
		 7: 
BB 16
	outgoing: 23 24 
	datadep: 
	instructions:
		 0: 
		 1: v->map def_%cl_1_27 v[2.3,] %self[2.0,] 	 SYMBOL:	 ARGS:v,
CLOSURE BEGIN: item[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_4_0 
		 2: RECEIVEARG def_item 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "JOIN " def_%cl_4_3 
		 2: %cl_4_3-><< def_%cl_4_4 %cl_4_3[3.1,] item[2.2,] 	 SYMBOL:	 ARGS:item,
		 3: RETURN %cl_4_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_4_5 
		 1: def_%cl_4_6 %cl_4_5[4.0,] 
		 2: RETURN %cl_4_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: COPY TYPE_StringLiteral "
" def_%cl_1_28 
		 3: %cl_1_27->join def_%cl_1_29 %cl_1_27[16.1,] %cl_1_28[16.2,] 	 SYMBOL:	 ARGS:%cl_1_28,
		 4: COPY TYPE_PASS def_joined %cl_1_29[16.3,] 
		 5: COPY TYPE_PASS def_%cl_1_3 %cl_1_29[16.3,] 
		 6: 
BB 17
	outgoing: 23 24 
	datadep: 
	instructions:
		 0: 
		 1: v->map def_%cl_1_30 v[2.3,] %self[2.0,] 	 SYMBOL:	 ARGS:v,
CLOSURE BEGIN: item[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_5_0 
		 2: RECEIVEARG def_item 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "LEFT JOIN " def_%cl_5_3 
		 2: %cl_5_3-><< def_%cl_5_4 %cl_5_3[3.1,] item[2.2,] 	 SYMBOL:	 ARGS:item,
		 3: RETURN %cl_5_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_5_5 
		 1: def_%cl_5_6 %cl_5_5[4.0,] 
		 2: RETURN %cl_5_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: COPY TYPE_StringLiteral "
" def_%cl_1_31 
		 3: %cl_1_30->join def_%cl_1_32 %cl_1_30[17.1,] %cl_1_31[17.2,] 	 SYMBOL:	 ARGS:%cl_1_31,
		 4: COPY TYPE_PASS def_joined %cl_1_32[17.3,] 
		 5: COPY TYPE_PASS def_%cl_1_3 %cl_1_32[17.3,] 
		 6: 
BB 18
	outgoing: 23 24 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "LIMIT " def_%cl_1_33 
		 2: v->last def_%cl_1_34 v[2.3,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_34->to_s def_%cl_1_35 %cl_1_34[18.2,] 	 SYMBOL:	 ARGS:
		 4: %cl_1_33-><< def_%cl_1_36 %cl_1_33[18.1,] %cl_1_35[18.3,] 	 SYMBOL:	 ARGS:%cl_1_35,
		 5: COPY TYPE_PASS def_joined %cl_1_36[18.4,] 
		 6: COPY TYPE_PASS def_%cl_1_3 %cl_1_36[18.4,] 
		 7: 
BB 19
	outgoing: 23 24 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "OFFSET " def_%cl_1_37 
		 2: v->last def_%cl_1_38 v[2.3,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_38->to_s def_%cl_1_39 %cl_1_38[19.2,] 	 SYMBOL:	 ARGS:
		 4: %cl_1_37-><< def_%cl_1_40 %cl_1_37[19.1,] %cl_1_39[19.3,] 	 SYMBOL:	 ARGS:%cl_1_39,
		 5: COPY TYPE_PASS def_joined %cl_1_40[19.4,] 
		 6: COPY TYPE_PASS def_%cl_1_3 %cl_1_40[19.4,] 
		 7: 
BB 20
	outgoing: 23 24 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "ORDER BY " def_%cl_1_41 
		 2: COPY TYPE_StringLiteral " , " def_%cl_1_42 
		 3: v->join def_%cl_1_43 v[2.3,] %cl_1_42[20.2,] 	 SYMBOL:	 ARGS:%cl_1_42,
		 4: %cl_1_41-><< def_%cl_1_44 %cl_1_41[20.1,] %cl_1_43[20.3,] 	 SYMBOL:	 ARGS:%cl_1_43,
		 5: COPY TYPE_PASS def_joined %cl_1_44[20.4,] 
		 6: COPY TYPE_PASS def_%cl_1_3 %cl_1_44[20.4,] 
		 7: 
BB 21
	outgoing: 23 24 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "SET " def_%cl_1_45 
		 2: COPY TYPE_StringLiteral " , " def_%cl_1_46 
		 3: v->join def_%cl_1_47 v[2.3,] %cl_1_46[21.2,] 	 SYMBOL:	 ARGS:%cl_1_46,
		 4: %cl_1_45-><< def_%cl_1_48 %cl_1_45[21.1,] %cl_1_47[21.3,] 	 SYMBOL:	 ARGS:%cl_1_47,
		 5: COPY TYPE_PASS def_joined %cl_1_48[21.4,] 
		 6: COPY TYPE_PASS def_%cl_1_3 %cl_1_48[21.4,] 
		 7: 
BB 23
	outgoing: 24 26 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "/*" def_%cl_1_49 
		 2: COPY TYPE_StringLiteral "*/" def_%cl_1_50 
		 3: BUILDSTRING def_%cl_1_51 %cl_1_49[23.1,] k[2.2,] %cl_1_50[23.2,] 
		 4: sql->sub! def_%cl_1_52 sql[] %cl_1_51[23.3,] joined[13.5,14.6,15.5,16.4,17.4,18.5,19.5,20.5,21.5,3.1,] 	 SYMBOL:	 ARGS:%cl_1_51,joined,
		 5: RETURN %cl_1_52[23.4,] %self[2.0,] 
BB 24
	outgoing: 26 
	datadep: 
	instructions:
		 0: def_%cl_1_53 
		 1: def_%cl_1_54 %cl_1_53[24.0,] 
		 2: RETURN %cl_1_54[24.1,] %self[2.0,] 
BB 26
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: v[2.3,] joined[13.5,14.6,15.5,16.4,17.4,18.5,19.5,20.5,21.5,3.1,] 
		 12: 
		 13: RETURN sql[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = exec instanceMethod = true
BB 1
	outgoing: 17 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_args 
		 6: args[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_args %v_3[3.0,] 
BB 4
	outgoing: 5 8 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->args def_%v_4 %self[2.0,] 
		 2: %v_4->merge! def_%v_5 %v_4[4.1,] args[3.1,2.5,] 	 SYMBOL:	 ARGS:args,
		 3: 
		 4: %self->to_sql def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 5: COPY TYPE_PASS def_sql %v_6[4.4,] 
		 6: 
		 7: 
		 8: GETFIELD %self->klass def_%v_7 %self[4.4,2.0,] 
		 9: BRANCH %v_7[4.8,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: GETFIELD %self->klass def_%v_8 %self[2.0,] 
		 1: (ActiveRecord) def_%v_9 
		 2: (inherit Base) def_%v_10 %v_9[5.1,] 
		 3: %v_10[5.2,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %v_9->const_missing def_%v_10 %v_9[5.1,] 	 SYMBOL:Base,	 ARGS:Symbol,
BB 7
	outgoing: 17 
	datadep: 
	instructions:
		 0: GETFIELD %self->args def_%v_11 %self[2.0,] 
		 1: COPY TYPE_Array def_%v_12 sql[4.5,] %v_11[7.0,] 
		 2: %v_10->send def_%v_13 %v_10[6.0,5.2,] %v_12[7.1,] 	 SYMBOL:sanitize_sql_array,	 ARGS:Symbol,%v_12,
		 3: %v_8->find_by_sql def_%v_14 %v_8[5.0,] %v_13[7.2,] 	 SYMBOL:	 ARGS:%v_13,
		 4: RETURN %v_14[7.3,] %self[2.0,] 
BB 8
	outgoing: 9 12 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->args def_%v_15 %self[2.0,] 
		 2: HASH- def_%v_16 
		 3: %v_15->== def_%v_17 %v_15[8.1,] %v_16[8.2,] 	 SYMBOL:	 ARGS:%v_16,
		 4: BRANCH %v_17[8.3,] 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: 
		 1: (ActiveRecord) def_%v_18 
		 2: (inherit Base) def_%v_19 %v_18[9.1,] 
		 3: %v_19[9.2,] 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: %v_18->const_missing def_%v_19 %v_18[9.1,] 	 SYMBOL:Base,	 ARGS:Symbol,
BB 11
	outgoing: 15 
	datadep: 
	instructions:
		 0: %v_19->exec_sql def_%v_20 %v_19[10.0,9.2,] sql[4.5,] 	 SYMBOL:	 ARGS:sql,
		 1: 
BB 12
	outgoing: 13 14 
	datadep: 
	instructions:
		 0: 
		 1: (ActiveRecord) def_%v_21 
		 2: (inherit Base) def_%v_22 %v_21[12.1,] 
		 3: %v_22[12.2,] 
BB 13
	outgoing: 14 
	datadep: 
	instructions:
		 0: %v_21->const_missing def_%v_22 %v_21[12.1,] 	 SYMBOL:Base,	 ARGS:Symbol,
BB 14
	outgoing: 15 
	datadep: 
	instructions:
		 0: GETFIELD %self->args def_%v_23 %self[2.0,] 
		 1: %v_22->exec_sql def_%v_24 %v_22[13.0,12.2,] sql[4.5,] %v_23[14.0,] 	 SYMBOL:	 ARGS:sql,%v_23,
		 2: COPY TYPE_PASS def_%v_20 %v_24[14.1,] 
BB 15
	outgoing: 17 
	datadep: 
	instructions:
		 0: RETURN %v_20[14.2,11.0,] %self[2.0,] 
BB 17
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = map_exec instanceMethod = false
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_klass 
		 6: RECEIVEARG def_sql 
		 7: RECEIVECONSTARG def_args 
		 8: args[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_args %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->new def_%v_4 %self[2.0,] sql[2.6,] 	 SYMBOL:	 ARGS:sql,
		 2: %v_4->map_exec def_%v_5 %v_4[4.1,] klass[2.5,] args[3.1,2.7,] 	 SYMBOL:	 ARGS:klass,args,
		 3: RETURN %v_5[4.2,] %self[4.1,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = decode instanceMethod = true
BB 1
	outgoing: 22 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_string 
		 6: RECEIVECONSTARG def_tuple 
		 7: tuple[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_tuple 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: RECEIVECONSTARG def_field 
		 1: field[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_field 
BB 6
	outgoing: 7 16 
	datadep: 
	instructions:
		 0: 
		 1: (Rails) def_%v_3 
		 2: %v_3->version def_%v_4 %v_3[6.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_StringLiteral "4.2.0" def_%v_5 
		 4: %v_4->>= def_%v_6 %v_4[6.2,] %v_5[6.3,] 	 SYMBOL:	 ARGS:%v_5,
		 5: BRANCH %v_6[6.4,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_8 %self[2.0,] 
		 2: COPY TYPE_PASS def_%v_7 %v_8[7.1,] 
		 3: %v_8[7.1,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: GETFIELD %self->caster def_%v_9 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_7 %v_9[8.0,] 
BB 9
	outgoing: 10 15 
	datadep: 
	instructions:
		 0: BRANCH %v_7[8.1,7.2,] 
BB 10
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: (ActiveRecord) def_%v_10 
		 1: (inherit Type) def_%v_11 %v_10[10.0,] 
		 2: %v_11[10.1,] 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: %v_10->const_missing def_%v_11 %v_10[10.0,] 	 SYMBOL:Type,	 ARGS:Symbol,
BB 12
	outgoing: 13 14 
	datadep: 
	instructions:
		 0: (inherit DateTime) def_%v_12 %v_11[11.0,10.1,] 
		 1: %v_12[12.0,] 
BB 13
	outgoing: 14 
	datadep: 
	instructions:
		 0: %v_11->const_missing def_%v_12 %v_11[11.0,10.1,] 	 SYMBOL:DateTime,	 ARGS:Symbol,
BB 14
	outgoing: 15 
	datadep: 
	instructions:
		 0: %v_12->new def_%v_13 %v_12[13.0,12.0,] 	 SYMBOL:	 ARGS:
		 1: ATTRASSIGN %self->caster %v_13[14.0,] 
		 2: COPY TYPE_PASS def_%v_9 %v_13[14.0,] 
BB 15
	outgoing: 22 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->caster def_%v_14 %self[14.1,2.0,] 
		 2: %v_14->type_cast_from_database def_%v_15 %v_14[15.1,] string[2.5,] 	 SYMBOL:	 ARGS:string,
		 3: RETURN %v_15[15.2,] %self[14.1,2.0,] 
BB 16
	outgoing: 17 18 
	datadep: 
	instructions:
		 0: 
		 1: (ActiveRecord) def_%v_16 
		 2: (inherit ConnectionAdapters) def_%v_17 %v_16[16.1,] 
		 3: %v_17[16.2,] 
BB 17
	outgoing: 18 
	datadep: 
	instructions:
		 0: %v_16->const_missing def_%v_17 %v_16[16.1,] 	 SYMBOL:ConnectionAdapters,	 ARGS:Symbol,
BB 18
	outgoing: 19 20 
	datadep: 
	instructions:
		 0: (inherit Column) def_%v_18 %v_17[17.0,16.2,] 
		 1: %v_18[18.0,] 
BB 19
	outgoing: 20 
	datadep: 
	instructions:
		 0: %v_17->const_missing def_%v_18 %v_17[17.0,16.2,] 	 SYMBOL:Column,	 ARGS:Symbol,
BB 20
	outgoing: 22 
	datadep: 
	instructions:
		 0: %v_18->string_to_time def_%v_19 %v_18[19.0,18.0,] string[2.5,] 	 SYMBOL:	 ARGS:string,
		 1: RETURN %v_19[20.0,] %self[2.0,] 
BB 22
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_connection 
		 6: 
		 7: %self->super def_%v_3 connection[2.5,] %v_0[2.1,] 	 SYMBOL:	 ARGS:connection,
		 8: 
		 9: %self->rm_coder def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:Fixnum,Fixnum,
		 10: 
		 11: (RailsDateTimeDecoder) def_%v_5 
		 12: COPY TYPE_StringLiteral "timestamp" def_%v_6 
		 13: HASH-name-oid-format- def_%v_7 %v_6[2.12,] 
		 14: %v_5->new def_%v_8 %v_5[2.11,] %v_7[2.13,] 	 SYMBOL:	 ARGS:%v_7,
		 15: %self->add_coder def_%v_9 %self[2.0,2.9,] %v_8[2.14,] 	 SYMBOL:	 ARGS:%v_8,
		 16: 
		 17: (PG) def_%v_10 
		 18: (inherit TypeMapInRuby) def_%v_11 %v_10[2.17,] 
		 19: %v_11[2.18,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_10->const_missing def_%v_11 %v_10[2.17,] 	 SYMBOL:TypeMapInRuby,	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_11->new def_%v_12 %v_11[3.0,2.18,] 	 SYMBOL:	 ARGS:
		 1: ATTRASSIGN %self->default_type_map %v_12[4.0,] 
		 2: RETURN %v_12[4.0,] %self[4.1,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = pg_type_map instanceMethod = false
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (ActiveRecord) def_%v_3 
		 7: (inherit Base) def_%v_4 %v_3[2.6,] 
		 8: %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.6,] 	 SYMBOL:Base,	 ARGS:Symbol,
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: %v_4->connection def_%v_5 %v_4[3.0,2.7,] 	 SYMBOL:	 ARGS:
		 1: %v_5->raw_connection def_%v_6 %v_5[4.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_conn %v_6[4.1,] 
		 3: 
		 4: def_%v_8 %self[2.0,] 
		 5: COPY TYPE_PASS def_%v_7 %v_8[4.4,] 
		 6: %v_8[4.4,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: GETFIELD %self->typemap def_%v_9 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_7 %v_9[5.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: BRANCH %v_7[5.1,4.5,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: (ActiveRecordTypeMap) def_%v_10 
		 1: %v_10->new def_%v_11 %v_10[7.0,] conn[4.2,] 	 SYMBOL:	 ARGS:conn,
		 2: ATTRASSIGN %self->typemap %v_11[7.1,] 
		 3: RETURN %v_11[7.1,] %self[7.2,2.0,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %v_9[5.0,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = map_exec instanceMethod = true
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 8 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_klass 
		 6: klass[2.5,] 
BB 4
	outgoing: 5 8 
	datadep: 
	instructions:
		 0: (OpenStruct) def_%v_3 
		 1: COPY TYPE_PASS def_klass %v_3[4.0,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: RECEIVECONSTARG def_args 
		 1: args[5.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: HASH- def_%v_4 
		 1: COPY TYPE_PASS def_args %v_4[6.0,] 
BB 7
	outgoing: 8 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->exec def_%v_5 %self[2.0,] args[6.1,5.0,] 	 SYMBOL:	 ARGS:args,
		 2: COPY TYPE_PASS def_results %v_5[7.1,] 
		 3: 
		 4: (SqlBuilder) def_%v_6 
		 5: %v_6->pg_type_map def_%v_7 %v_6[7.4,] 	 SYMBOL:	 ARGS:
		 6: ATTRASSIGN results->type_map %v_7[7.5,] 
		 7: 
		 8: results->fields def_%v_8 results[7.2,7.6,] 	 SYMBOL:	 ARGS:
		 9: %v_8->each_with_index def_%v_9 %v_8[7.8,] 	 SYMBOL:	 ARGS:
		 10: %v_9->map def_%v_10 %v_9[7.9,] %self[7.1,2.0,] 	 SYMBOL:	 ARGS:%v_9,
CLOSURE BEGIN: f[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_f 
		 3: RECEIVEARG def_index 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: f->dup def_%cl_1_3 f[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "=" def_%cl_1_4 
		 3: %cl_1_3-><< def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: RETURN %cl_1_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: index[2.3,] 
		 11: COPY TYPE_PASS def_setters %v_10[7.10,] 
		 12: 
		 13: results->values def_%v_11 results[7.2,7.6,7.8,] 	 SYMBOL:	 ARGS:
		 14: COPY TYPE_PASS def_values %v_11[7.13,] 
		 15: 
		 16: %v_11->map! def_%v_12 %v_11[7.13,] %self[7.1,2.0,] 	 SYMBOL:	 ARGS:%v_11,
CLOSURE BEGIN: klass[4.1,2.5,] setters[7.11,] %self[7.1,2.0,] row[] index[7.10,] mapped[] name[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_row 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: klass->new def_%cl_2_3 klass[] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_mapped %cl_2_3[3.1,] 
		 3: 
		 4: setters->each_with_index def_%cl_2_4 setters[] %self[2.0,] 	 SYMBOL:	 ARGS:setters,
CLOSURE BEGIN: row[2.2,] index[] mapped[3.2,] name[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_name 
		 3: RECEIVEARG def_index 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: row->[] def_%cl_3_3 row[] index[2.3,] 	 SYMBOL:	 ARGS:index,
		 2: mapped->send def_%cl_3_4 mapped[] name[2.2,] %cl_3_3[3.1,] 	 SYMBOL:	 ARGS:name,%cl_3_3,
		 3: RETURN %cl_3_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_5 
		 1: def_%cl_3_6 %cl_3_5[4.0,] 
		 2: RETURN %cl_3_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: index[2.3,] 
		 5: 
		 6: RETURN mapped[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: mapped[3.2,] 
		 17: RETURN %v_12[7.16,] %self[7.1,2.0,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: def_%v_13 
		 1: def_%v_14 %v_13[8.0,] 
		 2: RETURN %v_14[8.1,] %self[2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = sql_builder instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_template 
		 6: 
		 7: (SqlBuilder) def_%v_3 
		 8: %v_3->new def_%v_4 %v_3[2.7,] template[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:template,%self,
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

