SET IRMethod, name = events instanceMethod = false
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->events def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: (Hash) def_%v_6 
		 1: %v_6->new def_%v_7 %v_6[5.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_6,
CLOSURE BEGIN: hash[] key[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_hash 
		 3: RECEIVEARG def_key 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (Set) def_%cl_1_3 
		 2: %cl_1_3->new def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: ATTRASSIGN hash->[] key[2.3,] %cl_1_4[3.2,] 
		 4: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: key[2.3,] 
		 2: ATTRASSIGN %self->events %v_7[5.1,] 
		 3: RETURN %v_7[5.1,] %self[5.2,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = trigger instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_event_name 
		 6: RECEIVEARG def_params 
		 7: 
		 8: %self->events def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 9: %v_3->[] def_%v_4 %v_3[2.8,] event_name[2.5,] 	 SYMBOL:	 ARGS:event_name,
		 10: %v_4->each def_%v_5 %v_4[2.9,] %self[2.0,2.8,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: params[2.6,] event[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_event 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_3 params[] 
		 2: event->call def_%cl_1_4 event[2.2,] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:Splat,
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: RETURN %v_5[2.10,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = on instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_event_name 
		 6: def_%v_3 
		 7: def_block %v_3[2.6,] 
		 8: 
		 9: %self->events def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 10: %v_4->[] def_%v_5 %v_4[2.9,] event_name[2.5,] 	 SYMBOL:	 ARGS:event_name,
		 11: %v_5-><< def_%v_6 %v_5[2.10,] block[2.7,] 	 SYMBOL:	 ARGS:block,
		 12: RETURN %v_6[2.11,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = off instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_event_name 
		 6: def_%v_3 
		 7: def_block %v_3[2.6,] 
		 8: 
		 9: %self->events def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 10: %v_4->[] def_%v_5 %v_4[2.9,] event_name[2.5,] 	 SYMBOL:	 ARGS:event_name,
		 11: %v_5->delete def_%v_6 %v_5[2.10,] block[2.7,] 	 SYMBOL:	 ARGS:block,
		 12: RETURN %v_6[2.11,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = clear instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: ATTRASSIGN %self->events 
		 7: RETURN %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

