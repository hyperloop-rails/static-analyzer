SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_members 
		 6: 
		 7: HASH- def_%v_3 
		 8: %self->super def_%v_4 %v_3[2.7,] %v_0[2.1,] 	 SYMBOL:	 ARGS:%v_3,
		 9: 
		 10: members->[] def_%v_5 members[2.5,] 	 SYMBOL:	 ARGS:Fixnum,
		 11: (Hash) def_%v_6 
		 12: %v_5->is_a? def_%v_7 %v_5[2.10,] %v_6[2.11,] 	 SYMBOL:	 ARGS:%v_6,
		 13: BRANCH %v_7[2.12,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: (Hash) def_%v_8 
		 2: members->[] def_%v_9 members[2.5,] 	 SYMBOL:	 ARGS:Fixnum,
		 3: %v_8->[] def_%v_10 %v_8[3.1,] %v_9[3.2,] 	 SYMBOL:	 ARGS:%v_9,
		 4: %self->update def_%v_11 %self[2.0,] %v_10[3.3,] 	 SYMBOL:	 ARGS:%v_10,
		 5: RETURN %v_11[3.4,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: members->extract_options! def_%v_12 members[2.5,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_options %v_12[4.1,] 
		 3: 
		 4: %v_12->fetch def_%v_13 %v_12[4.1,] %self[2.0,] 	 SYMBOL:start,	 ARGS:Symbol,%v_12,
CLOSURE BEGIN: 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 5: COPY TYPE_PASS def_start %v_13[4.4,] 
		 6: 
		 7: (Hash) def_%v_14 
		 8: members->count def_%v_16 members[4.1,2.5,] 	 SYMBOL:	 ARGS:
		 9: %v_16->+ def_%v_17 %v_16[4.8,] start[4.5,] 	 SYMBOL:	 ARGS:start,
		 10: CONSTANT def_%v_15 start[4.5,] %v_17[4.9,] 
		 11: members->zip def_%v_18 members[4.1,4.8,2.5,] %v_15[4.10,] 	 SYMBOL:	 ARGS:%v_15,
		 12: %v_14->[] def_%v_19 %v_14[4.7,] %v_18[4.11,] 	 SYMBOL:	 ARGS:%v_18,
		 13: %self->update def_%v_20 %self[2.0,] %v_19[4.12,] 	 SYMBOL:	 ARGS:%v_19,
		 14: RETURN %v_20[4.13,] %self[4.13,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = [] instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_id_or_value 
		 6: 
		 7: %self->fetch def_%v_3 %self[2.0,] id_or_value[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:id_or_value,%self,
CLOSURE BEGIN: %self[2.0,] id_or_value[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->key def_%cl_1_3 %self[2.0,] id_or_value[] 	 SYMBOL:	 ARGS:id_or_value,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_3[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = valid? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_member 
		 6: 
		 7: %self->has_key? def_%v_3 %self[2.0,] member[2.5,] 	 SYMBOL:	 ARGS:member,
		 8: RETURN %v_3[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = only instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_keys 
		 6: 
		 7: %self->dup def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->tap def_%v_4 %v_3[2.7,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: d[] %self[2.0,2.7,] keys[2.5,] k[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_d 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: d->keep_if def_%cl_1_3 d[2.2,] %self[2.0,] 	 SYMBOL:	 ARGS:d,
CLOSURE BEGIN: keys[] k[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_k 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: keys->include? def_%cl_2_3 keys[] k[2.2,] 	 SYMBOL:	 ARGS:k,
		 2: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: RETURN %v_4[2.8,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = except instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_keys 
		 6: 
		 7: %self->dup def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->tap def_%v_4 %v_3[2.7,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: d[] %self[2.0,2.7,] keys[2.5,] k[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_d 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: d->delete_if def_%cl_1_3 d[2.2,] %self[2.0,] 	 SYMBOL:	 ARGS:d,
CLOSURE BEGIN: keys[] k[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_k 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: keys->include? def_%cl_2_3 keys[] k[2.2,] 	 SYMBOL:	 ARGS:k,
		 2: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: RETURN %v_4[2.8,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

