SET IRMethod, name = watch instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_pattern 
		 6: def_%v_3 
		 7: def_blk %v_3[2.6,] 
		 8: 
		 9: (WATCHERS) def_%v_4 
		 10: ATTRASSIGN %v_4->[] pattern[2.5,] blk[2.7,] 
		 11: RETURN blk[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = watchers instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (WATCHERS) def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reload instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_pattern 
		 6: 
		 7: (RELOADERS) def_%v_3 
		 8: %v_3-><< def_%v_4 %v_3[2.7,] pattern[2.5,] 	 SYMBOL:	 ARGS:pattern,
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reloaders instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (RELOADERS) def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->ensure_phantomjs_is_installed def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = start instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->port def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %self->port_available? def_%v_4 %self[2.0,2.6,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: %self->start_rails_server def_%v_13 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: 
		 4: ATTRASSIGN %self->running 
		 5: RETURN %self[3.2,3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "Port " def_%v_6 
		 2: %self->port def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_StringLiteral " is not available" def_%v_8 
		 4: BUILDSTRING def_%v_9 %v_6[4.1,] %v_7[4.2,] %v_8[4.3,] 
		 5: %self->puts def_%v_10 %self[4.2,2.0,] %v_9[4.4,] 	 SYMBOL:	 ARGS:%v_9,
		 6: 
		 7: COPY TYPE_StringLiteral "Either kill the process using that port or use the `TEST_SERVER_PORT` environment variable" def_%v_11 
		 8: %self->puts def_%v_12 %self[4.2,4.5,2.0,] %v_11[4.7,] 	 SYMBOL:	 ARGS:%v_11,
		 9: 
		 10: RETURN %self[4.2,4.5,4.8,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = running? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->running def_%v_3 %self[2.0,] 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = run instanceMethod = true
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_specs 
		 6: 
		 7: COPY TYPE_StringLiteral "Running Qunit: " def_%v_3 
		 8: BUILDSTRING def_%v_4 %v_3[2.7,] specs[2.5,] 
		 9: %self->puts def_%v_5 %self[2.0,] %v_4[2.8,] 	 SYMBOL:	 ARGS:%v_4,
		 10: 
		 11: %self->abort def_%v_6 %self[2.0,2.9,] 	 SYMBOL:	 ARGS:
		 12: 
		 13: COPY TYPE_StringLiteral "http://localhost:" def_%v_7 
		 14: %self->port def_%v_8 %self[2.0,2.9,2.11,] 	 SYMBOL:	 ARGS:
		 15: COPY TYPE_StringLiteral "/qunit" def_%v_9 
		 16: BUILDSTRING def_%v_10 %v_7[2.13,] %v_8[2.14,] %v_9[2.15,] 
		 17: COPY TYPE_PASS def_qunit_url %v_10[2.16,] 
		 18: 
		 19: COPY TYPE_StringLiteral "spec" def_%v_11 
		 20: specs->!= def_%v_12 specs[2.5,] %v_11[2.19,] 	 SYMBOL:	 ARGS:%v_11,
		 21: BRANCH %v_12[2.20,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: specs->split def_%v_13 specs[2.5,2.20,] 	 SYMBOL:	 ARGS:
		 1: %v_13->length def_%v_14 %v_13[3.0,] 	 SYMBOL:	 ARGS:
		 2: %v_14->== def_%v_15 %v_14[3.1,] 	 SYMBOL:	 ARGS:Fixnum,
		 3: COPY TYPE_PASS def_%v_12 %v_15[3.2,] 
BB 4
	outgoing: 5 9 
	datadep: 
	instructions:
		 0: BRANCH %v_12[3.3,2.20,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: specs->strip def_%v_16 specs[2.5,2.20,] 	 SYMBOL:	 ARGS:
		 2: %self->try_to_find_module_name def_%v_17 %self[2.0,] %v_16[5.1,] 	 SYMBOL:	 ARGS:%v_16,
		 3: COPY TYPE_PASS def_module_name %v_17[5.2,] 
		 4: 
		 5: BRANCH %v_17[5.2,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "?module=" def_%v_18 
		 1: BUILDSTRING def_%v_19 %v_18[6.0,] module_name[5.3,] 
		 2: qunit_url-><< def_%v_20 qunit_url[2.17,] %v_19[6.1,] 	 SYMBOL:	 ARGS:%v_19,
		 3: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_20 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_20 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "phantomjs " def_%v_21 
		 2: (Rails) def_%v_22 
		 3: %v_22->root def_%v_23 %v_22[10.2,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_StringLiteral "/lib/autospec/run-qunit.js "" def_%v_24 
		 5: COPY TYPE_StringLiteral """ def_%v_25 
		 6: BUILDSTRING def_%v_26 %v_21[10.1,] %v_23[10.3,] %v_24[10.4,] qunit_url[2.17,] %v_25[10.5,] 
		 7: COPY TYPE_PASS def_cmd %v_26[10.6,] 
		 8: 
		 9: (Process) def_%v_27 
		 10: %v_27->spawn def_%v_28 %v_27[10.9,] %v_26[10.6,] 	 SYMBOL:	 ARGS:cmd,
		 11: ATTRASSIGN %self->pid %v_28[10.10,] 
		 12: 
		 13: (Process) def_%v_29 
		 14: GETFIELD %self->pid def_%v_30 %self[10.11,2.0,] 
		 15: %v_29->wait2 def_%v_31 %v_29[10.13,] %v_30[10.14,] 	 SYMBOL:	 ARGS:%v_30,
		 16: def_%v_32 %v_31[10.15,] 
		 17: def_%v_33 %v_32[10.16,] 
		 18: def_%v_34 %v_32[10.16,] 
		 19: COPY TYPE_PASS def__ %v_33[10.17,] 
		 20: COPY TYPE_PASS def_status %v_34[10.18,] 
		 21: 
		 22: %v_34->exitstatus def_%v_35 %v_34[10.18,] 	 SYMBOL:	 ARGS:
		 23: RETURN %v_35[10.22,] %self[10.11,2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reload instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->stop_rails_server def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: 
		 8: %self->sleep def_%v_4 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:Fixnum,
		 9: 
		 10: %self->start_rails_server def_%v_5 %self[2.0,2.6,2.8,] 	 SYMBOL:	 ARGS:
		 11: RETURN %v_5[2.10,] %self[2.0,2.6,2.8,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = abort instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: 
		 7: GETFIELD %self->pid def_%v_3 %self[2.0,] 
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: GETFIELD %self->pid def_%v_4 %self[2.0,] 
		 1: %self->children_processes def_%v_5 %self[2.0,] %v_4[3.0,] 	 SYMBOL:	 ARGS:%v_4,
		 2: %v_5->each def_%v_6 %v_5[3.1,] %self[3.1,2.0,] 	 SYMBOL:	 ARGS:%v_5,
CLOSURE BEGIN: %self[3.1,2.0,] pid[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_pid 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->kill_process def_%cl_1_3 %self[2.0,] pid[2.2,] 	 SYMBOL:	 ARGS:pid,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: 
		 4: GETFIELD %self->pid def_%v_7 %self[3.1,2.0,] 
		 5: %self->kill_process def_%v_8 %self[3.1,2.0,] %v_7[3.4,] 	 SYMBOL:	 ARGS:%v_7,
		 6: 
		 7: ATTRASSIGN %self->pid 
		 8: COPY TYPE_Nil def_%v_9 
		 9: RETURN %self[3.1,3.5,3.7,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = failed_specs instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 
		 7: COPY TYPE_PASS def_specs %v_3[2.6,] 
		 8: 
		 9: COPY TYPE_StringLiteral "./tmp/qunit_result" def_%v_4 
		 10: COPY TYPE_PASS def_path %v_4[2.9,] 
		 11: 
		 12: (File) def_%v_5 
		 13: %v_5->exist? def_%v_6 %v_5[2.12,] %v_4[2.9,] 	 SYMBOL:	 ARGS:path,
		 14: BRANCH %v_6[2.13,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: (File) def_%v_7 
		 1: %v_7->readlines def_%v_8 %v_7[3.0,] path[2.10,] 	 SYMBOL:	 ARGS:path,
		 2: COPY TYPE_PASS def_specs %v_8[3.1,] 
		 3: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_8 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: RETURN specs[3.2,2.7,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = stop instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->abort def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: 
		 8: %self->stop_rails_server def_%v_4 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 9: 
		 10: ATTRASSIGN %self->running 
		 11: RETURN %self[2.0,2.6,2.8,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ensure_phantomjs_is_installed instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "command -v phantomjs >/dev/null;" def_%v_3 
		 7: %self->system def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: RETURN %v_5[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: (PhantomJsNotInstalled) def_%v_6 
		 1: %v_6->new def_%v_7 %v_6[4.0,] 	 SYMBOL:	 ARGS:
		 2: %self->raise def_%v_8 %self[2.0,] %v_7[4.1,] 	 SYMBOL:	 ARGS:%v_7,
		 3: RETURN %v_8[4.2,] %self[4.2,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = port_available? instanceMethod = true
BB 1
	outgoing: 14 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_port 
		 6: GLOBALVAR $! def_%v_3 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: (TCPServer) def_%v_6 
		 3: %v_6->open def_%v_7 %v_6[4.2,] port[2.5,] 	 SYMBOL:	 ARGS:port,
		 4: %v_7->close def_%v_8 %v_7[4.3,] 	 SYMBOL:	 ARGS:
		 5: 
		 6: COPY TYPE_Boolean def_%v_5 
		 7: 
		 8: %v_3[2.6,] 
BB 5
	outgoing: 13 
	datadep: 
	instructions:
		 0: 
BB 6
	outgoing: 7 8 12 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_9 
		 2: (Errno) def_%v_10 
		 3: (inherit EADDRINUSE) def_%v_11 %v_10[6.2,] 
		 4: %v_11[6.3,] 
BB 7
	outgoing: 8 12 
	datadep: 
	instructions:
		 0: %v_10->const_missing def_%v_11 %v_10[6.2,] 	 SYMBOL:EADDRINUSE,	 ARGS:Symbol,
BB 8
	outgoing: 9 10 12 
	datadep: 
	instructions:
		 0: def_%v_12 %v_11[7.0,6.3,] %v_9[6.1,] 
		 1: BRANCH %v_12[8.0,] 
BB 9
	outgoing: 12 14 
	datadep: 
	instructions:
		 0: %v_9[6.1,] 
BB 10
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Boolean def_%v_5 
		 2: 
		 3: %v_3[2.6,] 
BB 11
	outgoing: 13 
	datadep: 
	instructions:
		 0: 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: def_%v_13 
		 1: def_%v_14 %v_13[12.0,] %v_3[2.6,] 
		 2: %v_13[12.0,] 
BB 13
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN %v_5[4.6,10.1,] %self[2.0,] 
BB 14
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = port instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->port def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 8 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: (ENV) def_%v_6 
		 1: COPY TYPE_StringLiteral "TEST_SERVER_PORT" def_%v_7 
		 2: %v_6->[] def_%v_8 %v_6[5.0,] %v_7[5.1,] 	 SYMBOL:	 ARGS:%v_7,
		 3: BRANCH %v_8[5.2,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Fixnum def_%v_8 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: ATTRASSIGN %self->port %v_8[6.0,5.2,] 
		 1: RETURN %v_8[6.0,5.2,] %self[7.0,2.0,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = start_rails_server instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Demon) def_%v_3 
		 7: (inherit RailsAutospec) def_%v_4 %v_3[2.6,] 
		 8: %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.6,] 	 SYMBOL:RailsAutospec,	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_4->start def_%v_5 %v_4[3.0,2.7,] 	 SYMBOL:	 ARGS:Fixnum,
		 1: RETURN %v_5[4.0,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = stop_rails_server instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Demon) def_%v_3 
		 7: (inherit RailsAutospec) def_%v_4 %v_3[2.6,] 
		 8: %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.6,] 	 SYMBOL:RailsAutospec,	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_4->stop def_%v_5 %v_4[3.0,2.7,] 	 SYMBOL:	 ARGS:
		 1: RETURN %v_5[4.0,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = children_processes instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_base 
		 6: base[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: (Process) def_%v_3 
		 1: %v_3->pid def_%v_4 %v_3[3.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_base %v_4[3.1,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: (Hash) def_%v_5 
		 2: %v_5->new def_%v_6 %v_5[4.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_5,
CLOSURE BEGIN: key[] hash[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_hash 
		 3: RECEIVEARG def_key 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%cl_1_3 key[2.3,] 
		 2: ATTRASSIGN hash->[] key[2.3,] %cl_1_3[3.1,] 
		 3: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: key[2.3,] 
		 3: COPY TYPE_PASS def_process_tree %v_6[4.2,] 
		 4: 
		 5: (Hash) def_%v_7 
		 6: def_%v_9 
		 7: COPY TYPE_Regexp def_%v_10 
		 8: %v_9->scan def_%v_11 %v_9[4.6,] 	 SYMBOL:	 ARGS:%v_10,
		 9: %v_11->map def_%v_12 %v_11[4.8,] 	 SYMBOL:to_i,	 ARGS:
		 10: def_%v_8 %v_12[4.9,] 
		 11: %v_7->[] def_%v_13 %v_7[4.5,] %v_8[4.10,] 	 SYMBOL:	 ARGS:Splat,
		 12: %v_13->each def_%v_14 %v_13[4.11,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_13,
CLOSURE BEGIN: process_tree[4.3,] ppid[] pid[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_pid 
		 3: RECEIVEARG def_ppid 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: process_tree->[] def_%cl_2_3 process_tree[] ppid[2.3,] 	 SYMBOL:	 ARGS:ppid,
		 2: process_tree->[] def_%cl_2_4 process_tree[3.1,] pid[2.2,] 	 SYMBOL:	 ARGS:pid,
		 3: %cl_2_3-><< def_%cl_2_5 %cl_2_3[3.1,] %cl_2_4[3.2,] 	 SYMBOL:	 ARGS:%cl_2_4,
		 4: RETURN %cl_2_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_6 
		 1: def_%cl_2_7 %cl_2_6[4.0,] 
		 2: RETURN %cl_2_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: ppid[2.3,] 
		 13: 
		 14: process_tree->[] def_%v_15 process_tree[4.3,] base[3.2,2.5,] 	 SYMBOL:	 ARGS:base,
		 15: %v_15->flatten def_%v_16 %v_15[4.14,] 	 SYMBOL:	 ARGS:
		 16: COPY TYPE_Array def_%v_17 base[3.2,2.5,] 
		 17: %v_16->- def_%v_18 %v_16[4.15,] %v_17[4.16,] 	 SYMBOL:	 ARGS:%v_17,
		 18: RETURN %v_18[4.17,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = kill_process instanceMethod = true
BB 1
	outgoing: 29 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_pid 
		 6: 
		 7: BRANCH pid[2.5,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_3 
		 1: 
		 2: GLOBALVAR $! def_%v_4 
BB 4
	outgoing: 29 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: (Process) def_%v_7 
		 2: COPY TYPE_StringLiteral "INT" def_%v_8 
		 3: %v_7->kill def_%v_9 %v_7[6.1,] %v_8[6.2,] pid[2.5,] 	 SYMBOL:	 ARGS:%v_8,pid,
		 4: COPY TYPE_PASS def_%v_6 %v_9[6.3,] 
		 5: 
		 6: %v_4[3.2,] 
BB 8
	outgoing: 14 
	datadep: 
	instructions:
		 0: 
BB 9
	outgoing: 10 11 13 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_10 
		 2: def_%v_11 %v_10[9.1,] 
		 3: BRANCH %v_11[9.2,] 
BB 10
	outgoing: 13 29 
	datadep: 
	instructions:
		 0: %v_10[9.1,] 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
		 1: 
		 2: %v_4[3.2,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: 
BB 13
	outgoing: 29 
	datadep: 
	instructions:
		 0: def_%v_12 
		 1: def_%v_13 %v_12[13.0,] %v_4[3.2,] 
		 2: %v_12[13.0,] 
BB 14
	outgoing: 15 
	datadep: 
	instructions:
		 0: 
BB 15
	outgoing: 17 
	datadep: 
	instructions:
		 0: GLOBALVAR $! def_%v_15 
BB 17
	outgoing: 18 19 
	datadep: 
	instructions:
		 0: 
		 1: (Process) def_%v_18 
		 2: %v_18->getpgid def_%v_19 %v_18[17.1,] pid[2.5,] 	 SYMBOL:	 ARGS:pid,
		 3: COPY TYPE_PASS def_%v_17 %v_19[17.2,] 
		 4: 
		 5: %v_15[15.0,] 
BB 18
	outgoing: 24 
	datadep: 
	instructions:
		 0: 
BB 19
	outgoing: 20 21 23 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_20 
		 2: def_%v_21 %v_20[19.1,] 
		 3: BRANCH %v_21[19.2,] 
BB 20
	outgoing: 23 29 
	datadep: 
	instructions:
		 0: %v_20[19.1,] 
BB 21
	outgoing: 22 23 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_17 
		 1: 
		 2: %v_15[15.0,] 
BB 22
	outgoing: 24 
	datadep: 
	instructions:
		 0: 
BB 23
	outgoing: 29 
	datadep: 
	instructions:
		 0: def_%v_22 
		 1: def_%v_23 %v_22[23.0,] %v_15[15.0,] 
		 2: %v_22[23.0,] 
BB 24
	outgoing: 25 27 
	datadep: 
	instructions:
		 0: BRANCH %v_17[17.3,21.0,] 
BB 25
	outgoing: 15 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: %self->sleep def_%v_24 %self[2.0,] 	 SYMBOL:	 ARGS:Float,
		 3: 
BB 27
	outgoing: 29 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 29
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = try_to_find_module_name instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_file 
		 6: 
		 7: (File) def_%v_3 
		 8: %v_3->exists? def_%v_4 %v_3[2.7,] file[2.5,] 	 SYMBOL:	 ARGS:file,
		 9: BRANCH %v_4[2.8,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: (File) def_%v_6 
		 2: COPY TYPE_StringLiteral "r" def_%v_7 
		 3: %v_6->open def_%v_8 %v_6[6.1,] file[2.5,] %v_7[6.2,] 	 SYMBOL:	 ARGS:file,%v_7,
		 4: %v_8->each_line def_%v_9 %v_8[6.3,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_8,
CLOSURE BEGIN: line[] m[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_line 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Regexp def_%cl_1_3 
		 2: line->match def_%cl_1_4 line[2.2,] 	 SYMBOL:	 ARGS:line,
		 3: COPY TYPE_PASS def_m %cl_1_4[3.2,] 
		 4: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: m->[] def_%cl_1_5 m[3.3,] 	 SYMBOL:	 ARGS:Fixnum,
		 2: 
		 3: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[7.0,] 
		 2: RETURN %cl_1_8[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: m[3.3,] 
		 5: RETURN %v_9[6.4,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%v_10 
		 1: def_%v_11 %v_10[7.0,] 
		 2: RETURN %v_11[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

