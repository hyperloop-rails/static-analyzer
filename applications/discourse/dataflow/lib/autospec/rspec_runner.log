SET IRMethod, name = watch instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_pattern 
		 6: def_%v_3 
		 7: def_blk %v_3[2.6,] 
		 8: 
		 9: (WATCHERS) def_%v_4 
		 10: ATTRASSIGN %v_4->[] pattern[2.5,] blk[2.7,] 
		 11: RETURN blk[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = watchers instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (WATCHERS) def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reload instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_pattern 
		 6: 
		 7: (RELOADERS) def_%v_3 
		 8: %v_3-><< def_%v_4 %v_3[2.7,] pattern[2.5,] 	 SYMBOL:	 ARGS:pattern,
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reloaders instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (RELOADERS) def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = failed_specs instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 
		 7: COPY TYPE_PASS def_specs %v_3[2.6,] 
		 8: 
		 9: COPY TYPE_StringLiteral "./tmp/rspec_result" def_%v_4 
		 10: COPY TYPE_PASS def_path %v_4[2.9,] 
		 11: 
		 12: (File) def_%v_5 
		 13: %v_5->exist? def_%v_6 %v_5[2.12,] %v_4[2.9,] 	 SYMBOL:	 ARGS:path,
		 14: BRANCH %v_6[2.13,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: (File) def_%v_7 
		 1: %v_7->readlines def_%v_8 %v_7[3.0,] path[2.10,] 	 SYMBOL:	 ARGS:path,
		 2: COPY TYPE_PASS def_specs %v_8[3.1,] 
		 3: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_8 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: RETURN specs[3.2,2.7,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

