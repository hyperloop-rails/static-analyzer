SET IRMethod, name = index instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (BadgeType) def_%v_3 
		 7: %v_3->all def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->order def_%v_5 %v_4[2.7,] 	 SYMBOL:id,	 ARGS:Symbol,
		 9: %v_5->to_a def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: (BadgeGrouping) def_%v_7 
		 11: %v_7->all def_%v_8 %v_7[2.10,] 	 SYMBOL:	 ARGS:
		 12: %v_8->order def_%v_9 %v_8[2.11,] 	 SYMBOL:position,	 ARGS:Symbol,
		 13: %v_9->to_a def_%v_10 %v_9[2.12,] 	 SYMBOL:	 ARGS:
		 14: (Badge) def_%v_11 
		 15: %v_11->includes def_%v_12 %v_11[2.14,] 	 SYMBOL:badge_grouping,	 ARGS:Symbol,
		 16: %v_12->references def_%v_13 %v_12[2.15,] 	 SYMBOL:badge_grouping,	 ARGS:Symbol,
		 17: COPY TYPE_StringLiteral "badge_groupings.position, badge_type_id, badges.name" def_%v_14 
		 18: %v_13->order def_%v_15 %v_13[2.16,] %v_14[2.17,] 	 SYMBOL:	 ARGS:%v_14,
		 19: %v_15->to_a def_%v_16 %v_15[2.18,] 	 SYMBOL:	 ARGS:
		 20: (Badge) def_%v_17 
		 21: %v_17->protected_system_fields def_%v_18 %v_17[2.20,] 	 SYMBOL:	 ARGS:
		 22: (Badge) def_%v_19 
		 23: %v_19->trigger_hash def_%v_20 %v_19[2.22,] 	 SYMBOL:	 ARGS:
		 24: HASH-badge_types-badge_groupings-badges-protected_system_fields-triggers- def_%v_21 %v_6[2.9,] %v_10[2.13,] %v_16[2.19,] %v_18[2.21,] %v_20[2.23,] 
		 25: COPY TYPE_PASS def_data %v_21[2.24,] 
		 26: 
		 27: (OpenStruct) def_%v_22 
		 28: %v_22->new def_%v_23 %v_22[2.27,] %v_21[2.24,] 	 SYMBOL:	 ARGS:data,
		 29: (AdminBadgesSerializer) def_%v_24 
		 30: %self->render_serialized def_%v_25 %self[2.0,] %v_23[2.28,] %v_24[2.29,] 	 SYMBOL:	 ARGS:%v_23,%v_24,
		 31: RETURN %v_25[2.30,] %self[2.0,2.30,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = preview instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (BadgeGranter) def_%v_3 
		 7: %self->params def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_4->[] def_%v_5 %v_4[2.7,] 	 SYMBOL:sql,	 ARGS:Symbol,
		 9: %self->params def_%v_6 %self[2.0,2.7,] 	 SYMBOL:	 ARGS:
		 10: %v_6->[] def_%v_7 %v_6[2.9,] 	 SYMBOL:target_posts,	 ARGS:Symbol,
		 11: COPY TYPE_StringLiteral "true" def_%v_8 
		 12: %v_7->== def_%v_9 %v_7[2.10,] %v_8[2.11,] 	 SYMBOL:	 ARGS:%v_8,
		 13: %self->params def_%v_10 %self[2.0,2.7,2.9,] 	 SYMBOL:	 ARGS:
		 14: %v_10->[] def_%v_11 %v_10[2.13,] 	 SYMBOL:explain,	 ARGS:Symbol,
		 15: COPY TYPE_StringLiteral "true" def_%v_12 
		 16: %v_11->== def_%v_13 %v_11[2.14,] %v_12[2.15,] 	 SYMBOL:	 ARGS:%v_12,
		 17: %self->params def_%v_14 %self[2.0,2.7,2.9,2.13,] 	 SYMBOL:	 ARGS:
		 18: %v_14->[] def_%v_15 %v_14[2.17,] 	 SYMBOL:trigger,	 ARGS:Symbol,
		 19: %v_15->to_i def_%v_16 %v_15[2.18,] 	 SYMBOL:	 ARGS:
		 20: HASH-target_posts-explain-trigger- def_%v_17 %v_9[2.12,] %v_13[2.16,] %v_16[2.19,] 
		 21: %v_3->preview def_%v_18 %v_3[2.6,] %v_5[2.8,] %v_17[2.20,] 	 SYMBOL:	 ARGS:%v_5,%v_17,
		 22: HASH-json- def_%v_19 %v_18[2.21,] 
		 23: %self->render def_%v_20 %self[2.0,2.7,2.9,2.13,2.17,] %v_19[2.22,] 	 SYMBOL:	 ARGS:%v_19,
		 24: RETURN %v_20[2.23,] %self[2.0,2.7,2.9,2.13,2.17,2.23,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = new instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = show instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = badge_types instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (BadgeType) def_%v_3 
		 7: %v_3->all def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->to_a def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: COPY TYPE_PASS def_badge_types %v_5[2.8,] 
		 10: 
		 11: (BadgeTypeSerializer) def_%v_6 
		 12: COPY TYPE_StringLiteral "badge_types" def_%v_7 
		 13: HASH-root- def_%v_8 %v_7[2.12,] 
		 14: %self->render_serialized def_%v_9 %self[2.0,] %v_5[2.8,] %v_6[2.11,] %v_8[2.13,] 	 SYMBOL:	 ARGS:badge_types,%v_6,%v_8,
		 15: RETURN %v_9[2.14,] %self[2.0,2.14,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = save_badge_groupings instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (BadgeGrouping) def_%v_3 
		 7: %v_3->all def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->order def_%v_5 %v_4[2.7,] 	 SYMBOL:position,	 ARGS:Symbol,
		 9: %v_5->to_a def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: COPY TYPE_PASS def_badge_groupings %v_6[2.9,] 
		 11: 
		 12: %self->params def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 13: %v_7->[] def_%v_8 %v_7[2.12,] 	 SYMBOL:ids,	 ARGS:Symbol,
		 14: %v_8->map def_%v_9 %v_8[2.13,] 	 SYMBOL:to_i,	 ARGS:
		 15: COPY TYPE_PASS def_ids %v_9[2.14,] 
		 16: 
		 17: %self->params def_%v_10 %self[2.0,2.12,] 	 SYMBOL:	 ARGS:
		 18: %v_10->[] def_%v_11 %v_10[2.17,] 	 SYMBOL:names,	 ARGS:Symbol,
		 19: %v_11->each_with_index def_%v_12 %v_11[2.18,] %self[2.0,2.12,2.17,] 	 SYMBOL:	 ARGS:%v_11,
CLOSURE BEGIN: ids[2.15,] index[] badge_groupings[2.10,] %self[2.0,2.12,2.17,] b[] id[] name[] group[] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_name 
		 3: RECEIVEARG def_index 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: ids->[] def_%cl_1_3 ids[] index[2.3,] 	 SYMBOL:	 ARGS:index,
		 2: %cl_1_3->to_i def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_PASS def_id %cl_1_4[3.2,] 
		 4: 
		 5: badge_groupings->find def_%cl_1_5 badge_groupings[] %self[2.0,] 	 SYMBOL:	 ARGS:badge_groupings,
CLOSURE BEGIN: b[] id[3.3,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_b 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: b->id def_%cl_2_3 b[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_2_3->== def_%cl_2_4 %cl_2_3[3.1,] id[] 	 SYMBOL:	 ARGS:id,
		 3: RETURN %cl_2_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 6: BRANCH %cl_1_5[3.5,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: (BadgeGrouping) def_%cl_1_6 
		 1: %cl_1_6->new def_%cl_1_7 %cl_1_6[4.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%cl_1_5 %cl_1_7[4.1,] 
BB 5
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_group %cl_1_5[4.2,3.5,] 
		 1: 
		 2: ATTRASSIGN %cl_1_5->name name[2.2,] 
		 3: 
		 4: ATTRASSIGN group->position index[2.3,] 
		 5: 
		 6: group->save def_%cl_1_8 group[5.0,5.4,] 	 SYMBOL:	 ARGS:
		 7: RETURN %cl_1_8[5.6,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[6.0,] 
		 2: RETURN %cl_1_10[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: index[2.3,] id[3.3,] group[5.0,5.4,] 
		 20: 
		 21: badge_groupings->each def_%v_13 badge_groupings[2.10,] %self[2.0,2.12,2.17,] 	 SYMBOL:	 ARGS:badge_groupings,
CLOSURE BEGIN: g[] ids[2.15,] 
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_g 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 9 
	datadep: 
	instructions:
		 0: 
		 1: g->system? def_%cl_3_3 g[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_3_3[3.1,] 
BB 4
	outgoing: 5 9 
	datadep: 
	instructions:
		 0: g->id def_%cl_3_4 g[2.2,] 	 SYMBOL:	 ARGS:
		 1: ids->include? def_%cl_3_5 ids[] %cl_3_4[4.0,] 	 SYMBOL:	 ARGS:%cl_3_4,
		 2: COPY TYPE_PASS def_%cl_3_3 %cl_3_5[4.1,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: BRANCH %cl_3_3[4.2,3.1,] 
BB 6
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_3_6 
		 1: RETURN %cl_3_6[6.0,] %self[2.0,] 
BB 7
	outgoing: 9 11 
	datadep: 
	instructions:
		 0: g->destroy def_%cl_3_7 g[2.2,] 	 SYMBOL:	 ARGS:
		 1: RETURN %cl_3_7[7.0,] %self[2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: def_%cl_3_8 
		 1: def_%cl_3_9 %cl_3_8[9.0,] 
		 2: RETURN %cl_3_9[9.1,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 22: 
		 23: (BadgeGrouping) def_%v_14 
		 24: %v_14->all def_%v_15 %v_14[2.23,] 	 SYMBOL:	 ARGS:
		 25: %v_15->order def_%v_16 %v_15[2.24,] 	 SYMBOL:position,	 ARGS:Symbol,
		 26: %v_16->to_a def_%v_17 %v_16[2.25,] 	 SYMBOL:	 ARGS:
		 27: COPY TYPE_PASS def_badge_groupings %v_17[2.26,] 
		 28: 
		 29: (BadgeGroupingSerializer) def_%v_18 
		 30: COPY TYPE_StringLiteral "badge_groupings" def_%v_19 
		 31: HASH-root- def_%v_20 %v_19[2.30,] 
		 32: %self->render_serialized def_%v_21 %self[2.0,2.12,2.17,] %v_17[2.26,] %v_18[2.29,] %v_20[2.31,] 	 SYMBOL:	 ARGS:badge_groupings,%v_18,%v_20,
		 33: RETURN %v_21[2.32,] %self[2.0,2.12,2.17,2.32,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = create instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Badge) def_%v_3 
		 7: %v_3->new def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_PASS def_badge %v_4[2.7,] 
		 9: 
		 10: HASH-new- def_%v_5 
		 11: %self->update_badge_from_params def_%v_6 %self[2.0,] %v_4[2.7,] %v_5[2.10,] 	 SYMBOL:	 ARGS:badge,%v_5,
		 12: COPY TYPE_PASS def_errors %v_6[2.11,] 
		 13: 
		 14: %v_6->present? def_%v_7 %v_6[2.11,] 	 SYMBOL:	 ARGS:
		 15: BRANCH %v_7[2.14,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->render_json_error def_%v_8 %self[2.0,] errors[2.12,] 	 SYMBOL:	 ARGS:errors,
		 2: RETURN %v_8[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: (BadgeSerializer) def_%v_9 
		 2: COPY TYPE_StringLiteral "badge" def_%v_10 
		 3: HASH-root- def_%v_11 %v_10[4.2,] 
		 4: %self->render_serialized def_%v_12 %self[2.0,] badge[2.8,] %v_9[4.1,] %v_11[4.3,] 	 SYMBOL:	 ARGS:badge,%v_9,%v_11,
		 5: RETURN %v_12[4.4,] %self[4.4,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->find_badge def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_PASS def_badge %v_3[2.6,] 
		 8: 
		 9: %self->update_badge_from_params def_%v_4 %self[2.0,2.6,] %v_3[2.6,] 	 SYMBOL:	 ARGS:badge,
		 10: COPY TYPE_PASS def_errors %v_4[2.9,] 
		 11: 
		 12: %v_4->present? def_%v_5 %v_4[2.9,] 	 SYMBOL:	 ARGS:
		 13: BRANCH %v_5[2.12,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->render_json_error def_%v_6 %self[2.0,] errors[2.10,] 	 SYMBOL:	 ARGS:errors,
		 2: RETURN %v_6[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: (BadgeSerializer) def_%v_7 
		 2: COPY TYPE_StringLiteral "badge" def_%v_8 
		 3: HASH-root- def_%v_9 %v_8[4.2,] 
		 4: %self->render_serialized def_%v_10 %self[2.0,] badge[2.7,] %v_7[4.1,] %v_9[4.3,] 	 SYMBOL:	 ARGS:badge,%v_7,%v_9,
		 5: RETURN %v_10[4.4,] %self[4.4,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = destroy instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->find_badge def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->destroy def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: 
		 9: HASH-nothing- def_%v_5 
		 10: %self->render def_%v_6 %self[2.0,2.6,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_5,
		 11: RETURN %v_6[2.10,] %self[2.0,2.6,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find_badge instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->params def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->require def_%v_4 %v_3[2.6,] 	 SYMBOL:id,	 ARGS:Symbol,
		 8: 
		 9: (Badge) def_%v_5 
		 10: %self->params def_%v_6 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 11: %v_6->[] def_%v_7 %v_6[2.10,] 	 SYMBOL:id,	 ARGS:Symbol,
		 12: %v_5->find def_%v_8 %v_5[2.9,] %v_7[2.11,] 	 SYMBOL:	 ARGS:%v_7,
		 13: RETURN %v_8[2.12,] %self[2.0,2.6,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_badge_from_params instanceMethod = true
BB 1
	outgoing: 19 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 17 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_badge 
		 6: RECEIVECONSTARG def_opts 
		 7: opts[2.6,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_opts %v_3[4.0,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: GLOBALVAR $! def_%v_4 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: COPY TYPE_Array def_%v_7 
		 3: COPY TYPE_PASS def_errors %v_7[7.2,] 
		 4: 
		 5: (Badge) def_%v_8 
		 6: %v_8->transaction def_%v_9 %v_8[7.5,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_8,
CLOSURE BEGIN: badge[2.5,] allowed[] %self[2.0,] key[] errors[7.3,] opts[4.1,2.6,] 
BB 1
	outgoing: 23 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 21 
	datadep: 
	instructions:
		 0: 
		 1: (Badge) def_%cl_1_3 
		 2: %cl_1_3->column_names def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->map def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:to_sym,	 ARGS:
		 4: COPY TYPE_PASS def_allowed %cl_1_5[3.3,] 
		 5: 
		 6: COPY TYPE_Array def_%cl_1_6 
		 7: %cl_1_5->- def_%cl_1_7 %cl_1_5[3.3,] %cl_1_6[3.6,] 	 SYMBOL:	 ARGS:%cl_1_6,
		 8: COPY TYPE_PASS def_allowed %cl_1_7[3.7,] 
		 9: 
		 10: badge->system? def_%cl_1_8 badge[] 	 SYMBOL:	 ARGS:
		 11: BRANCH %cl_1_8[3.10,] 
BB 4
	outgoing: 6 21 
	datadep: 
	instructions:
		 0: (Badge) def_%cl_1_9 
		 1: %cl_1_9->protected_system_fields def_%cl_1_10 %cl_1_9[4.0,] 	 SYMBOL:	 ARGS:
		 2: allowed->- def_%cl_1_11 allowed[3.4,3.8,] %cl_1_10[4.1,] 	 SYMBOL:	 ARGS:%cl_1_10,
		 3: COPY TYPE_PASS def_allowed %cl_1_11[4.2,] 
		 4: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_11 
BB 6
	outgoing: 7 21 
	datadep: 
	instructions:
		 0: 
		 1: %self->params def_%cl_1_12 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: def_%cl_1_13 allowed[4.3,3.4,3.8,] 
		 3: %cl_1_12->permit def_%cl_1_14 %cl_1_12[6.1,] %cl_1_13[6.2,] 	 SYMBOL:	 ARGS:Splat,
		 4: 
		 5: allowed->each def_%cl_1_15 allowed[4.3,3.4,3.8,] %self[6.1,2.0,] 	 SYMBOL:	 ARGS:allowed,
CLOSURE BEGIN: %self[6.1,2.0,] key[] badge[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_key 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->params def_%cl_2_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_2_3->[] def_%cl_2_4 %cl_2_3[3.1,] key[2.2,] 	 SYMBOL:	 ARGS:key,
		 3: BRANCH %cl_2_4[3.2,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "=" def_%cl_2_5 
		 1: BUILDSTRING def_%cl_2_6 key[2.2,] %cl_2_5[4.0,] 
		 2: %self->params def_%cl_2_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %cl_2_7->[] def_%cl_2_8 %cl_2_7[4.2,] key[2.2,] 	 SYMBOL:	 ARGS:key,
		 4: badge->send def_%cl_2_9 badge[] %cl_2_6[4.1,] %cl_2_8[4.3,] 	 SYMBOL:	 ARGS:%cl_2_6,%cl_2_8,
		 5: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_2_9[4.4,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_2_10 
		 1: def_%cl_2_11 %cl_2_10[7.0,] 
		 2: RETURN %cl_2_11[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 6: 
		 7: GLOBALVAR $! def_%cl_1_16 
BB 7
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: (BadgeGranter) def_%cl_1_19 
		 3: badge->query def_%cl_1_20 badge[] 	 SYMBOL:	 ARGS:
		 4: badge->target_posts def_%cl_1_21 badge[7.3,] 	 SYMBOL:	 ARGS:
		 5: badge->trigger def_%cl_1_22 badge[7.3,7.4,] 	 SYMBOL:	 ARGS:
		 6: HASH-target_posts-trigger- def_%cl_1_23 %cl_1_21[7.4,] %cl_1_22[7.5,] 
		 7: %cl_1_19->contract_checks! def_%cl_1_24 %cl_1_19[7.2,] %cl_1_20[7.3,] %cl_1_23[7.6,] 	 SYMBOL:	 ARGS:%cl_1_20,%cl_1_23,
		 8: COPY TYPE_PASS def_%cl_1_18 %cl_1_24[7.7,] 
		 9: %cl_1_16[6.7,] 
BB 9
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
BB 10
	outgoing: 11 12 16 
	datadep: 
	instructions:
		 0: def_%cl_1_25 
		 1: def_%cl_1_26 %cl_1_25[10.0,] 
		 2: BRANCH %cl_1_26[10.1,] 
BB 11
	outgoing: 16 23 
	datadep: 
	instructions:
		 0: %cl_1_25[10.0,] 
BB 12
	outgoing: 13 14 16 
	datadep: 
	instructions:
		 0: GLOBALVAR $! def_%cl_1_27 
		 1: COPY TYPE_PASS def_e %cl_1_27[12.0,] 
		 2: 
		 3: %cl_1_27->message def_%cl_1_28 %cl_1_27[12.0,] 	 SYMBOL:	 ARGS:
		 4: errors-><< def_%cl_1_29 errors[] %cl_1_28[12.3,] 	 SYMBOL:	 ARGS:%cl_1_28,
		 5: 
		 6: (ActiveRecord) def_%cl_1_30 
		 7: (inherit Rollback) def_%cl_1_31 %cl_1_30[12.6,] 
		 8: %cl_1_31[12.7,] 
BB 13
	outgoing: 14 16 
	datadep: 
	instructions:
		 0: %cl_1_30->const_missing def_%cl_1_31 %cl_1_30[12.6,] 	 SYMBOL:Rollback,	 ARGS:Symbol,
BB 14
	outgoing: 15 16 
	datadep: 
	instructions:
		 0: %self->raise def_%cl_1_32 %self[2.0,] %cl_1_31[13.0,12.7,] 	 SYMBOL:	 ARGS:%cl_1_31,
		 1: COPY TYPE_PASS def_%cl_1_18 %cl_1_32[14.0,] 
		 2: %cl_1_16[6.7,] 
BB 15
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
BB 16
	outgoing: 21 23 
	datadep: 
	instructions:
		 0: def_%cl_1_33 
		 1: def_%cl_1_34 %cl_1_33[16.0,] %cl_1_16[6.7,] 
		 2: %cl_1_33[16.0,] 
BB 17
	outgoing: 18 19 21 
	datadep: 
	instructions:
		 0: 
		 1: opts->[] def_%cl_1_35 opts[] 	 SYMBOL:new,	 ARGS:Symbol,
		 2: BRANCH %cl_1_35[17.1,] 
BB 18
	outgoing: 20 21 
	datadep: 
	instructions:
		 0: ATTRASSIGN badge->id 
		 1: COPY TYPE_Nil def_%cl_1_36 
		 2: 
BB 19
	outgoing: 20 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_36 
BB 20
	outgoing: 21 23 
	datadep: 
	instructions:
		 0: 
		 1: badge->save! def_%cl_1_37 badge[18.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_37[20.1,] %self[2.0,] 
BB 21
	outgoing: 23 
	datadep: 
	instructions:
		 0: def_%cl_1_38 
		 1: def_%cl_1_39 %cl_1_38[21.0,] 
		 2: RETURN %cl_1_39[21.1,] %self[2.0,] 
BB 23
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: e[12.1,] 
		 7: 
		 8: COPY TYPE_PASS def_%v_6 errors[7.3,] 
		 9: %v_4[5.0,] 
BB 8
	outgoing: 16 
	datadep: 
	instructions:
		 0: 
BB 9
	outgoing: 10 11 15 
	datadep: 
	instructions:
		 0: def_%v_10 
		 1: (ActiveRecord) def_%v_11 
		 2: (inherit RecordInvalid) def_%v_12 %v_11[9.1,] 
		 3: %v_12[9.2,] 
BB 10
	outgoing: 11 15 
	datadep: 
	instructions:
		 0: %v_11->const_missing def_%v_12 %v_11[9.1,] 	 SYMBOL:RecordInvalid,	 ARGS:Symbol,
BB 11
	outgoing: 12 13 15 
	datadep: 
	instructions:
		 0: def_%v_13 %v_12[10.0,9.2,] %v_10[9.0,] 
		 1: BRANCH %v_13[11.0,] 
BB 12
	outgoing: 15 19 
	datadep: 
	instructions:
		 0: %v_10[9.0,] 
BB 13
	outgoing: 14 15 
	datadep: 
	instructions:
		 0: 
		 1: badge->errors def_%v_15 badge[2.5,] 	 SYMBOL:	 ARGS:
		 2: %v_15->full_messages def_%v_16 %v_15[13.1,] 	 SYMBOL:	 ARGS:
		 3: def_%v_14 %v_16[13.2,] 
		 4: errors->push def_%v_17 errors[7.3,] %v_14[13.3,] 	 SYMBOL:	 ARGS:Splat,
		 5: 
		 6: COPY TYPE_PASS def_%v_6 errors[13.4,7.3,] 
		 7: %v_4[5.0,] 
BB 14
	outgoing: 16 
	datadep: 
	instructions:
		 0: 
BB 15
	outgoing: 17 19 
	datadep: 
	instructions:
		 0: def_%v_18 
		 1: def_%v_19 %v_18[15.0,] %v_4[5.0,] 
		 2: %v_18[15.0,] 
BB 16
	outgoing: 19 
	datadep: 
	instructions:
		 0: RETURN %v_6[7.8,13.6,] %self[2.0,] 
BB 17
	outgoing: 19 
	datadep: 
	instructions:
		 0: def_%v_20 
		 1: def_%v_21 %v_20[17.0,] 
		 2: RETURN %v_21[17.1,] %self[2.0,] 
BB 19
	outgoing: 
	datadep: 
	instructions:

