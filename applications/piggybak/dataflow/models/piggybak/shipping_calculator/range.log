SET IRMethod, name = description instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "Cost per Range" def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = available? instanceMethod = false
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_method 
		 6: RECEIVEARG def_object 
		 7: 
		 8: method->metadata def_%v_3 method[2.5,] 	 SYMBOL:	 ARGS:
		 9: %v_3->detect def_%v_4 %v_3[2.8,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: m[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_m 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: m->key def_%cl_1_3 m[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "lower" def_%cl_1_4 
		 3: %cl_1_3->== def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: RETURN %cl_1_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: %v_4->value def_%v_5 %v_4[2.9,] 	 SYMBOL:	 ARGS:
		 11: COPY TYPE_PASS def_low_end %v_5[2.10,] 
		 12: 
		 13: method->metadata def_%v_6 method[2.5,2.8,] 	 SYMBOL:	 ARGS:
		 14: %v_6->detect def_%v_7 %v_6[2.13,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_6,
CLOSURE BEGIN: m[2.9,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_m 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: m->key def_%cl_2_3 m[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "upper" def_%cl_2_4 
		 3: %cl_2_3->== def_%cl_2_5 %cl_2_3[3.1,] %cl_2_4[3.2,] 	 SYMBOL:	 ARGS:%cl_2_4,
		 4: RETURN %cl_2_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_6 
		 1: def_%cl_2_7 %cl_2_6[4.0,] 
		 2: RETURN %cl_2_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 15: %v_7->value def_%v_8 %v_7[2.14,] 	 SYMBOL:	 ARGS:
		 16: COPY TYPE_PASS def_high_end %v_8[2.15,] 
		 17: 
		 18: object->total def_%v_9 object[2.6,] 	 SYMBOL:	 ARGS:
		 19: low_end->to_f def_%v_10 low_end[2.11,] 	 SYMBOL:	 ARGS:
		 20: %v_9->>= def_%v_11 %v_9[2.18,] %v_10[2.19,] 	 SYMBOL:	 ARGS:%v_10,
		 21: BRANCH %v_11[2.20,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: object->total def_%v_12 object[2.6,] 	 SYMBOL:	 ARGS:
		 1: high_end->to_f def_%v_13 high_end[2.16,] 	 SYMBOL:	 ARGS:
		 2: %v_12-><= def_%v_14 %v_12[3.0,] %v_13[3.1,] 	 SYMBOL:	 ARGS:%v_13,
		 3: RETURN %v_14[3.2,] %self[2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_11[2.20,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = rate instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_method 
		 6: RECEIVEARG def_object 
		 7: 
		 8: method->metadata def_%v_3 method[2.5,] 	 SYMBOL:	 ARGS:
		 9: %v_3->detect def_%v_4 %v_3[2.8,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: m[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_m 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: m->key def_%cl_1_3 m[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "cost" def_%cl_1_4 
		 3: %cl_1_3->== def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 4: RETURN %cl_1_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: %v_4->value def_%v_5 %v_4[2.9,] 	 SYMBOL:	 ARGS:
		 11: %v_5->to_f def_%v_6 %v_5[2.10,] 	 SYMBOL:	 ARGS:
		 12: RETURN %v_6[2.11,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

