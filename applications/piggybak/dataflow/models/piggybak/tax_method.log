SET IRMethod, name = klass_enum instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Piggybak) def_%v_3 
		 7: %v_3->config def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->tax_calculators def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = calculate_tax instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_object 
		 6: 
		 7: COPY TYPE_Fixnum def_total_tax 
		 8: 
		 9: (TaxMethod) def_%v_3 
		 10: %v_3->all def_%v_4 %v_3[2.9,] 	 SYMBOL:	 ARGS:
		 11: %v_4->each def_%v_5 %v_4[2.10,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: tax_method[] object[2.5,] calculator[] total_tax[2.7,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_tax_method 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: tax_method->klass def_%cl_1_3 tax_method[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->constantize def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_PASS def_calculator %cl_1_4[3.2,] 
		 4: 
		 5: %cl_1_4->available? def_%cl_1_5 %cl_1_4[3.2,] tax_method[3.1,2.2,] object[] 	 SYMBOL:	 ARGS:tax_method,object,
		 6: BRANCH %cl_1_5[3.5,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: calculator->rate def_%cl_1_6 calculator[3.3,] tax_method[2.2,] object[] 	 SYMBOL:	 ARGS:tax_method,object,
		 2: total_tax->+ def_%cl_1_7 total_tax[] %cl_1_6[4.1,] 	 SYMBOL:	 ARGS:%cl_1_6,
		 3: COPY TYPE_PASS def_total_tax %cl_1_7[4.2,] 
		 4: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_1_7[4.2,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[7.0,] 
		 2: RETURN %cl_1_9[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: calculator[3.3,] total_tax[4.3,] 
		 12: 
		 13: total_tax->to_f def_%v_6 total_tax[2.7,2.11,] 	 SYMBOL:	 ARGS:
		 14: %v_6->* def_%v_7 %v_6[2.13,] 	 SYMBOL:	 ARGS:%v_6,
		 15: %v_7->to_i def_%v_8 %v_7[2.14,] 	 SYMBOL:	 ARGS:
		 16: %v_8->to_f def_%v_9 %v_8[2.15,] 	 SYMBOL:	 ARGS:
		 17: CONSTANT def_%v_10 	 SYMBOL:	 ARGS:
		 18: %v_9->/ def_%v_11 %v_9[2.16,] %v_10[2.17,] 	 SYMBOL:	 ARGS:%v_10,
		 19: RETURN %v_11[2.18,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = admin_label instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->description def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

